// $ANTLR 3.3 Nov 30, 2010 12:45:30 C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g 2011-06-23 18:12:56

package org.clothocad.tool.cello;

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;

public class VerilogAParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "SEMI", "LPAREN", "COMMA", "RPAREN", "DOT", "LCURLY", "RCURLY", "LBRACK", "COLON", "RBRACK", "ASSIGN", "NUMBER", "KW_TRIREG", "KW_ASSIGN", "POUND", "IDENTIFIER", "LE", "TRIGGER", "SYSTEM_TASK_NAME", "PPATH", "FPATH", "PLUS", "MINUS", "STRING", "DEFINE", "QUESTION", "LNOT", "BNOT", "BAND", "RNAND", "BOR", "RNOR", "BXOR", "BXNOR", "STAR", "DIV", "MOD", "EQUAL", "NOT_EQ", "EQ_CASE", "NOT_EQ_CASE", "LAND", "LOR", "LT_", "GT", "GE", "SR", "SL", "ESCAPED_IDENTIFIER", "AT", "VOCAB", "SIZE", "BASE", "SIZED_DIGIT", "SIZED_NUMBER", "UNSIZED_NUMBER", "DIGIT", "HEXDIGIT", "EXPONENT", "SPACE_OR_TAB", "WS", "ML_COMMENT", "SL_COMMENT", "'module'", "'macromodule'", "'endmodule'", "'primitive'", "'endprimitive'", "'initial'", "'1\\'b0'", "'1\\'b1'", "'1\\'bx'", "'table'", "'endtable'", "'task'", "'endtask'", "'function'", "'endfunction'", "'integer'", "'real'", "'parameter'", "'input'", "'output'", "'inout'", "'wire'", "'tri'", "'tri1'", "'supply0'", "'wand'", "'triand'", "'tri0'", "'supply1'", "'wor'", "'trior'", "'scalared'", "'vectored'", "'reg'", "'time'", "'event'", "'defparam'", "'small'", "'medium'", "'large'", "'strong0'", "'pull0'", "'weak0'", "'highz0'", "'strong1'", "'pull1'", "'weak1'", "'highz1'", "'and'", "'nand'", "'or'", "'nor'", "'xor'", "'xnor'", "'buf'", "'bufif0'", "'bufif1'", "'not'", "'notif0'", "'notif1'", "'pulldown'", "'pullup'", "'nmos'", "'rnmos'", "'pmos'", "'rpmos'", "'cmos'", "'rcmos'", "'tran'", "'rtran'", "'tranif0'", "'rtranif0'", "'tranif1'", "'rtranif1'", "'always'", "'if'", "'else'", "'endcase'", "'case'", "'casez'", "'casex'", "'default'", "'forever'", "'repeat'", "'while'", "'for'", "'wait'", "'disable'", "'begin'", "'end'", "'fork'", "'join'", "'deassign'", "'force'", "'release'", "'specify'", "'endspecify'", "'specparam'", "'$setup'", "'$hold'", "'$period'", "'$width'", "'$skew'", "'$recovery'", "'$setuphold'", "'&&&'", "'posedge'", "'negedge'", "'edge'", "'0x'", "'1x'", "'`define'", "'`include'"
    };
    public static final int EOF=-1;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__90=90;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__99=99;
    public static final int T__100=100;
    public static final int T__101=101;
    public static final int T__102=102;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int T__110=110;
    public static final int T__111=111;
    public static final int T__112=112;
    public static final int T__113=113;
    public static final int T__114=114;
    public static final int T__115=115;
    public static final int T__116=116;
    public static final int T__117=117;
    public static final int T__118=118;
    public static final int T__119=119;
    public static final int T__120=120;
    public static final int T__121=121;
    public static final int T__122=122;
    public static final int T__123=123;
    public static final int T__124=124;
    public static final int T__125=125;
    public static final int T__126=126;
    public static final int T__127=127;
    public static final int T__128=128;
    public static final int T__129=129;
    public static final int T__130=130;
    public static final int T__131=131;
    public static final int T__132=132;
    public static final int T__133=133;
    public static final int T__134=134;
    public static final int T__135=135;
    public static final int T__136=136;
    public static final int T__137=137;
    public static final int T__138=138;
    public static final int T__139=139;
    public static final int T__140=140;
    public static final int T__141=141;
    public static final int T__142=142;
    public static final int T__143=143;
    public static final int T__144=144;
    public static final int T__145=145;
    public static final int T__146=146;
    public static final int T__147=147;
    public static final int T__148=148;
    public static final int T__149=149;
    public static final int T__150=150;
    public static final int T__151=151;
    public static final int T__152=152;
    public static final int T__153=153;
    public static final int T__154=154;
    public static final int T__155=155;
    public static final int T__156=156;
    public static final int T__157=157;
    public static final int T__158=158;
    public static final int T__159=159;
    public static final int T__160=160;
    public static final int T__161=161;
    public static final int T__162=162;
    public static final int T__163=163;
    public static final int T__164=164;
    public static final int T__165=165;
    public static final int T__166=166;
    public static final int T__167=167;
    public static final int T__168=168;
    public static final int T__169=169;
    public static final int T__170=170;
    public static final int T__171=171;
    public static final int T__172=172;
    public static final int T__173=173;
    public static final int T__174=174;
    public static final int T__175=175;
    public static final int T__176=176;
    public static final int T__177=177;
    public static final int T__178=178;
    public static final int T__179=179;
    public static final int SEMI=4;
    public static final int LPAREN=5;
    public static final int COMMA=6;
    public static final int RPAREN=7;
    public static final int DOT=8;
    public static final int LCURLY=9;
    public static final int RCURLY=10;
    public static final int LBRACK=11;
    public static final int COLON=12;
    public static final int RBRACK=13;
    public static final int ASSIGN=14;
    public static final int NUMBER=15;
    public static final int KW_TRIREG=16;
    public static final int KW_ASSIGN=17;
    public static final int POUND=18;
    public static final int IDENTIFIER=19;
    public static final int LE=20;
    public static final int TRIGGER=21;
    public static final int SYSTEM_TASK_NAME=22;
    public static final int PPATH=23;
    public static final int FPATH=24;
    public static final int PLUS=25;
    public static final int MINUS=26;
    public static final int STRING=27;
    public static final int DEFINE=28;
    public static final int QUESTION=29;
    public static final int LNOT=30;
    public static final int BNOT=31;
    public static final int BAND=32;
    public static final int RNAND=33;
    public static final int BOR=34;
    public static final int RNOR=35;
    public static final int BXOR=36;
    public static final int BXNOR=37;
    public static final int STAR=38;
    public static final int DIV=39;
    public static final int MOD=40;
    public static final int EQUAL=41;
    public static final int NOT_EQ=42;
    public static final int EQ_CASE=43;
    public static final int NOT_EQ_CASE=44;
    public static final int LAND=45;
    public static final int LOR=46;
    public static final int LT_=47;
    public static final int GT=48;
    public static final int GE=49;
    public static final int SR=50;
    public static final int SL=51;
    public static final int ESCAPED_IDENTIFIER=52;
    public static final int AT=53;
    public static final int VOCAB=54;
    public static final int SIZE=55;
    public static final int BASE=56;
    public static final int SIZED_DIGIT=57;
    public static final int SIZED_NUMBER=58;
    public static final int UNSIZED_NUMBER=59;
    public static final int DIGIT=60;
    public static final int HEXDIGIT=61;
    public static final int EXPONENT=62;
    public static final int SPACE_OR_TAB=63;
    public static final int WS=64;
    public static final int ML_COMMENT=65;
    public static final int SL_COMMENT=66;

    // delegates
    // delegators


        public VerilogAParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public VerilogAParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        
    protected TreeAdaptor adaptor = new CommonTreeAdaptor();

    public void setTreeAdaptor(TreeAdaptor adaptor) {
        this.adaptor = adaptor;
    }
    public TreeAdaptor getTreeAdaptor() {
        return adaptor;
    }

    public String[] getTokenNames() { return VerilogAParser.tokenNames; }
    public String getGrammarFileName() { return "C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g"; }


    public static class source_text_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "source_text"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:19:1: source_text : ( description )* EOF ;
    public final VerilogAParser.source_text_return source_text() throws RecognitionException {
        VerilogAParser.source_text_return retval = new VerilogAParser.source_text_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token EOF2=null;
        VerilogAParser.description_return description1 = null;


        CommonTree EOF2_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:19:13: ( ( description )* EOF )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:20:9: ( description )* EOF
            {
            root_0 = (CommonTree)adaptor.nil();

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:20:9: ( description )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>=67 && LA1_0<=68)||LA1_0==70||(LA1_0>=178 && LA1_0<=179)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:20:11: description
            	    {
            	    pushFollow(FOLLOW_description_in_source_text84);
            	    description1=description();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, description1.getTree());

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            EOF2=(Token)match(input,EOF,FOLLOW_EOF_in_source_text90); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EOF2_tree = (CommonTree)adaptor.create(EOF2);
            adaptor.addChild(root_0, EOF2_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "source_text"

    public static class description_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "description"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:24:1: description : ( module | udp | directive );
    public final VerilogAParser.description_return description() throws RecognitionException {
        VerilogAParser.description_return retval = new VerilogAParser.description_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.module_return module3 = null;

        VerilogAParser.udp_return udp4 = null;

        VerilogAParser.directive_return directive5 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:24:13: ( module | udp | directive )
            int alt2=3;
            switch ( input.LA(1) ) {
            case 67:
            case 68:
                {
                alt2=1;
                }
                break;
            case 70:
                {
                alt2=2;
                }
                break;
            case 178:
            case 179:
                {
                alt2=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:25:9: module
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_module_in_description115);
                    module3=module();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, module3.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:26:9: udp
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_udp_in_description127);
                    udp4=udp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, udp4.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:27:2: directive
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_directive_in_description132);
                    directive5=directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, directive5.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "description"

    public static class module_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "module"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:30:1: module : ( 'module' | 'macromodule' ) name_of_module ( list_of_ports )? SEMI ( module_item )* 'endmodule' ;
    public final VerilogAParser.module_return module() throws RecognitionException {
        VerilogAParser.module_return retval = new VerilogAParser.module_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set6=null;
        Token SEMI9=null;
        Token string_literal11=null;
        VerilogAParser.name_of_module_return name_of_module7 = null;

        VerilogAParser.list_of_ports_return list_of_ports8 = null;

        VerilogAParser.module_item_return module_item10 = null;


        CommonTree set6_tree=null;
        CommonTree SEMI9_tree=null;
        CommonTree string_literal11_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:30:8: ( ( 'module' | 'macromodule' ) name_of_module ( list_of_ports )? SEMI ( module_item )* 'endmodule' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:31:9: ( 'module' | 'macromodule' ) name_of_module ( list_of_ports )? SEMI ( module_item )* 'endmodule'
            {
            root_0 = (CommonTree)adaptor.nil();

            set6=(Token)input.LT(1);
            set6=(Token)input.LT(1);
            if ( (input.LA(1)>=67 && input.LA(1)<=68) ) {
                input.consume();
                if ( state.backtracking==0 ) root_0 = (CommonTree)adaptor.becomeRoot((CommonTree)adaptor.create(set6), root_0);
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            pushFollow(FOLLOW_name_of_module_in_module169);
            name_of_module7=name_of_module();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_module7.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:33:9: ( list_of_ports )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==LPAREN) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:33:11: list_of_ports
                    {
                    pushFollow(FOLLOW_list_of_ports_in_module181);
                    list_of_ports8=list_of_ports();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_ports8.getTree());

                    }
                    break;

            }

            SEMI9=(Token)match(input,SEMI,FOLLOW_SEMI_in_module186); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI9_tree = (CommonTree)adaptor.create(SEMI9);
            adaptor.addChild(root_0, SEMI9_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:34:2: ( module_item )*
            loop4:
            do {
                int alt4=2;
                alt4 = dfa4.predict(input);
                switch (alt4) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:34:4: module_item
            	    {
            	    pushFollow(FOLLOW_module_item_in_module191);
            	    module_item10=module_item();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, module_item10.getTree());

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            string_literal11=(Token)match(input,69,FOLLOW_69_in_module197); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal11_tree = (CommonTree)adaptor.create(string_literal11);
            adaptor.addChild(root_0, string_literal11_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "module"

    public static class list_of_ports_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_ports"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:38:1: list_of_ports : LPAREN port ( COMMA port )* RPAREN ;
    public final VerilogAParser.list_of_ports_return list_of_ports() throws RecognitionException {
        VerilogAParser.list_of_ports_return retval = new VerilogAParser.list_of_ports_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN12=null;
        Token COMMA14=null;
        Token RPAREN16=null;
        VerilogAParser.port_return port13 = null;

        VerilogAParser.port_return port15 = null;


        CommonTree LPAREN12_tree=null;
        CommonTree COMMA14_tree=null;
        CommonTree RPAREN16_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:38:15: ( LPAREN port ( COMMA port )* RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:39:9: LPAREN port ( COMMA port )* RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN12=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_list_of_ports222); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN12_tree = (CommonTree)adaptor.create(LPAREN12);
            adaptor.addChild(root_0, LPAREN12_tree);
            }
            pushFollow(FOLLOW_port_in_list_of_ports224);
            port13=port();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, port13.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:39:21: ( COMMA port )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==COMMA) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:39:23: COMMA port
            	    {
            	    COMMA14=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_ports228); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA14_tree = (CommonTree)adaptor.create(COMMA14);
            	    adaptor.addChild(root_0, COMMA14_tree);
            	    }
            	    pushFollow(FOLLOW_port_in_list_of_ports230);
            	    port15=port();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, port15.getTree());

            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            RPAREN16=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_list_of_ports235); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN16_tree = (CommonTree)adaptor.create(RPAREN16);
            adaptor.addChild(root_0, RPAREN16_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_ports"

    public static class port_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "port"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:42:1: port : ( ( port_expression )? | DOT name_of_port LPAREN ( port_expression )? RPAREN );
    public final VerilogAParser.port_return port() throws RecognitionException {
        VerilogAParser.port_return retval = new VerilogAParser.port_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token DOT18=null;
        Token LPAREN20=null;
        Token RPAREN22=null;
        VerilogAParser.port_expression_return port_expression17 = null;

        VerilogAParser.name_of_port_return name_of_port19 = null;

        VerilogAParser.port_expression_return port_expression21 = null;


        CommonTree DOT18_tree=null;
        CommonTree LPAREN20_tree=null;
        CommonTree RPAREN22_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:42:6: ( ( port_expression )? | DOT name_of_port LPAREN ( port_expression )? RPAREN )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=COMMA && LA8_0<=RPAREN)||LA8_0==LCURLY||LA8_0==IDENTIFIER||LA8_0==ESCAPED_IDENTIFIER) ) {
                alt8=1;
            }
            else if ( (LA8_0==DOT) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:43:2: ( port_expression )?
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:43:2: ( port_expression )?
                    int alt6=2;
                    int LA6_0 = input.LA(1);

                    if ( (LA6_0==LCURLY||LA6_0==IDENTIFIER||LA6_0==ESCAPED_IDENTIFIER) ) {
                        alt6=1;
                    }
                    switch (alt6) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:43:3: port_expression
                            {
                            pushFollow(FOLLOW_port_expression_in_port254);
                            port_expression17=port_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, port_expression17.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:44:9: DOT name_of_port LPAREN ( port_expression )? RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    DOT18=(Token)match(input,DOT,FOLLOW_DOT_in_port268); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOT18_tree = (CommonTree)adaptor.create(DOT18);
                    adaptor.addChild(root_0, DOT18_tree);
                    }
                    pushFollow(FOLLOW_name_of_port_in_port270);
                    name_of_port19=name_of_port();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_port19.getTree());
                    LPAREN20=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_port272); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN20_tree = (CommonTree)adaptor.create(LPAREN20);
                    adaptor.addChild(root_0, LPAREN20_tree);
                    }
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:44:33: ( port_expression )?
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( (LA7_0==LCURLY||LA7_0==IDENTIFIER||LA7_0==ESCAPED_IDENTIFIER) ) {
                        alt7=1;
                    }
                    switch (alt7) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:44:34: port_expression
                            {
                            pushFollow(FOLLOW_port_expression_in_port275);
                            port_expression21=port_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, port_expression21.getTree());

                            }
                            break;

                    }

                    RPAREN22=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_port279); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN22_tree = (CommonTree)adaptor.create(RPAREN22);
                    adaptor.addChild(root_0, RPAREN22_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "port"

    public static class port_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "port_expression"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:47:1: port_expression : ( port_reference | LCURLY port_reference ( COMMA port_reference )* RCURLY );
    public final VerilogAParser.port_expression_return port_expression() throws RecognitionException {
        VerilogAParser.port_expression_return retval = new VerilogAParser.port_expression_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LCURLY24=null;
        Token COMMA26=null;
        Token RCURLY28=null;
        VerilogAParser.port_reference_return port_reference23 = null;

        VerilogAParser.port_reference_return port_reference25 = null;

        VerilogAParser.port_reference_return port_reference27 = null;


        CommonTree LCURLY24_tree=null;
        CommonTree COMMA26_tree=null;
        CommonTree RCURLY28_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:47:17: ( port_reference | LCURLY port_reference ( COMMA port_reference )* RCURLY )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==IDENTIFIER||LA10_0==ESCAPED_IDENTIFIER) ) {
                alt10=1;
            }
            else if ( (LA10_0==LCURLY) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:48:9: port_reference
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_port_reference_in_port_expression297);
                    port_reference23=port_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, port_reference23.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:49:2: LCURLY port_reference ( COMMA port_reference )* RCURLY
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LCURLY24=(Token)match(input,LCURLY,FOLLOW_LCURLY_in_port_expression302); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LCURLY24_tree = (CommonTree)adaptor.create(LCURLY24);
                    adaptor.addChild(root_0, LCURLY24_tree);
                    }
                    pushFollow(FOLLOW_port_reference_in_port_expression304);
                    port_reference25=port_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, port_reference25.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:49:24: ( COMMA port_reference )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==COMMA) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:49:26: COMMA port_reference
                    	    {
                    	    COMMA26=(Token)match(input,COMMA,FOLLOW_COMMA_in_port_expression308); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA26_tree = (CommonTree)adaptor.create(COMMA26);
                    	    adaptor.addChild(root_0, COMMA26_tree);
                    	    }
                    	    pushFollow(FOLLOW_port_reference_in_port_expression310);
                    	    port_reference27=port_reference();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, port_reference27.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);

                    RCURLY28=(Token)match(input,RCURLY,FOLLOW_RCURLY_in_port_expression315); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RCURLY28_tree = (CommonTree)adaptor.create(RCURLY28);
                    adaptor.addChild(root_0, RCURLY28_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "port_expression"

    public static class port_reference_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "port_reference"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:52:1: port_reference : ( ( name_of_variable LBRACK expression COLON )=> name_of_variable LBRACK expression COLON expression RBRACK | ( name_of_variable LBRACK )=> name_of_variable LBRACK expression RBRACK | name_of_variable );
    public final VerilogAParser.port_reference_return port_reference() throws RecognitionException {
        VerilogAParser.port_reference_return retval = new VerilogAParser.port_reference_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LBRACK30=null;
        Token COLON32=null;
        Token RBRACK34=null;
        Token LBRACK36=null;
        Token RBRACK38=null;
        VerilogAParser.name_of_variable_return name_of_variable29 = null;

        VerilogAParser.expression_return expression31 = null;

        VerilogAParser.expression_return expression33 = null;

        VerilogAParser.name_of_variable_return name_of_variable35 = null;

        VerilogAParser.expression_return expression37 = null;

        VerilogAParser.name_of_variable_return name_of_variable39 = null;


        CommonTree LBRACK30_tree=null;
        CommonTree COLON32_tree=null;
        CommonTree RBRACK34_tree=null;
        CommonTree LBRACK36_tree=null;
        CommonTree RBRACK38_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:52:16: ( ( name_of_variable LBRACK expression COLON )=> name_of_variable LBRACK expression COLON expression RBRACK | ( name_of_variable LBRACK )=> name_of_variable LBRACK expression RBRACK | name_of_variable )
            int alt11=3;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:53:9: ( name_of_variable LBRACK expression COLON )=> name_of_variable LBRACK expression COLON expression RBRACK
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_name_of_variable_in_port_reference362);
                    name_of_variable29=name_of_variable();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable29.getTree());
                    LBRACK30=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_port_reference364); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACK30_tree = (CommonTree)adaptor.create(LBRACK30);
                    adaptor.addChild(root_0, LBRACK30_tree);
                    }
                    pushFollow(FOLLOW_expression_in_port_reference366);
                    expression31=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression31.getTree());
                    COLON32=(Token)match(input,COLON,FOLLOW_COLON_in_port_reference368); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON32_tree = (CommonTree)adaptor.create(COLON32);
                    adaptor.addChild(root_0, COLON32_tree);
                    }
                    pushFollow(FOLLOW_expression_in_port_reference370);
                    expression33=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression33.getTree());
                    RBRACK34=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_port_reference372); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACK34_tree = (CommonTree)adaptor.create(RBRACK34);
                    adaptor.addChild(root_0, RBRACK34_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:55:9: ( name_of_variable LBRACK )=> name_of_variable LBRACK expression RBRACK
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_name_of_variable_in_port_reference402);
                    name_of_variable35=name_of_variable();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable35.getTree());
                    LBRACK36=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_port_reference404); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACK36_tree = (CommonTree)adaptor.create(LBRACK36);
                    adaptor.addChild(root_0, LBRACK36_tree);
                    }
                    pushFollow(FOLLOW_expression_in_port_reference406);
                    expression37=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression37.getTree());
                    RBRACK38=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_port_reference408); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACK38_tree = (CommonTree)adaptor.create(RBRACK38);
                    adaptor.addChild(root_0, RBRACK38_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:57:9: name_of_variable
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_name_of_variable_in_port_reference420);
                    name_of_variable39=name_of_variable();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable39.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "port_reference"

    public static class module_item_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "module_item"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:60:1: module_item : ( parameter_declaration | input_declaration | output_declaration | inout_declaration | reg_declaration | time_declaration | integer_declaration | real_declaration | event_declaration | gate_declaration | instantiation | parameter_override | continuous_assign | specify_block | initial_statement | always_statement | task | function | directive );
    public final VerilogAParser.module_item_return module_item() throws RecognitionException {
        VerilogAParser.module_item_return retval = new VerilogAParser.module_item_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.parameter_declaration_return parameter_declaration40 = null;

        VerilogAParser.input_declaration_return input_declaration41 = null;

        VerilogAParser.output_declaration_return output_declaration42 = null;

        VerilogAParser.inout_declaration_return inout_declaration43 = null;

        VerilogAParser.reg_declaration_return reg_declaration44 = null;

        VerilogAParser.time_declaration_return time_declaration45 = null;

        VerilogAParser.integer_declaration_return integer_declaration46 = null;

        VerilogAParser.real_declaration_return real_declaration47 = null;

        VerilogAParser.event_declaration_return event_declaration48 = null;

        VerilogAParser.gate_declaration_return gate_declaration49 = null;

        VerilogAParser.instantiation_return instantiation50 = null;

        VerilogAParser.parameter_override_return parameter_override51 = null;

        VerilogAParser.continuous_assign_return continuous_assign52 = null;

        VerilogAParser.specify_block_return specify_block53 = null;

        VerilogAParser.initial_statement_return initial_statement54 = null;

        VerilogAParser.always_statement_return always_statement55 = null;

        VerilogAParser.task_return task56 = null;

        VerilogAParser.function_return function57 = null;

        VerilogAParser.directive_return directive58 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:60:13: ( parameter_declaration | input_declaration | output_declaration | inout_declaration | reg_declaration | time_declaration | integer_declaration | real_declaration | event_declaration | gate_declaration | instantiation | parameter_override | continuous_assign | specify_block | initial_statement | always_statement | task | function | directive )
            int alt12=19;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:63:9: parameter_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_parameter_declaration_in_module_item452);
                    parameter_declaration40=parameter_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_declaration40.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:64:9: input_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_input_declaration_in_module_item464);
                    input_declaration41=input_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, input_declaration41.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:65:9: output_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_output_declaration_in_module_item476);
                    output_declaration42=output_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, output_declaration42.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:66:9: inout_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_inout_declaration_in_module_item488);
                    inout_declaration43=inout_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inout_declaration43.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:68:9: reg_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_reg_declaration_in_module_item509);
                    reg_declaration44=reg_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, reg_declaration44.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:69:9: time_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_time_declaration_in_module_item521);
                    time_declaration45=time_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, time_declaration45.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:70:9: integer_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_integer_declaration_in_module_item533);
                    integer_declaration46=integer_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, integer_declaration46.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:71:9: real_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_real_declaration_in_module_item545);
                    real_declaration47=real_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, real_declaration47.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:72:9: event_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_event_declaration_in_module_item557);
                    event_declaration48=event_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration48.getTree());

                    }
                    break;
                case 10 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:73:3: gate_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_gate_declaration_in_module_item563);
                    gate_declaration49=gate_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, gate_declaration49.getTree());

                    }
                    break;
                case 11 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:74:9: instantiation
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_instantiation_in_module_item575);
                    instantiation50=instantiation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, instantiation50.getTree());

                    }
                    break;
                case 12 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:75:9: parameter_override
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_parameter_override_in_module_item587);
                    parameter_override51=parameter_override();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_override51.getTree());

                    }
                    break;
                case 13 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:76:9: continuous_assign
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_continuous_assign_in_module_item599);
                    continuous_assign52=continuous_assign();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, continuous_assign52.getTree());

                    }
                    break;
                case 14 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:77:9: specify_block
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_specify_block_in_module_item611);
                    specify_block53=specify_block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_block53.getTree());

                    }
                    break;
                case 15 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:78:9: initial_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_initial_statement_in_module_item623);
                    initial_statement54=initial_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, initial_statement54.getTree());

                    }
                    break;
                case 16 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:79:9: always_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_always_statement_in_module_item635);
                    always_statement55=always_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, always_statement55.getTree());

                    }
                    break;
                case 17 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:80:9: task
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_task_in_module_item647);
                    task56=task();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, task56.getTree());

                    }
                    break;
                case 18 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:81:9: function
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_function_in_module_item659);
                    function57=function();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, function57.getTree());

                    }
                    break;
                case 19 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:82:3: directive
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_directive_in_module_item665);
                    directive58=directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, directive58.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "module_item"

    public static class instantiation_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "instantiation"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:85:1: instantiation : ( ( module_instantiation )=> module_instantiation | udp_instantiation );
    public final VerilogAParser.instantiation_return instantiation() throws RecognitionException {
        VerilogAParser.instantiation_return retval = new VerilogAParser.instantiation_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.module_instantiation_return module_instantiation59 = null;

        VerilogAParser.udp_instantiation_return udp_instantiation60 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:85:14: ( ( module_instantiation )=> module_instantiation | udp_instantiation )
            int alt13=2;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:86:2: ( module_instantiation )=> module_instantiation
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_module_instantiation_in_instantiation688);
                    module_instantiation59=module_instantiation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, module_instantiation59.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:87:2: udp_instantiation
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_udp_instantiation_in_instantiation693);
                    udp_instantiation60=udp_instantiation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, udp_instantiation60.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "instantiation"

    public static class udp_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "udp"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:94:1: udp : 'primitive' name_of_UDP LPAREN name_of_variable ( COMMA name_of_variable )* RPAREN SEMI ( udp_declaration )+ ( udp_initial_statement )? table_definition 'endprimitive' ;
    public final VerilogAParser.udp_return udp() throws RecognitionException {
        VerilogAParser.udp_return retval = new VerilogAParser.udp_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal61=null;
        Token LPAREN63=null;
        Token COMMA65=null;
        Token RPAREN67=null;
        Token SEMI68=null;
        Token string_literal72=null;
        VerilogAParser.name_of_UDP_return name_of_UDP62 = null;

        VerilogAParser.name_of_variable_return name_of_variable64 = null;

        VerilogAParser.name_of_variable_return name_of_variable66 = null;

        VerilogAParser.udp_declaration_return udp_declaration69 = null;

        VerilogAParser.udp_initial_statement_return udp_initial_statement70 = null;

        VerilogAParser.table_definition_return table_definition71 = null;


        CommonTree string_literal61_tree=null;
        CommonTree LPAREN63_tree=null;
        CommonTree COMMA65_tree=null;
        CommonTree RPAREN67_tree=null;
        CommonTree SEMI68_tree=null;
        CommonTree string_literal72_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:94:5: ( 'primitive' name_of_UDP LPAREN name_of_variable ( COMMA name_of_variable )* RPAREN SEMI ( udp_declaration )+ ( udp_initial_statement )? table_definition 'endprimitive' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:95:9: 'primitive' name_of_UDP LPAREN name_of_variable ( COMMA name_of_variable )* RPAREN SEMI ( udp_declaration )+ ( udp_initial_statement )? table_definition 'endprimitive'
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal61=(Token)match(input,70,FOLLOW_70_in_udp715); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal61_tree = (CommonTree)adaptor.create(string_literal61);
            adaptor.addChild(root_0, string_literal61_tree);
            }
            pushFollow(FOLLOW_name_of_UDP_in_udp717);
            name_of_UDP62=name_of_UDP();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_UDP62.getTree());
            LPAREN63=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_udp720); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN63_tree = (CommonTree)adaptor.create(LPAREN63);
            adaptor.addChild(root_0, LPAREN63_tree);
            }
            pushFollow(FOLLOW_name_of_variable_in_udp722);
            name_of_variable64=name_of_variable();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable64.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:96:26: ( COMMA name_of_variable )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==COMMA) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:96:28: COMMA name_of_variable
            	    {
            	    COMMA65=(Token)match(input,COMMA,FOLLOW_COMMA_in_udp726); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA65_tree = (CommonTree)adaptor.create(COMMA65);
            	    adaptor.addChild(root_0, COMMA65_tree);
            	    }
            	    pushFollow(FOLLOW_name_of_variable_in_udp728);
            	    name_of_variable66=name_of_variable();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable66.getTree());

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            RPAREN67=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_udp733); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN67_tree = (CommonTree)adaptor.create(RPAREN67);
            adaptor.addChild(root_0, RPAREN67_tree);
            }
            SEMI68=(Token)match(input,SEMI,FOLLOW_SEMI_in_udp735); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI68_tree = (CommonTree)adaptor.create(SEMI68);
            adaptor.addChild(root_0, SEMI68_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:97:9: ( udp_declaration )+
            int cnt15=0;
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( ((LA15_0>=85 && LA15_0<=86)||LA15_0==100) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:97:10: udp_declaration
            	    {
            	    pushFollow(FOLLOW_udp_declaration_in_udp746);
            	    udp_declaration69=udp_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, udp_declaration69.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt15 >= 1 ) break loop15;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(15, input);
                        throw eee;
                }
                cnt15++;
            } while (true);

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:98:2: ( udp_initial_statement )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==72) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:98:3: udp_initial_statement
                    {
                    pushFollow(FOLLOW_udp_initial_statement_in_udp752);
                    udp_initial_statement70=udp_initial_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, udp_initial_statement70.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_table_definition_in_udp757);
            table_definition71=table_definition();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, table_definition71.getTree());
            string_literal72=(Token)match(input,71,FOLLOW_71_in_udp767); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal72_tree = (CommonTree)adaptor.create(string_literal72);
            adaptor.addChild(root_0, string_literal72_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "udp"

    public static class udp_port_list_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "udp_port_list"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:103:1: udp_port_list : udp_name_of_port ( COMMA udp_name_of_port )* ;
    public final VerilogAParser.udp_port_list_return udp_port_list() throws RecognitionException {
        VerilogAParser.udp_port_list_return retval = new VerilogAParser.udp_port_list_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA74=null;
        VerilogAParser.udp_name_of_port_return udp_name_of_port73 = null;

        VerilogAParser.udp_name_of_port_return udp_name_of_port75 = null;


        CommonTree COMMA74_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:103:15: ( udp_name_of_port ( COMMA udp_name_of_port )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:104:9: udp_name_of_port ( COMMA udp_name_of_port )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_udp_name_of_port_in_udp_port_list792);
            udp_name_of_port73=udp_name_of_port();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, udp_name_of_port73.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:104:26: ( COMMA udp_name_of_port )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==COMMA) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:104:28: COMMA udp_name_of_port
            	    {
            	    COMMA74=(Token)match(input,COMMA,FOLLOW_COMMA_in_udp_port_list796); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA74_tree = (CommonTree)adaptor.create(COMMA74);
            	    adaptor.addChild(root_0, COMMA74_tree);
            	    }
            	    pushFollow(FOLLOW_udp_name_of_port_in_udp_port_list798);
            	    udp_name_of_port75=udp_name_of_port();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, udp_name_of_port75.getTree());

            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "udp_port_list"

    public static class udp_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "udp_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:107:1: udp_declaration : ( output_declaration | input_declaration | reg_declaration );
    public final VerilogAParser.udp_declaration_return udp_declaration() throws RecognitionException {
        VerilogAParser.udp_declaration_return retval = new VerilogAParser.udp_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.output_declaration_return output_declaration76 = null;

        VerilogAParser.input_declaration_return input_declaration77 = null;

        VerilogAParser.reg_declaration_return reg_declaration78 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:107:17: ( output_declaration | input_declaration | reg_declaration )
            int alt18=3;
            switch ( input.LA(1) ) {
            case 86:
                {
                alt18=1;
                }
                break;
            case 85:
                {
                alt18=2;
                }
                break;
            case 100:
                {
                alt18=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:108:9: output_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_output_declaration_in_udp_declaration826);
                    output_declaration76=output_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, output_declaration76.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:109:9: input_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_input_declaration_in_udp_declaration838);
                    input_declaration77=input_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, input_declaration77.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:110:9: reg_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_reg_declaration_in_udp_declaration850);
                    reg_declaration78=reg_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, reg_declaration78.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "udp_declaration"

    public static class udp_initial_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "udp_initial_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:113:1: udp_initial_statement : 'initial' output_terminal_name ASSIGN init_val SEMI ;
    public final VerilogAParser.udp_initial_statement_return udp_initial_statement() throws RecognitionException {
        VerilogAParser.udp_initial_statement_return retval = new VerilogAParser.udp_initial_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal79=null;
        Token ASSIGN81=null;
        Token SEMI83=null;
        VerilogAParser.output_terminal_name_return output_terminal_name80 = null;

        VerilogAParser.init_val_return init_val82 = null;


        CommonTree string_literal79_tree=null;
        CommonTree ASSIGN81_tree=null;
        CommonTree SEMI83_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:113:23: ( 'initial' output_terminal_name ASSIGN init_val SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:114:9: 'initial' output_terminal_name ASSIGN init_val SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal79=(Token)match(input,72,FOLLOW_72_in_udp_initial_statement875); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal79_tree = (CommonTree)adaptor.create(string_literal79);
            adaptor.addChild(root_0, string_literal79_tree);
            }
            pushFollow(FOLLOW_output_terminal_name_in_udp_initial_statement877);
            output_terminal_name80=output_terminal_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, output_terminal_name80.getTree());
            ASSIGN81=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_udp_initial_statement879); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGN81_tree = (CommonTree)adaptor.create(ASSIGN81);
            adaptor.addChild(root_0, ASSIGN81_tree);
            }
            pushFollow(FOLLOW_init_val_in_udp_initial_statement881);
            init_val82=init_val();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, init_val82.getTree());
            SEMI83=(Token)match(input,SEMI,FOLLOW_SEMI_in_udp_initial_statement883); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI83_tree = (CommonTree)adaptor.create(SEMI83);
            adaptor.addChild(root_0, SEMI83_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "udp_initial_statement"

    public static class init_val_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "init_val"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:121:1: init_val : ( '1\\'b0' | '1\\'b1' | '1\\'bx' | n= NUMBER {...}?);
    public final VerilogAParser.init_val_return init_val() throws RecognitionException {
        VerilogAParser.init_val_return retval = new VerilogAParser.init_val_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token n=null;
        Token string_literal84=null;
        Token string_literal85=null;
        Token string_literal86=null;

        CommonTree n_tree=null;
        CommonTree string_literal84_tree=null;
        CommonTree string_literal85_tree=null;
        CommonTree string_literal86_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:121:10: ( '1\\'b0' | '1\\'b1' | '1\\'bx' | n= NUMBER {...}?)
            int alt19=4;
            switch ( input.LA(1) ) {
            case 73:
                {
                alt19=1;
                }
                break;
            case 74:
                {
                alt19=2;
                }
                break;
            case 75:
                {
                alt19=3;
                }
                break;
            case NUMBER:
                {
                alt19=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:122:9: '1\\'b0'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal84=(Token)match(input,73,FOLLOW_73_in_init_val924); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal84_tree = (CommonTree)adaptor.create(string_literal84);
                    adaptor.addChild(root_0, string_literal84_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:123:9: '1\\'b1'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal85=(Token)match(input,74,FOLLOW_74_in_init_val936); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal85_tree = (CommonTree)adaptor.create(string_literal85);
                    adaptor.addChild(root_0, string_literal85_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:124:9: '1\\'bx'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal86=(Token)match(input,75,FOLLOW_75_in_init_val948); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal86_tree = (CommonTree)adaptor.create(string_literal86);
                    adaptor.addChild(root_0, string_literal86_tree);
                    }

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:125:2: n= NUMBER {...}?
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    n=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_init_val955); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n_tree = (CommonTree)adaptor.create(n);
                    adaptor.addChild(root_0, n_tree);
                    }
                    if ( !(( (n!=null?n.getText():null)=="0" || (n!=null?n.getText():null)=="1")) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "init_val", " $n.text==\"0\" || $n.text==\"1\"");
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "init_val"

    public static class table_definition_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "table_definition"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:129:1: table_definition : 'table' table_entries 'endtable' ;
    public final VerilogAParser.table_definition_return table_definition() throws RecognitionException {
        VerilogAParser.table_definition_return retval = new VerilogAParser.table_definition_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal87=null;
        Token string_literal89=null;
        VerilogAParser.table_entries_return table_entries88 = null;


        CommonTree string_literal87_tree=null;
        CommonTree string_literal89_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:129:18: ( 'table' table_entries 'endtable' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:130:9: 'table' table_entries 'endtable'
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal87=(Token)match(input,76,FOLLOW_76_in_table_definition976); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal87_tree = (CommonTree)adaptor.create(string_literal87);
            adaptor.addChild(root_0, string_literal87_tree);
            }
            pushFollow(FOLLOW_table_entries_in_table_definition978);
            table_entries88=table_entries();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, table_entries88.getTree());
            string_literal89=(Token)match(input,77,FOLLOW_77_in_table_definition980); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal89_tree = (CommonTree)adaptor.create(string_literal89);
            adaptor.addChild(root_0, string_literal89_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "table_definition"

    public static class table_entries_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "table_entries"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:139:1: table_entries : ( (~ ( SEMI | 'endtable' ) )+ SEMI )* ;
    public final VerilogAParser.table_entries_return table_entries() throws RecognitionException {
        VerilogAParser.table_entries_return retval = new VerilogAParser.table_entries_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set90=null;
        Token SEMI91=null;

        CommonTree set90_tree=null;
        CommonTree SEMI91_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:139:15: ( ( (~ ( SEMI | 'endtable' ) )+ SEMI )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:142:2: ( (~ ( SEMI | 'endtable' ) )+ SEMI )*
            {
            root_0 = (CommonTree)adaptor.nil();

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:142:2: ( (~ ( SEMI | 'endtable' ) )+ SEMI )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( ((LA21_0>=LPAREN && LA21_0<=76)||(LA21_0>=78 && LA21_0<=179)) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:142:3: (~ ( SEMI | 'endtable' ) )+ SEMI
            	    {
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:142:3: (~ ( SEMI | 'endtable' ) )+
            	    int cnt20=0;
            	    loop20:
            	    do {
            	        int alt20=2;
            	        int LA20_0 = input.LA(1);

            	        if ( ((LA20_0>=LPAREN && LA20_0<=76)||(LA20_0>=78 && LA20_0<=179)) ) {
            	            alt20=1;
            	        }


            	        switch (alt20) {
            	    	case 1 :
            	    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:142:5: ~ ( SEMI | 'endtable' )
            	    	    {
            	    	    set90=(Token)input.LT(1);
            	    	    if ( (input.LA(1)>=LPAREN && input.LA(1)<=76)||(input.LA(1)>=78 && input.LA(1)<=179) ) {
            	    	        input.consume();
            	    	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set90));
            	    	        state.errorRecovery=false;state.failed=false;
            	    	    }
            	    	    else {
            	    	        if (state.backtracking>0) {state.failed=true; return retval;}
            	    	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	    	        throw mse;
            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt20 >= 1 ) break loop20;
            	    	    if (state.backtracking>0) {state.failed=true; return retval;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(20, input);
            	                throw eee;
            	        }
            	        cnt20++;
            	    } while (true);

            	    SEMI91=(Token)match(input,SEMI,FOLLOW_SEMI_in_table_entries1041); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    SEMI91_tree = (CommonTree)adaptor.create(SEMI91);
            	    adaptor.addChild(root_0, SEMI91_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "table_entries"

    public static class task_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "task"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:146:1: task : 'task' name_of_task SEMI ( tf_declaration )* statement_or_null 'endtask' ;
    public final VerilogAParser.task_return task() throws RecognitionException {
        VerilogAParser.task_return retval = new VerilogAParser.task_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal92=null;
        Token SEMI94=null;
        Token string_literal97=null;
        VerilogAParser.name_of_task_return name_of_task93 = null;

        VerilogAParser.tf_declaration_return tf_declaration95 = null;

        VerilogAParser.statement_or_null_return statement_or_null96 = null;


        CommonTree string_literal92_tree=null;
        CommonTree SEMI94_tree=null;
        CommonTree string_literal97_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:223:6: ( 'task' name_of_task SEMI ( tf_declaration )* statement_or_null 'endtask' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:224:9: 'task' name_of_task SEMI ( tf_declaration )* statement_or_null 'endtask'
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal92=(Token)match(input,78,FOLLOW_78_in_task1066); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal92_tree = (CommonTree)adaptor.create(string_literal92);
            adaptor.addChild(root_0, string_literal92_tree);
            }
            pushFollow(FOLLOW_name_of_task_in_task1068);
            name_of_task93=name_of_task();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_task93.getTree());
            SEMI94=(Token)match(input,SEMI,FOLLOW_SEMI_in_task1070); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI94_tree = (CommonTree)adaptor.create(SEMI94);
            adaptor.addChild(root_0, SEMI94_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:225:9: ( tf_declaration )*
            loop22:
            do {
                int alt22=2;
                alt22 = dfa22.predict(input);
                switch (alt22) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:225:10: tf_declaration
            	    {
            	    pushFollow(FOLLOW_tf_declaration_in_task1081);
            	    tf_declaration95=tf_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tf_declaration95.getTree());

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            pushFollow(FOLLOW_statement_or_null_in_task1093);
            statement_or_null96=statement_or_null();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_or_null96.getTree());
            string_literal97=(Token)match(input,79,FOLLOW_79_in_task1103); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal97_tree = (CommonTree)adaptor.create(string_literal97);
            adaptor.addChild(root_0, string_literal97_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "task"

    public static class function_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "function"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:230:1: function : 'function' ( range_or_type )? name_of_function SEMI ( tf_declaration )+ statement 'endfunction' ;
    public final VerilogAParser.function_return function() throws RecognitionException {
        VerilogAParser.function_return retval = new VerilogAParser.function_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal98=null;
        Token SEMI101=null;
        Token string_literal104=null;
        VerilogAParser.range_or_type_return range_or_type99 = null;

        VerilogAParser.name_of_function_return name_of_function100 = null;

        VerilogAParser.tf_declaration_return tf_declaration102 = null;

        VerilogAParser.statement_return statement103 = null;


        CommonTree string_literal98_tree=null;
        CommonTree SEMI101_tree=null;
        CommonTree string_literal104_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:230:10: ( 'function' ( range_or_type )? name_of_function SEMI ( tf_declaration )+ statement 'endfunction' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:231:9: 'function' ( range_or_type )? name_of_function SEMI ( tf_declaration )+ statement 'endfunction'
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal98=(Token)match(input,80,FOLLOW_80_in_function1128); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal98_tree = (CommonTree)adaptor.create(string_literal98);
            adaptor.addChild(root_0, string_literal98_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:231:20: ( range_or_type )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==LBRACK||(LA23_0>=82 && LA23_0<=83)) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:231:21: range_or_type
                    {
                    pushFollow(FOLLOW_range_or_type_in_function1131);
                    range_or_type99=range_or_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range_or_type99.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_name_of_function_in_function1135);
            name_of_function100=name_of_function();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_function100.getTree());
            SEMI101=(Token)match(input,SEMI,FOLLOW_SEMI_in_function1137); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI101_tree = (CommonTree)adaptor.create(SEMI101);
            adaptor.addChild(root_0, SEMI101_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:232:9: ( tf_declaration )+
            int cnt24=0;
            loop24:
            do {
                int alt24=2;
                alt24 = dfa24.predict(input);
                switch (alt24) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:232:10: tf_declaration
            	    {
            	    pushFollow(FOLLOW_tf_declaration_in_function1148);
            	    tf_declaration102=tf_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tf_declaration102.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt24 >= 1 ) break loop24;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(24, input);
                        throw eee;
                }
                cnt24++;
            } while (true);

            pushFollow(FOLLOW_statement_in_function1160);
            statement103=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement103.getTree());
            string_literal104=(Token)match(input,81,FOLLOW_81_in_function1170); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal104_tree = (CommonTree)adaptor.create(string_literal104);
            adaptor.addChild(root_0, string_literal104_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "function"

    public static class range_or_type_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "range_or_type"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:237:1: range_or_type : ( range | 'integer' | 'real' );
    public final VerilogAParser.range_or_type_return range_or_type() throws RecognitionException {
        VerilogAParser.range_or_type_return retval = new VerilogAParser.range_or_type_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal106=null;
        Token string_literal107=null;
        VerilogAParser.range_return range105 = null;


        CommonTree string_literal106_tree=null;
        CommonTree string_literal107_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:237:15: ( range | 'integer' | 'real' )
            int alt25=3;
            switch ( input.LA(1) ) {
            case LBRACK:
                {
                alt25=1;
                }
                break;
            case 82:
                {
                alt25=2;
                }
                break;
            case 83:
                {
                alt25=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:238:9: range
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_range_in_range_or_type1195);
                    range105=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range105.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:239:9: 'integer'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal106=(Token)match(input,82,FOLLOW_82_in_range_or_type1207); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal106_tree = (CommonTree)adaptor.create(string_literal106);
                    adaptor.addChild(root_0, string_literal106_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:240:9: 'real'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal107=(Token)match(input,83,FOLLOW_83_in_range_or_type1219); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal107_tree = (CommonTree)adaptor.create(string_literal107);
                    adaptor.addChild(root_0, string_literal107_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "range_or_type"

    public static class tf_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "tf_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:243:1: tf_declaration : ( parameter_declaration | output_declaration | input_declaration | inout_declaration | reg_declaration | time_declaration | integer_declaration | real_declaration | event_declaration );
    public final VerilogAParser.tf_declaration_return tf_declaration() throws RecognitionException {
        VerilogAParser.tf_declaration_return retval = new VerilogAParser.tf_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.parameter_declaration_return parameter_declaration108 = null;

        VerilogAParser.output_declaration_return output_declaration109 = null;

        VerilogAParser.input_declaration_return input_declaration110 = null;

        VerilogAParser.inout_declaration_return inout_declaration111 = null;

        VerilogAParser.reg_declaration_return reg_declaration112 = null;

        VerilogAParser.time_declaration_return time_declaration113 = null;

        VerilogAParser.integer_declaration_return integer_declaration114 = null;

        VerilogAParser.real_declaration_return real_declaration115 = null;

        VerilogAParser.event_declaration_return event_declaration116 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:243:16: ( parameter_declaration | output_declaration | input_declaration | inout_declaration | reg_declaration | time_declaration | integer_declaration | real_declaration | event_declaration )
            int alt26=9;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:244:9: parameter_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_parameter_declaration_in_tf_declaration1244);
                    parameter_declaration108=parameter_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_declaration108.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:245:9: output_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_output_declaration_in_tf_declaration1256);
                    output_declaration109=output_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, output_declaration109.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:246:9: input_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_input_declaration_in_tf_declaration1268);
                    input_declaration110=input_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, input_declaration110.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:247:9: inout_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_inout_declaration_in_tf_declaration1280);
                    inout_declaration111=inout_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inout_declaration111.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:248:9: reg_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_reg_declaration_in_tf_declaration1292);
                    reg_declaration112=reg_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, reg_declaration112.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:249:9: time_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_time_declaration_in_tf_declaration1304);
                    time_declaration113=time_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, time_declaration113.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:250:9: integer_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_integer_declaration_in_tf_declaration1316);
                    integer_declaration114=integer_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, integer_declaration114.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:251:9: real_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_real_declaration_in_tf_declaration1328);
                    real_declaration115=real_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, real_declaration115.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:252:9: event_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_event_declaration_in_tf_declaration1340);
                    event_declaration116=event_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration116.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "tf_declaration"

    public static class parameter_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameter_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:260:1: parameter_declaration : 'parameter' ( range )? list_of_param_assignments SEMI ;
    public final VerilogAParser.parameter_declaration_return parameter_declaration() throws RecognitionException {
        VerilogAParser.parameter_declaration_return retval = new VerilogAParser.parameter_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal117=null;
        Token SEMI120=null;
        VerilogAParser.range_return range118 = null;

        VerilogAParser.list_of_param_assignments_return list_of_param_assignments119 = null;


        CommonTree string_literal117_tree=null;
        CommonTree SEMI120_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:260:23: ( 'parameter' ( range )? list_of_param_assignments SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:261:9: 'parameter' ( range )? list_of_param_assignments SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal117=(Token)match(input,84,FOLLOW_84_in_parameter_declaration1371); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal117_tree = (CommonTree)adaptor.create(string_literal117);
            adaptor.addChild(root_0, string_literal117_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:261:21: ( range )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==LBRACK) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:261:22: range
                    {
                    pushFollow(FOLLOW_range_in_parameter_declaration1374);
                    range118=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range118.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_list_of_param_assignments_in_parameter_declaration1378);
            list_of_param_assignments119=list_of_param_assignments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_param_assignments119.getTree());
            SEMI120=(Token)match(input,SEMI,FOLLOW_SEMI_in_parameter_declaration1380); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI120_tree = (CommonTree)adaptor.create(SEMI120);
            adaptor.addChild(root_0, SEMI120_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "parameter_declaration"

    public static class list_of_param_assignments_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_param_assignments"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:264:1: list_of_param_assignments : param_assignment ( COMMA param_assignment )* ;
    public final VerilogAParser.list_of_param_assignments_return list_of_param_assignments() throws RecognitionException {
        VerilogAParser.list_of_param_assignments_return retval = new VerilogAParser.list_of_param_assignments_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA122=null;
        VerilogAParser.param_assignment_return param_assignment121 = null;

        VerilogAParser.param_assignment_return param_assignment123 = null;


        CommonTree COMMA122_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:264:27: ( param_assignment ( COMMA param_assignment )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:265:9: param_assignment ( COMMA param_assignment )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_param_assignment_in_list_of_param_assignments1405);
            param_assignment121=param_assignment();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, param_assignment121.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:265:26: ( COMMA param_assignment )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==COMMA) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:265:28: COMMA param_assignment
            	    {
            	    COMMA122=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_param_assignments1409); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA122_tree = (CommonTree)adaptor.create(COMMA122);
            	    adaptor.addChild(root_0, COMMA122_tree);
            	    }
            	    pushFollow(FOLLOW_param_assignment_in_list_of_param_assignments1411);
            	    param_assignment123=param_assignment();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, param_assignment123.getTree());

            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_param_assignments"

    public static class param_assignment_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "param_assignment"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:268:1: param_assignment : identifier ASSIGN expression ;
    public final VerilogAParser.param_assignment_return param_assignment() throws RecognitionException {
        VerilogAParser.param_assignment_return retval = new VerilogAParser.param_assignment_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token ASSIGN125=null;
        VerilogAParser.identifier_return identifier124 = null;

        VerilogAParser.expression_return expression126 = null;


        CommonTree ASSIGN125_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:268:18: ( identifier ASSIGN expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:269:9: identifier ASSIGN expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_param_assignment1439);
            identifier124=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier124.getTree());
            ASSIGN125=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_param_assignment1441); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGN125_tree = (CommonTree)adaptor.create(ASSIGN125);
            adaptor.addChild(root_0, ASSIGN125_tree);
            }
            pushFollow(FOLLOW_expression_in_param_assignment1443);
            expression126=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression126.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "param_assignment"

    public static class port_range_name_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "port_range_name"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:272:1: port_range_name : ( range )? list_of_variables SEMI ;
    public final VerilogAParser.port_range_name_return port_range_name() throws RecognitionException {
        VerilogAParser.port_range_name_return retval = new VerilogAParser.port_range_name_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token SEMI129=null;
        VerilogAParser.range_return range127 = null;

        VerilogAParser.list_of_variables_return list_of_variables128 = null;


        CommonTree SEMI129_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:272:16: ( ( range )? list_of_variables SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:273:2: ( range )? list_of_variables SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:273:2: ( range )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==LBRACK) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:273:3: range
                    {
                    pushFollow(FOLLOW_range_in_port_range_name1461);
                    range127=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range127.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_list_of_variables_in_port_range_name1465);
            list_of_variables128=list_of_variables();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) root_0 = (CommonTree)adaptor.becomeRoot(list_of_variables128.getTree(), root_0);
            SEMI129=(Token)match(input,SEMI,FOLLOW_SEMI_in_port_range_name1468); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI129_tree = (CommonTree)adaptor.create(SEMI129);
            adaptor.addChild(root_0, SEMI129_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "port_range_name"

    public static class input_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "input_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:276:1: input_declaration : 'input' port_range_name ;
    public final VerilogAParser.input_declaration_return input_declaration() throws RecognitionException {
        VerilogAParser.input_declaration_return retval = new VerilogAParser.input_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal130=null;
        VerilogAParser.port_range_name_return port_range_name131 = null;


        CommonTree string_literal130_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:276:19: ( 'input' port_range_name )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:277:9: 'input' port_range_name
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal130=(Token)match(input,85,FOLLOW_85_in_input_declaration1486); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal130_tree = (CommonTree)adaptor.create(string_literal130);
            root_0 = (CommonTree)adaptor.becomeRoot(string_literal130_tree, root_0);
            }
            pushFollow(FOLLOW_port_range_name_in_input_declaration1489);
            port_range_name131=port_range_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, port_range_name131.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "input_declaration"

    public static class output_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "output_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:280:1: output_declaration : 'output' port_range_name ;
    public final VerilogAParser.output_declaration_return output_declaration() throws RecognitionException {
        VerilogAParser.output_declaration_return retval = new VerilogAParser.output_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal132=null;
        VerilogAParser.port_range_name_return port_range_name133 = null;


        CommonTree string_literal132_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:280:20: ( 'output' port_range_name )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:281:9: 'output' port_range_name
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal132=(Token)match(input,86,FOLLOW_86_in_output_declaration1514); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal132_tree = (CommonTree)adaptor.create(string_literal132);
            root_0 = (CommonTree)adaptor.becomeRoot(string_literal132_tree, root_0);
            }
            pushFollow(FOLLOW_port_range_name_in_output_declaration1517);
            port_range_name133=port_range_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, port_range_name133.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "output_declaration"

    public static class inout_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "inout_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:284:1: inout_declaration : 'inout' port_range_name ;
    public final VerilogAParser.inout_declaration_return inout_declaration() throws RecognitionException {
        VerilogAParser.inout_declaration_return retval = new VerilogAParser.inout_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal134=null;
        VerilogAParser.port_range_name_return port_range_name135 = null;


        CommonTree string_literal134_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:284:19: ( 'inout' port_range_name )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:285:9: 'inout' port_range_name
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal134=(Token)match(input,87,FOLLOW_87_in_inout_declaration1542); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal134_tree = (CommonTree)adaptor.create(string_literal134);
            root_0 = (CommonTree)adaptor.becomeRoot(string_literal134_tree, root_0);
            }
            pushFollow(FOLLOW_port_range_name_in_inout_declaration1545);
            port_range_name135=port_range_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, port_range_name135.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "inout_declaration"

    public static class net_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "net_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:288:1: net_declaration : ( ( net_type ( expandrange )? )=> net_type ( expandrange )? ( delay )? list_of_assigned_variables SEMI | KW_TRIREG ( charge_strength )? ( expandrange )? ( delay )? list_of_variables SEMI );
    public final VerilogAParser.net_declaration_return net_declaration() throws RecognitionException {
        VerilogAParser.net_declaration_return retval = new VerilogAParser.net_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token SEMI140=null;
        Token KW_TRIREG141=null;
        Token SEMI146=null;
        VerilogAParser.net_type_return net_type136 = null;

        VerilogAParser.expandrange_return expandrange137 = null;

        VerilogAParser.delay_return delay138 = null;

        VerilogAParser.list_of_assigned_variables_return list_of_assigned_variables139 = null;

        VerilogAParser.charge_strength_return charge_strength142 = null;

        VerilogAParser.expandrange_return expandrange143 = null;

        VerilogAParser.delay_return delay144 = null;

        VerilogAParser.list_of_variables_return list_of_variables145 = null;


        CommonTree SEMI140_tree=null;
        CommonTree KW_TRIREG141_tree=null;
        CommonTree SEMI146_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:288:17: ( ( net_type ( expandrange )? )=> net_type ( expandrange )? ( delay )? list_of_assigned_variables SEMI | KW_TRIREG ( charge_strength )? ( expandrange )? ( delay )? list_of_variables SEMI )
            int alt35=2;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:289:9: ( net_type ( expandrange )? )=> net_type ( expandrange )? ( delay )? list_of_assigned_variables SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_net_type_in_net_declaration1591);
                    net_type136=net_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, net_type136.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:290:18: ( expandrange )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==LBRACK||(LA30_0>=98 && LA30_0<=99)) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:290:19: expandrange
                            {
                            pushFollow(FOLLOW_expandrange_in_net_declaration1594);
                            expandrange137=expandrange();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expandrange137.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:290:33: ( delay )?
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==POUND) ) {
                        alt31=1;
                    }
                    switch (alt31) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:290:34: delay
                            {
                            pushFollow(FOLLOW_delay_in_net_declaration1599);
                            delay138=delay();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, delay138.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_list_of_assigned_variables_in_net_declaration1614);
                    list_of_assigned_variables139=list_of_assigned_variables();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_assigned_variables139.getTree());
                    SEMI140=(Token)match(input,SEMI,FOLLOW_SEMI_in_net_declaration1616); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI140_tree = (CommonTree)adaptor.create(SEMI140);
                    adaptor.addChild(root_0, SEMI140_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:292:9: KW_TRIREG ( charge_strength )? ( expandrange )? ( delay )? list_of_variables SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    KW_TRIREG141=(Token)match(input,KW_TRIREG,FOLLOW_KW_TRIREG_in_net_declaration1628); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_TRIREG141_tree = (CommonTree)adaptor.create(KW_TRIREG141);
                    adaptor.addChild(root_0, KW_TRIREG141_tree);
                    }
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:292:19: ( charge_strength )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==LPAREN) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:292:20: charge_strength
                            {
                            pushFollow(FOLLOW_charge_strength_in_net_declaration1631);
                            charge_strength142=charge_strength();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, charge_strength142.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:292:38: ( expandrange )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==LBRACK||(LA33_0>=98 && LA33_0<=99)) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:292:39: expandrange
                            {
                            pushFollow(FOLLOW_expandrange_in_net_declaration1636);
                            expandrange143=expandrange();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expandrange143.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:292:53: ( delay )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==POUND) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:292:54: delay
                            {
                            pushFollow(FOLLOW_delay_in_net_declaration1641);
                            delay144=delay();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, delay144.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_list_of_variables_in_net_declaration1656);
                    list_of_variables145=list_of_variables();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_variables145.getTree());
                    SEMI146=(Token)match(input,SEMI,FOLLOW_SEMI_in_net_declaration1658); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI146_tree = (CommonTree)adaptor.create(SEMI146);
                    adaptor.addChild(root_0, SEMI146_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "net_declaration"

    public static class net_type_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "net_type"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:296:1: net_type : ( 'wire' | 'tri' | 'tri1' | 'supply0' | 'wand' | 'triand' | 'tri0' | 'supply1' | 'wor' | 'trior' | KW_TRIREG );
    public final VerilogAParser.net_type_return net_type() throws RecognitionException {
        VerilogAParser.net_type_return retval = new VerilogAParser.net_type_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set147=null;

        CommonTree set147_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:296:10: ( 'wire' | 'tri' | 'tri1' | 'supply0' | 'wand' | 'triand' | 'tri0' | 'supply1' | 'wor' | 'trior' | KW_TRIREG )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set147=(Token)input.LT(1);
            if ( input.LA(1)==KW_TRIREG||(input.LA(1)>=88 && input.LA(1)<=97) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set147));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "net_type"

    public static class expandrange_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expandrange"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:310:1: expandrange : ( 'scalared' range | 'vectored' range | range );
    public final VerilogAParser.expandrange_return expandrange() throws RecognitionException {
        VerilogAParser.expandrange_return retval = new VerilogAParser.expandrange_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal148=null;
        Token string_literal150=null;
        VerilogAParser.range_return range149 = null;

        VerilogAParser.range_return range151 = null;

        VerilogAParser.range_return range152 = null;


        CommonTree string_literal148_tree=null;
        CommonTree string_literal150_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:310:13: ( 'scalared' range | 'vectored' range | range )
            int alt36=3;
            switch ( input.LA(1) ) {
            case 98:
                {
                alt36=1;
                }
                break;
            case 99:
                {
                alt36=2;
                }
                break;
            case LBRACK:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:311:9: 'scalared' range
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal148=(Token)match(input,98,FOLLOW_98_in_expandrange1826); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal148_tree = (CommonTree)adaptor.create(string_literal148);
                    adaptor.addChild(root_0, string_literal148_tree);
                    }
                    pushFollow(FOLLOW_range_in_expandrange1828);
                    range149=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range149.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:312:2: 'vectored' range
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal150=(Token)match(input,99,FOLLOW_99_in_expandrange1833); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal150_tree = (CommonTree)adaptor.create(string_literal150);
                    adaptor.addChild(root_0, string_literal150_tree);
                    }
                    pushFollow(FOLLOW_range_in_expandrange1835);
                    range151=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range151.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:313:2: range
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_range_in_expandrange1840);
                    range152=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range152.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "expandrange"

    public static class reg_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "reg_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:316:1: reg_declaration : 'reg' ( range )? list_of_register_variables SEMI ;
    public final VerilogAParser.reg_declaration_return reg_declaration() throws RecognitionException {
        VerilogAParser.reg_declaration_return retval = new VerilogAParser.reg_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal153=null;
        Token SEMI156=null;
        VerilogAParser.range_return range154 = null;

        VerilogAParser.list_of_register_variables_return list_of_register_variables155 = null;


        CommonTree string_literal153_tree=null;
        CommonTree SEMI156_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:316:17: ( 'reg' ( range )? list_of_register_variables SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:317:9: 'reg' ( range )? list_of_register_variables SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal153=(Token)match(input,100,FOLLOW_100_in_reg_declaration1865); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal153_tree = (CommonTree)adaptor.create(string_literal153);
            adaptor.addChild(root_0, string_literal153_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:317:15: ( range )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==LBRACK) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:317:16: range
                    {
                    pushFollow(FOLLOW_range_in_reg_declaration1868);
                    range154=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range154.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_list_of_register_variables_in_reg_declaration1872);
            list_of_register_variables155=list_of_register_variables();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_register_variables155.getTree());
            SEMI156=(Token)match(input,SEMI,FOLLOW_SEMI_in_reg_declaration1874); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI156_tree = (CommonTree)adaptor.create(SEMI156);
            adaptor.addChild(root_0, SEMI156_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "reg_declaration"

    public static class time_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "time_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:320:1: time_declaration : 'time' list_of_register_variables SEMI ;
    public final VerilogAParser.time_declaration_return time_declaration() throws RecognitionException {
        VerilogAParser.time_declaration_return retval = new VerilogAParser.time_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal157=null;
        Token SEMI159=null;
        VerilogAParser.list_of_register_variables_return list_of_register_variables158 = null;


        CommonTree string_literal157_tree=null;
        CommonTree SEMI159_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:320:18: ( 'time' list_of_register_variables SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:321:9: 'time' list_of_register_variables SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal157=(Token)match(input,101,FOLLOW_101_in_time_declaration1899); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal157_tree = (CommonTree)adaptor.create(string_literal157);
            adaptor.addChild(root_0, string_literal157_tree);
            }
            pushFollow(FOLLOW_list_of_register_variables_in_time_declaration1901);
            list_of_register_variables158=list_of_register_variables();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_register_variables158.getTree());
            SEMI159=(Token)match(input,SEMI,FOLLOW_SEMI_in_time_declaration1903); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI159_tree = (CommonTree)adaptor.create(SEMI159);
            adaptor.addChild(root_0, SEMI159_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "time_declaration"

    public static class integer_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "integer_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:324:1: integer_declaration : 'integer' list_of_register_variables SEMI ;
    public final VerilogAParser.integer_declaration_return integer_declaration() throws RecognitionException {
        VerilogAParser.integer_declaration_return retval = new VerilogAParser.integer_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal160=null;
        Token SEMI162=null;
        VerilogAParser.list_of_register_variables_return list_of_register_variables161 = null;


        CommonTree string_literal160_tree=null;
        CommonTree SEMI162_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:324:21: ( 'integer' list_of_register_variables SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:325:9: 'integer' list_of_register_variables SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal160=(Token)match(input,82,FOLLOW_82_in_integer_declaration1928); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal160_tree = (CommonTree)adaptor.create(string_literal160);
            adaptor.addChild(root_0, string_literal160_tree);
            }
            pushFollow(FOLLOW_list_of_register_variables_in_integer_declaration1930);
            list_of_register_variables161=list_of_register_variables();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_register_variables161.getTree());
            SEMI162=(Token)match(input,SEMI,FOLLOW_SEMI_in_integer_declaration1932); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI162_tree = (CommonTree)adaptor.create(SEMI162);
            adaptor.addChild(root_0, SEMI162_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "integer_declaration"

    public static class real_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "real_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:328:1: real_declaration : 'real' list_of_variables SEMI ;
    public final VerilogAParser.real_declaration_return real_declaration() throws RecognitionException {
        VerilogAParser.real_declaration_return retval = new VerilogAParser.real_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal163=null;
        Token SEMI165=null;
        VerilogAParser.list_of_variables_return list_of_variables164 = null;


        CommonTree string_literal163_tree=null;
        CommonTree SEMI165_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:328:18: ( 'real' list_of_variables SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:329:9: 'real' list_of_variables SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal163=(Token)match(input,83,FOLLOW_83_in_real_declaration1957); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal163_tree = (CommonTree)adaptor.create(string_literal163);
            adaptor.addChild(root_0, string_literal163_tree);
            }
            pushFollow(FOLLOW_list_of_variables_in_real_declaration1959);
            list_of_variables164=list_of_variables();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_variables164.getTree());
            SEMI165=(Token)match(input,SEMI,FOLLOW_SEMI_in_real_declaration1961); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI165_tree = (CommonTree)adaptor.create(SEMI165);
            adaptor.addChild(root_0, SEMI165_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "real_declaration"

    public static class event_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "event_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:332:1: event_declaration : 'event' name_of_event ( COMMA name_of_event )* SEMI ;
    public final VerilogAParser.event_declaration_return event_declaration() throws RecognitionException {
        VerilogAParser.event_declaration_return retval = new VerilogAParser.event_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal166=null;
        Token COMMA168=null;
        Token SEMI170=null;
        VerilogAParser.name_of_event_return name_of_event167 = null;

        VerilogAParser.name_of_event_return name_of_event169 = null;


        CommonTree string_literal166_tree=null;
        CommonTree COMMA168_tree=null;
        CommonTree SEMI170_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:332:19: ( 'event' name_of_event ( COMMA name_of_event )* SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:333:9: 'event' name_of_event ( COMMA name_of_event )* SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal166=(Token)match(input,102,FOLLOW_102_in_event_declaration1986); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal166_tree = (CommonTree)adaptor.create(string_literal166);
            adaptor.addChild(root_0, string_literal166_tree);
            }
            pushFollow(FOLLOW_name_of_event_in_event_declaration1988);
            name_of_event167=name_of_event();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_event167.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:333:31: ( COMMA name_of_event )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==COMMA) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:333:33: COMMA name_of_event
            	    {
            	    COMMA168=(Token)match(input,COMMA,FOLLOW_COMMA_in_event_declaration1992); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA168_tree = (CommonTree)adaptor.create(COMMA168);
            	    adaptor.addChild(root_0, COMMA168_tree);
            	    }
            	    pushFollow(FOLLOW_name_of_event_in_event_declaration1994);
            	    name_of_event169=name_of_event();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_event169.getTree());

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            SEMI170=(Token)match(input,SEMI,FOLLOW_SEMI_in_event_declaration1999); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI170_tree = (CommonTree)adaptor.create(SEMI170);
            adaptor.addChild(root_0, SEMI170_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "event_declaration"

    public static class continuous_assign_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "continuous_assign"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:336:1: continuous_assign : ( KW_ASSIGN ( drive_strength )? ( delay )? list_of_assignments SEMI | net_type ( drive_strength )? ( expandrange )? ( delay )? list_of_assignments SEMI );
    public final VerilogAParser.continuous_assign_return continuous_assign() throws RecognitionException {
        VerilogAParser.continuous_assign_return retval = new VerilogAParser.continuous_assign_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token KW_ASSIGN171=null;
        Token SEMI175=null;
        Token SEMI181=null;
        VerilogAParser.drive_strength_return drive_strength172 = null;

        VerilogAParser.delay_return delay173 = null;

        VerilogAParser.list_of_assignments_return list_of_assignments174 = null;

        VerilogAParser.net_type_return net_type176 = null;

        VerilogAParser.drive_strength_return drive_strength177 = null;

        VerilogAParser.expandrange_return expandrange178 = null;

        VerilogAParser.delay_return delay179 = null;

        VerilogAParser.list_of_assignments_return list_of_assignments180 = null;


        CommonTree KW_ASSIGN171_tree=null;
        CommonTree SEMI175_tree=null;
        CommonTree SEMI181_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:336:19: ( KW_ASSIGN ( drive_strength )? ( delay )? list_of_assignments SEMI | net_type ( drive_strength )? ( expandrange )? ( delay )? list_of_assignments SEMI )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==KW_ASSIGN) ) {
                alt44=1;
            }
            else if ( (LA44_0==KW_TRIREG||(LA44_0>=88 && LA44_0<=97)) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:337:9: KW_ASSIGN ( drive_strength )? ( delay )? list_of_assignments SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    KW_ASSIGN171=(Token)match(input,KW_ASSIGN,FOLLOW_KW_ASSIGN_in_continuous_assign2024); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_ASSIGN171_tree = (CommonTree)adaptor.create(KW_ASSIGN171);
                    root_0 = (CommonTree)adaptor.becomeRoot(KW_ASSIGN171_tree, root_0);
                    }
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:337:20: ( drive_strength )?
                    int alt39=2;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==LPAREN) ) {
                        alt39=1;
                    }
                    switch (alt39) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:337:21: drive_strength
                            {
                            pushFollow(FOLLOW_drive_strength_in_continuous_assign2028);
                            drive_strength172=drive_strength();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, drive_strength172.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:337:38: ( delay )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==POUND) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:337:39: delay
                            {
                            pushFollow(FOLLOW_delay_in_continuous_assign2033);
                            delay173=delay();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, delay173.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_list_of_assignments_in_continuous_assign2037);
                    list_of_assignments174=list_of_assignments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_assignments174.getTree());
                    SEMI175=(Token)match(input,SEMI,FOLLOW_SEMI_in_continuous_assign2039); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI175_tree = (CommonTree)adaptor.create(SEMI175);
                    adaptor.addChild(root_0, SEMI175_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:338:9: net_type ( drive_strength )? ( expandrange )? ( delay )? list_of_assignments SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_net_type_in_continuous_assign2051);
                    net_type176=net_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, net_type176.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:338:18: ( drive_strength )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==LPAREN) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:338:19: drive_strength
                            {
                            pushFollow(FOLLOW_drive_strength_in_continuous_assign2054);
                            drive_strength177=drive_strength();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, drive_strength177.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:338:36: ( expandrange )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==LBRACK||(LA42_0>=98 && LA42_0<=99)) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:338:37: expandrange
                            {
                            pushFollow(FOLLOW_expandrange_in_continuous_assign2059);
                            expandrange178=expandrange();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expandrange178.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:338:51: ( delay )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==POUND) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:338:52: delay
                            {
                            pushFollow(FOLLOW_delay_in_continuous_assign2064);
                            delay179=delay();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, delay179.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_list_of_assignments_in_continuous_assign2079);
                    list_of_assignments180=list_of_assignments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_assignments180.getTree());
                    SEMI181=(Token)match(input,SEMI,FOLLOW_SEMI_in_continuous_assign2081); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI181_tree = (CommonTree)adaptor.create(SEMI181);
                    adaptor.addChild(root_0, SEMI181_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "continuous_assign"

    public static class parameter_override_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameter_override"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:342:1: parameter_override : 'defparam' list_of_param_assignments SEMI ;
    public final VerilogAParser.parameter_override_return parameter_override() throws RecognitionException {
        VerilogAParser.parameter_override_return retval = new VerilogAParser.parameter_override_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal182=null;
        Token SEMI184=null;
        VerilogAParser.list_of_param_assignments_return list_of_param_assignments183 = null;


        CommonTree string_literal182_tree=null;
        CommonTree SEMI184_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:342:20: ( 'defparam' list_of_param_assignments SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:343:9: 'defparam' list_of_param_assignments SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal182=(Token)match(input,103,FOLLOW_103_in_parameter_override2106); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal182_tree = (CommonTree)adaptor.create(string_literal182);
            adaptor.addChild(root_0, string_literal182_tree);
            }
            pushFollow(FOLLOW_list_of_param_assignments_in_parameter_override2108);
            list_of_param_assignments183=list_of_param_assignments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_param_assignments183.getTree());
            SEMI184=(Token)match(input,SEMI,FOLLOW_SEMI_in_parameter_override2110); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI184_tree = (CommonTree)adaptor.create(SEMI184);
            adaptor.addChild(root_0, SEMI184_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "parameter_override"

    public static class list_of_variables_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_variables"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:346:1: list_of_variables : name_of_variable ( COMMA name_of_variable )* ;
    public final VerilogAParser.list_of_variables_return list_of_variables() throws RecognitionException {
        VerilogAParser.list_of_variables_return retval = new VerilogAParser.list_of_variables_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA186=null;
        VerilogAParser.name_of_variable_return name_of_variable185 = null;

        VerilogAParser.name_of_variable_return name_of_variable187 = null;


        CommonTree COMMA186_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:346:19: ( name_of_variable ( COMMA name_of_variable )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:347:9: name_of_variable ( COMMA name_of_variable )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_name_of_variable_in_list_of_variables2135);
            name_of_variable185=name_of_variable();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable185.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:347:26: ( COMMA name_of_variable )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==COMMA) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:347:28: COMMA name_of_variable
            	    {
            	    COMMA186=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_variables2139); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA186_tree = (CommonTree)adaptor.create(COMMA186);
            	    adaptor.addChild(root_0, COMMA186_tree);
            	    }
            	    pushFollow(FOLLOW_name_of_variable_in_list_of_variables2141);
            	    name_of_variable187=name_of_variable();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable187.getTree());

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_variables"

    public static class list_of_assigned_variables_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_assigned_variables"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:350:1: list_of_assigned_variables : name_of_variable ( ASSIGN expression )? ( COMMA name_of_variable ( ASSIGN expression )? )* ;
    public final VerilogAParser.list_of_assigned_variables_return list_of_assigned_variables() throws RecognitionException {
        VerilogAParser.list_of_assigned_variables_return retval = new VerilogAParser.list_of_assigned_variables_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token ASSIGN189=null;
        Token COMMA191=null;
        Token ASSIGN193=null;
        VerilogAParser.name_of_variable_return name_of_variable188 = null;

        VerilogAParser.expression_return expression190 = null;

        VerilogAParser.name_of_variable_return name_of_variable192 = null;

        VerilogAParser.expression_return expression194 = null;


        CommonTree ASSIGN189_tree=null;
        CommonTree COMMA191_tree=null;
        CommonTree ASSIGN193_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:350:28: ( name_of_variable ( ASSIGN expression )? ( COMMA name_of_variable ( ASSIGN expression )? )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:351:9: name_of_variable ( ASSIGN expression )? ( COMMA name_of_variable ( ASSIGN expression )? )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_name_of_variable_in_list_of_assigned_variables2169);
            name_of_variable188=name_of_variable();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable188.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:351:26: ( ASSIGN expression )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==ASSIGN) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:351:28: ASSIGN expression
                    {
                    ASSIGN189=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_list_of_assigned_variables2173); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGN189_tree = (CommonTree)adaptor.create(ASSIGN189);
                    adaptor.addChild(root_0, ASSIGN189_tree);
                    }
                    pushFollow(FOLLOW_expression_in_list_of_assigned_variables2175);
                    expression190=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression190.getTree());

                    }
                    break;

            }

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:352:2: ( COMMA name_of_variable ( ASSIGN expression )? )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==COMMA) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:352:4: COMMA name_of_variable ( ASSIGN expression )?
            	    {
            	    COMMA191=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_assigned_variables2183); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA191_tree = (CommonTree)adaptor.create(COMMA191);
            	    adaptor.addChild(root_0, COMMA191_tree);
            	    }
            	    pushFollow(FOLLOW_name_of_variable_in_list_of_assigned_variables2185);
            	    name_of_variable192=name_of_variable();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_variable192.getTree());
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:352:27: ( ASSIGN expression )?
            	    int alt47=2;
            	    int LA47_0 = input.LA(1);

            	    if ( (LA47_0==ASSIGN) ) {
            	        alt47=1;
            	    }
            	    switch (alt47) {
            	        case 1 :
            	            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:352:29: ASSIGN expression
            	            {
            	            ASSIGN193=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_list_of_assigned_variables2189); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            ASSIGN193_tree = (CommonTree)adaptor.create(ASSIGN193);
            	            adaptor.addChild(root_0, ASSIGN193_tree);
            	            }
            	            pushFollow(FOLLOW_expression_in_list_of_assigned_variables2191);
            	            expression194=expression();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression194.getTree());

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_assigned_variables"

    public static class list_of_register_variables_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_register_variables"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:355:1: list_of_register_variables : register_variable ( COMMA register_variable )* ;
    public final VerilogAParser.list_of_register_variables_return list_of_register_variables() throws RecognitionException {
        VerilogAParser.list_of_register_variables_return retval = new VerilogAParser.list_of_register_variables_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA196=null;
        VerilogAParser.register_variable_return register_variable195 = null;

        VerilogAParser.register_variable_return register_variable197 = null;


        CommonTree COMMA196_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:355:28: ( register_variable ( COMMA register_variable )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:356:9: register_variable ( COMMA register_variable )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_register_variable_in_list_of_register_variables2222);
            register_variable195=register_variable();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, register_variable195.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:356:27: ( COMMA register_variable )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==COMMA) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:356:29: COMMA register_variable
            	    {
            	    COMMA196=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_register_variables2226); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA196_tree = (CommonTree)adaptor.create(COMMA196);
            	    adaptor.addChild(root_0, COMMA196_tree);
            	    }
            	    pushFollow(FOLLOW_register_variable_in_list_of_register_variables2228);
            	    register_variable197=register_variable();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, register_variable197.getTree());

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_register_variables"

    public static class register_variable_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "register_variable"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:359:1: register_variable : ( name_of_register | name_of_memory LBRACK expression COLON expression RBRACK );
    public final VerilogAParser.register_variable_return register_variable() throws RecognitionException {
        VerilogAParser.register_variable_return retval = new VerilogAParser.register_variable_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LBRACK200=null;
        Token COLON202=null;
        Token RBRACK204=null;
        VerilogAParser.name_of_register_return name_of_register198 = null;

        VerilogAParser.name_of_memory_return name_of_memory199 = null;

        VerilogAParser.expression_return expression201 = null;

        VerilogAParser.expression_return expression203 = null;


        CommonTree LBRACK200_tree=null;
        CommonTree COLON202_tree=null;
        CommonTree RBRACK204_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:359:19: ( name_of_register | name_of_memory LBRACK expression COLON expression RBRACK )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==IDENTIFIER||LA50_0==ESCAPED_IDENTIFIER) ) {
                int LA50_1 = input.LA(2);

                if ( (LA50_1==SEMI||LA50_1==COMMA) ) {
                    alt50=1;
                }
                else if ( (LA50_1==LBRACK) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:360:9: name_of_register
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_name_of_register_in_register_variable2256);
                    name_of_register198=name_of_register();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_register198.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:361:9: name_of_memory LBRACK expression COLON expression RBRACK
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_name_of_memory_in_register_variable2268);
                    name_of_memory199=name_of_memory();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_memory199.getTree());
                    LBRACK200=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_register_variable2270); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACK200_tree = (CommonTree)adaptor.create(LBRACK200);
                    adaptor.addChild(root_0, LBRACK200_tree);
                    }
                    pushFollow(FOLLOW_expression_in_register_variable2272);
                    expression201=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression201.getTree());
                    COLON202=(Token)match(input,COLON,FOLLOW_COLON_in_register_variable2274); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON202_tree = (CommonTree)adaptor.create(COLON202);
                    adaptor.addChild(root_0, COLON202_tree);
                    }
                    pushFollow(FOLLOW_expression_in_register_variable2276);
                    expression203=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression203.getTree());
                    RBRACK204=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_register_variable2278); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACK204_tree = (CommonTree)adaptor.create(RBRACK204);
                    adaptor.addChild(root_0, RBRACK204_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "register_variable"

    public static class charge_strength_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "charge_strength"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:364:1: charge_strength : ( LPAREN 'small' RPAREN | LPAREN 'medium' RPAREN | LPAREN 'large' RPAREN );
    public final VerilogAParser.charge_strength_return charge_strength() throws RecognitionException {
        VerilogAParser.charge_strength_return retval = new VerilogAParser.charge_strength_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN205=null;
        Token string_literal206=null;
        Token RPAREN207=null;
        Token LPAREN208=null;
        Token string_literal209=null;
        Token RPAREN210=null;
        Token LPAREN211=null;
        Token string_literal212=null;
        Token RPAREN213=null;

        CommonTree LPAREN205_tree=null;
        CommonTree string_literal206_tree=null;
        CommonTree RPAREN207_tree=null;
        CommonTree LPAREN208_tree=null;
        CommonTree string_literal209_tree=null;
        CommonTree RPAREN210_tree=null;
        CommonTree LPAREN211_tree=null;
        CommonTree string_literal212_tree=null;
        CommonTree RPAREN213_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:364:17: ( LPAREN 'small' RPAREN | LPAREN 'medium' RPAREN | LPAREN 'large' RPAREN )
            int alt51=3;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==LPAREN) ) {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    alt51=1;
                    }
                    break;
                case 105:
                    {
                    alt51=2;
                    }
                    break;
                case 106:
                    {
                    alt51=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:365:9: LPAREN 'small' RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN205=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_charge_strength2303); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN205_tree = (CommonTree)adaptor.create(LPAREN205);
                    adaptor.addChild(root_0, LPAREN205_tree);
                    }
                    string_literal206=(Token)match(input,104,FOLLOW_104_in_charge_strength2305); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal206_tree = (CommonTree)adaptor.create(string_literal206);
                    adaptor.addChild(root_0, string_literal206_tree);
                    }
                    RPAREN207=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_charge_strength2308); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN207_tree = (CommonTree)adaptor.create(RPAREN207);
                    adaptor.addChild(root_0, RPAREN207_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:366:9: LPAREN 'medium' RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN208=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_charge_strength2320); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN208_tree = (CommonTree)adaptor.create(LPAREN208);
                    adaptor.addChild(root_0, LPAREN208_tree);
                    }
                    string_literal209=(Token)match(input,105,FOLLOW_105_in_charge_strength2322); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal209_tree = (CommonTree)adaptor.create(string_literal209);
                    adaptor.addChild(root_0, string_literal209_tree);
                    }
                    RPAREN210=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_charge_strength2324); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN210_tree = (CommonTree)adaptor.create(RPAREN210);
                    adaptor.addChild(root_0, RPAREN210_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:367:9: LPAREN 'large' RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN211=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_charge_strength2336); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN211_tree = (CommonTree)adaptor.create(LPAREN211);
                    adaptor.addChild(root_0, LPAREN211_tree);
                    }
                    string_literal212=(Token)match(input,106,FOLLOW_106_in_charge_strength2338); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal212_tree = (CommonTree)adaptor.create(string_literal212);
                    adaptor.addChild(root_0, string_literal212_tree);
                    }
                    RPAREN213=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_charge_strength2341); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN213_tree = (CommonTree)adaptor.create(RPAREN213);
                    adaptor.addChild(root_0, RPAREN213_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "charge_strength"

    public static class drive_strength_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "drive_strength"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:370:1: drive_strength : ( LPAREN strength0 COMMA strength1 RPAREN | LPAREN strength1 COMMA strength0 RPAREN );
    public final VerilogAParser.drive_strength_return drive_strength() throws RecognitionException {
        VerilogAParser.drive_strength_return retval = new VerilogAParser.drive_strength_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN214=null;
        Token COMMA216=null;
        Token RPAREN218=null;
        Token LPAREN219=null;
        Token COMMA221=null;
        Token RPAREN223=null;
        VerilogAParser.strength0_return strength0215 = null;

        VerilogAParser.strength1_return strength1217 = null;

        VerilogAParser.strength1_return strength1220 = null;

        VerilogAParser.strength0_return strength0222 = null;


        CommonTree LPAREN214_tree=null;
        CommonTree COMMA216_tree=null;
        CommonTree RPAREN218_tree=null;
        CommonTree LPAREN219_tree=null;
        CommonTree COMMA221_tree=null;
        CommonTree RPAREN223_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:370:16: ( LPAREN strength0 COMMA strength1 RPAREN | LPAREN strength1 COMMA strength0 RPAREN )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==LPAREN) ) {
                int LA52_1 = input.LA(2);

                if ( (LA52_1==91||(LA52_1>=107 && LA52_1<=110)) ) {
                    alt52=1;
                }
                else if ( (LA52_1==95||(LA52_1>=111 && LA52_1<=114)) ) {
                    alt52=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:371:9: LPAREN strength0 COMMA strength1 RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN214=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_drive_strength2366); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN214_tree = (CommonTree)adaptor.create(LPAREN214);
                    adaptor.addChild(root_0, LPAREN214_tree);
                    }
                    pushFollow(FOLLOW_strength0_in_drive_strength2368);
                    strength0215=strength0();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, strength0215.getTree());
                    COMMA216=(Token)match(input,COMMA,FOLLOW_COMMA_in_drive_strength2370); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA216_tree = (CommonTree)adaptor.create(COMMA216);
                    adaptor.addChild(root_0, COMMA216_tree);
                    }
                    pushFollow(FOLLOW_strength1_in_drive_strength2372);
                    strength1217=strength1();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, strength1217.getTree());
                    RPAREN218=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_drive_strength2374); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN218_tree = (CommonTree)adaptor.create(RPAREN218);
                    adaptor.addChild(root_0, RPAREN218_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:372:9: LPAREN strength1 COMMA strength0 RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN219=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_drive_strength2386); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN219_tree = (CommonTree)adaptor.create(LPAREN219);
                    adaptor.addChild(root_0, LPAREN219_tree);
                    }
                    pushFollow(FOLLOW_strength1_in_drive_strength2388);
                    strength1220=strength1();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, strength1220.getTree());
                    COMMA221=(Token)match(input,COMMA,FOLLOW_COMMA_in_drive_strength2390); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA221_tree = (CommonTree)adaptor.create(COMMA221);
                    adaptor.addChild(root_0, COMMA221_tree);
                    }
                    pushFollow(FOLLOW_strength0_in_drive_strength2392);
                    strength0222=strength0();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, strength0222.getTree());
                    RPAREN223=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_drive_strength2394); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN223_tree = (CommonTree)adaptor.create(RPAREN223);
                    adaptor.addChild(root_0, RPAREN223_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "drive_strength"

    public static class strength0_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "strength0"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:375:1: strength0 : ( 'supply0' | 'strong0' | 'pull0' | 'weak0' | 'highz0' );
    public final VerilogAParser.strength0_return strength0() throws RecognitionException {
        VerilogAParser.strength0_return retval = new VerilogAParser.strength0_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set224=null;

        CommonTree set224_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:375:11: ( 'supply0' | 'strong0' | 'pull0' | 'weak0' | 'highz0' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set224=(Token)input.LT(1);
            if ( input.LA(1)==91||(input.LA(1)>=107 && input.LA(1)<=110) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set224));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "strength0"

    public static class strength1_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "strength1"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:383:1: strength1 : ( 'supply1' | 'strong1' | 'pull1' | 'weak1' | 'highz1' );
    public final VerilogAParser.strength1_return strength1() throws RecognitionException {
        VerilogAParser.strength1_return retval = new VerilogAParser.strength1_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set225=null;

        CommonTree set225_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:383:11: ( 'supply1' | 'strong1' | 'pull1' | 'weak1' | 'highz1' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set225=(Token)input.LT(1);
            if ( input.LA(1)==95||(input.LA(1)>=111 && input.LA(1)<=114) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set225));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "strength1"

    public static class range_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "range"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:391:1: range : ( ( LBRACK expression COLON )=> LBRACK expression COLON expression RBRACK | LBRACK expression RBRACK );
    public final VerilogAParser.range_return range() throws RecognitionException {
        VerilogAParser.range_return retval = new VerilogAParser.range_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LBRACK226=null;
        Token COLON228=null;
        Token RBRACK230=null;
        Token LBRACK231=null;
        Token RBRACK233=null;
        VerilogAParser.expression_return expression227 = null;

        VerilogAParser.expression_return expression229 = null;

        VerilogAParser.expression_return expression232 = null;


        CommonTree LBRACK226_tree=null;
        CommonTree COLON228_tree=null;
        CommonTree RBRACK230_tree=null;
        CommonTree LBRACK231_tree=null;
        CommonTree RBRACK233_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:391:7: ( ( LBRACK expression COLON )=> LBRACK expression COLON expression RBRACK | LBRACK expression RBRACK )
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:392:2: ( LBRACK expression COLON )=> LBRACK expression COLON expression RBRACK
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LBRACK226=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_range2562); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACK226_tree = (CommonTree)adaptor.create(LBRACK226);
                    adaptor.addChild(root_0, LBRACK226_tree);
                    }
                    pushFollow(FOLLOW_expression_in_range2564);
                    expression227=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression227.getTree());
                    COLON228=(Token)match(input,COLON,FOLLOW_COLON_in_range2566); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON228_tree = (CommonTree)adaptor.create(COLON228);
                    adaptor.addChild(root_0, COLON228_tree);
                    }
                    pushFollow(FOLLOW_expression_in_range2568);
                    expression229=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression229.getTree());
                    RBRACK230=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_range2570); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACK230_tree = (CommonTree)adaptor.create(RBRACK230);
                    adaptor.addChild(root_0, RBRACK230_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:394:9: LBRACK expression RBRACK
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LBRACK231=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_range2582); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACK231_tree = (CommonTree)adaptor.create(LBRACK231);
                    adaptor.addChild(root_0, LBRACK231_tree);
                    }
                    pushFollow(FOLLOW_expression_in_range2584);
                    expression232=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression232.getTree());
                    RBRACK233=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_range2586); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACK233_tree = (CommonTree)adaptor.create(RBRACK233);
                    adaptor.addChild(root_0, RBRACK233_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "range"

    public static class list_of_assignments_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_assignments"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:397:1: list_of_assignments : assignment ( COMMA assignment )* ;
    public final VerilogAParser.list_of_assignments_return list_of_assignments() throws RecognitionException {
        VerilogAParser.list_of_assignments_return retval = new VerilogAParser.list_of_assignments_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA235=null;
        VerilogAParser.assignment_return assignment234 = null;

        VerilogAParser.assignment_return assignment236 = null;


        CommonTree COMMA235_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:397:21: ( assignment ( COMMA assignment )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:398:9: assignment ( COMMA assignment )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_assignment_in_list_of_assignments2611);
            assignment234=assignment();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment234.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:398:20: ( COMMA assignment )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==COMMA) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:398:22: COMMA assignment
            	    {
            	    COMMA235=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_assignments2615); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA235_tree = (CommonTree)adaptor.create(COMMA235);
            	    adaptor.addChild(root_0, COMMA235_tree);
            	    }
            	    pushFollow(FOLLOW_assignment_in_list_of_assignments2617);
            	    assignment236=assignment();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment236.getTree());

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_assignments"

    public static class gate_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "gate_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:406:1: gate_declaration : gate_type ( drive_strength )? ( delay )? gate_instance ( COMMA gate_instance )* SEMI ;
    public final VerilogAParser.gate_declaration_return gate_declaration() throws RecognitionException {
        VerilogAParser.gate_declaration_return retval = new VerilogAParser.gate_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA241=null;
        Token SEMI243=null;
        VerilogAParser.gate_type_return gate_type237 = null;

        VerilogAParser.drive_strength_return drive_strength238 = null;

        VerilogAParser.delay_return delay239 = null;

        VerilogAParser.gate_instance_return gate_instance240 = null;

        VerilogAParser.gate_instance_return gate_instance242 = null;


        CommonTree COMMA241_tree=null;
        CommonTree SEMI243_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:406:18: ( gate_type ( drive_strength )? ( delay )? gate_instance ( COMMA gate_instance )* SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:407:2: gate_type ( drive_strength )? ( delay )? gate_instance ( COMMA gate_instance )* SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_gate_type_in_gate_declaration2643);
            gate_type237=gate_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, gate_type237.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:407:12: ( drive_strength )?
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:407:13: drive_strength
                    {
                    pushFollow(FOLLOW_drive_strength_in_gate_declaration2646);
                    drive_strength238=drive_strength();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, drive_strength238.getTree());

                    }
                    break;

            }

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:407:30: ( delay )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==POUND) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:407:31: delay
                    {
                    pushFollow(FOLLOW_delay_in_gate_declaration2651);
                    delay239=delay();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delay239.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_gate_instance_in_gate_declaration2665);
            gate_instance240=gate_instance();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, gate_instance240.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:408:25: ( COMMA gate_instance )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==COMMA) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:408:27: COMMA gate_instance
            	    {
            	    COMMA241=(Token)match(input,COMMA,FOLLOW_COMMA_in_gate_declaration2669); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA241_tree = (CommonTree)adaptor.create(COMMA241);
            	    adaptor.addChild(root_0, COMMA241_tree);
            	    }
            	    pushFollow(FOLLOW_gate_instance_in_gate_declaration2671);
            	    gate_instance242=gate_instance();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, gate_instance242.getTree());

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            SEMI243=(Token)match(input,SEMI,FOLLOW_SEMI_in_gate_declaration2676); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI243_tree = (CommonTree)adaptor.create(SEMI243);
            adaptor.addChild(root_0, SEMI243_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "gate_declaration"

    public static class gate_type_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "gate_type"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:411:1: gate_type : ( 'and' | 'nand' | 'or' | 'nor' | 'xor' | 'xnor' | 'buf' | 'bufif0' | 'bufif1' | 'not' | 'notif0' | 'notif1' | 'pulldown' | 'pullup' | 'nmos' | 'rnmos' | 'pmos' | 'rpmos' | 'cmos' | 'rcmos' | 'tran' | 'rtran' | 'tranif0' | 'rtranif0' | 'tranif1' | 'rtranif1' );
    public final VerilogAParser.gate_type_return gate_type() throws RecognitionException {
        VerilogAParser.gate_type_return retval = new VerilogAParser.gate_type_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set244=null;

        CommonTree set244_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:411:11: ( 'and' | 'nand' | 'or' | 'nor' | 'xor' | 'xnor' | 'buf' | 'bufif0' | 'bufif1' | 'not' | 'notif0' | 'notif1' | 'pulldown' | 'pullup' | 'nmos' | 'rnmos' | 'pmos' | 'rpmos' | 'cmos' | 'rcmos' | 'tran' | 'rtran' | 'tranif0' | 'rtranif0' | 'tranif1' | 'rtranif1' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set244=(Token)input.LT(1);
            if ( (input.LA(1)>=115 && input.LA(1)<=140) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set244));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "gate_type"

    public static class delay_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delay"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:440:1: delay : ( POUND NUMBER | POUND identifier | POUND LPAREN mintypmax_expression ( COMMA mintypmax_expression ( COMMA mintypmax_expression )? )? RPAREN );
    public final VerilogAParser.delay_return delay() throws RecognitionException {
        VerilogAParser.delay_return retval = new VerilogAParser.delay_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token POUND245=null;
        Token NUMBER246=null;
        Token POUND247=null;
        Token POUND249=null;
        Token LPAREN250=null;
        Token COMMA252=null;
        Token COMMA254=null;
        Token RPAREN256=null;
        VerilogAParser.identifier_return identifier248 = null;

        VerilogAParser.mintypmax_expression_return mintypmax_expression251 = null;

        VerilogAParser.mintypmax_expression_return mintypmax_expression253 = null;

        VerilogAParser.mintypmax_expression_return mintypmax_expression255 = null;


        CommonTree POUND245_tree=null;
        CommonTree NUMBER246_tree=null;
        CommonTree POUND247_tree=null;
        CommonTree POUND249_tree=null;
        CommonTree LPAREN250_tree=null;
        CommonTree COMMA252_tree=null;
        CommonTree COMMA254_tree=null;
        CommonTree RPAREN256_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:440:7: ( POUND NUMBER | POUND identifier | POUND LPAREN mintypmax_expression ( COMMA mintypmax_expression ( COMMA mintypmax_expression )? )? RPAREN )
            int alt60=3;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==POUND) ) {
                switch ( input.LA(2) ) {
                case NUMBER:
                    {
                    alt60=1;
                    }
                    break;
                case LPAREN:
                    {
                    alt60=3;
                    }
                    break;
                case IDENTIFIER:
                case ESCAPED_IDENTIFIER:
                    {
                    alt60=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:441:9: POUND NUMBER
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    POUND245=(Token)match(input,POUND,FOLLOW_POUND_in_delay3019); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    POUND245_tree = (CommonTree)adaptor.create(POUND245);
                    adaptor.addChild(root_0, POUND245_tree);
                    }
                    NUMBER246=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_delay3021); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NUMBER246_tree = (CommonTree)adaptor.create(NUMBER246);
                    adaptor.addChild(root_0, NUMBER246_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:442:2: POUND identifier
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    POUND247=(Token)match(input,POUND,FOLLOW_POUND_in_delay3027); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    POUND247_tree = (CommonTree)adaptor.create(POUND247);
                    adaptor.addChild(root_0, POUND247_tree);
                    }
                    pushFollow(FOLLOW_identifier_in_delay3029);
                    identifier248=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier248.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:443:9: POUND LPAREN mintypmax_expression ( COMMA mintypmax_expression ( COMMA mintypmax_expression )? )? RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    POUND249=(Token)match(input,POUND,FOLLOW_POUND_in_delay3041); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    POUND249_tree = (CommonTree)adaptor.create(POUND249);
                    adaptor.addChild(root_0, POUND249_tree);
                    }
                    LPAREN250=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_delay3043); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN250_tree = (CommonTree)adaptor.create(LPAREN250);
                    adaptor.addChild(root_0, LPAREN250_tree);
                    }
                    pushFollow(FOLLOW_mintypmax_expression_in_delay3045);
                    mintypmax_expression251=mintypmax_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mintypmax_expression251.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:444:10: ( COMMA mintypmax_expression ( COMMA mintypmax_expression )? )?
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==COMMA) ) {
                        alt59=1;
                    }
                    switch (alt59) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:444:12: COMMA mintypmax_expression ( COMMA mintypmax_expression )?
                            {
                            COMMA252=(Token)match(input,COMMA,FOLLOW_COMMA_in_delay3058); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA252_tree = (CommonTree)adaptor.create(COMMA252);
                            adaptor.addChild(root_0, COMMA252_tree);
                            }
                            pushFollow(FOLLOW_mintypmax_expression_in_delay3060);
                            mintypmax_expression253=mintypmax_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, mintypmax_expression253.getTree());
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:445:5: ( COMMA mintypmax_expression )?
                            int alt58=2;
                            int LA58_0 = input.LA(1);

                            if ( (LA58_0==COMMA) ) {
                                alt58=1;
                            }
                            switch (alt58) {
                                case 1 :
                                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:445:7: COMMA mintypmax_expression
                                    {
                                    COMMA254=(Token)match(input,COMMA,FOLLOW_COMMA_in_delay3068); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    COMMA254_tree = (CommonTree)adaptor.create(COMMA254);
                                    adaptor.addChild(root_0, COMMA254_tree);
                                    }
                                    pushFollow(FOLLOW_mintypmax_expression_in_delay3070);
                                    mintypmax_expression255=mintypmax_expression();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mintypmax_expression255.getTree());

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    RPAREN256=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delay3087); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN256_tree = (CommonTree)adaptor.create(RPAREN256);
                    adaptor.addChild(root_0, RPAREN256_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "delay"

    public static class gate_instance_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "gate_instance"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:450:1: gate_instance : ( name_of_gate_instance )? LPAREN terminal ( COMMA terminal )* RPAREN ;
    public final VerilogAParser.gate_instance_return gate_instance() throws RecognitionException {
        VerilogAParser.gate_instance_return retval = new VerilogAParser.gate_instance_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN258=null;
        Token COMMA260=null;
        Token RPAREN262=null;
        VerilogAParser.name_of_gate_instance_return name_of_gate_instance257 = null;

        VerilogAParser.terminal_return terminal259 = null;

        VerilogAParser.terminal_return terminal261 = null;


        CommonTree LPAREN258_tree=null;
        CommonTree COMMA260_tree=null;
        CommonTree RPAREN262_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:450:15: ( ( name_of_gate_instance )? LPAREN terminal ( COMMA terminal )* RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:451:9: ( name_of_gate_instance )? LPAREN terminal ( COMMA terminal )* RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:451:9: ( name_of_gate_instance )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==IDENTIFIER||LA61_0==ESCAPED_IDENTIFIER) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:451:10: name_of_gate_instance
                    {
                    pushFollow(FOLLOW_name_of_gate_instance_in_gate_instance3113);
                    name_of_gate_instance257=name_of_gate_instance();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_gate_instance257.getTree());

                    }
                    break;

            }

            LPAREN258=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_gate_instance3118); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN258_tree = (CommonTree)adaptor.create(LPAREN258);
            adaptor.addChild(root_0, LPAREN258_tree);
            }
            pushFollow(FOLLOW_terminal_in_gate_instance3120);
            terminal259=terminal();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, terminal259.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:452:18: ( COMMA terminal )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==COMMA) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:452:20: COMMA terminal
            	    {
            	    COMMA260=(Token)match(input,COMMA,FOLLOW_COMMA_in_gate_instance3124); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA260_tree = (CommonTree)adaptor.create(COMMA260);
            	    adaptor.addChild(root_0, COMMA260_tree);
            	    }
            	    pushFollow(FOLLOW_terminal_in_gate_instance3126);
            	    terminal261=terminal();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, terminal261.getTree());

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            RPAREN262=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_gate_instance3131); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN262_tree = (CommonTree)adaptor.create(RPAREN262);
            adaptor.addChild(root_0, RPAREN262_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "gate_instance"

    public static class udp_instantiation_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "udp_instantiation"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:455:1: udp_instantiation : name_of_UDP ( drive_strength )? ( delay )? udp_instance ( COMMA udp_instance )* SEMI ;
    public final VerilogAParser.udp_instantiation_return udp_instantiation() throws RecognitionException {
        VerilogAParser.udp_instantiation_return retval = new VerilogAParser.udp_instantiation_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA267=null;
        Token SEMI269=null;
        VerilogAParser.name_of_UDP_return name_of_UDP263 = null;

        VerilogAParser.drive_strength_return drive_strength264 = null;

        VerilogAParser.delay_return delay265 = null;

        VerilogAParser.udp_instance_return udp_instance266 = null;

        VerilogAParser.udp_instance_return udp_instance268 = null;


        CommonTree COMMA267_tree=null;
        CommonTree SEMI269_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:455:19: ( name_of_UDP ( drive_strength )? ( delay )? udp_instance ( COMMA udp_instance )* SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:456:2: name_of_UDP ( drive_strength )? ( delay )? udp_instance ( COMMA udp_instance )* SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_name_of_UDP_in_udp_instantiation3149);
            name_of_UDP263=name_of_UDP();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_UDP263.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:456:14: ( drive_strength )?
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:456:15: drive_strength
                    {
                    pushFollow(FOLLOW_drive_strength_in_udp_instantiation3152);
                    drive_strength264=drive_strength();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, drive_strength264.getTree());

                    }
                    break;

            }

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:456:32: ( delay )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==POUND) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:456:33: delay
                    {
                    pushFollow(FOLLOW_delay_in_udp_instantiation3157);
                    delay265=delay();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delay265.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_udp_instance_in_udp_instantiation3171);
            udp_instance266=udp_instance();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, udp_instance266.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:457:24: ( COMMA udp_instance )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==COMMA) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:457:26: COMMA udp_instance
            	    {
            	    COMMA267=(Token)match(input,COMMA,FOLLOW_COMMA_in_udp_instantiation3175); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA267_tree = (CommonTree)adaptor.create(COMMA267);
            	    adaptor.addChild(root_0, COMMA267_tree);
            	    }
            	    pushFollow(FOLLOW_udp_instance_in_udp_instantiation3177);
            	    udp_instance268=udp_instance();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, udp_instance268.getTree());

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            SEMI269=(Token)match(input,SEMI,FOLLOW_SEMI_in_udp_instantiation3182); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI269_tree = (CommonTree)adaptor.create(SEMI269);
            adaptor.addChild(root_0, SEMI269_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "udp_instantiation"

    public static class udp_instance_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "udp_instance"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:460:1: udp_instance : ( name_of_UDP_instance )? LPAREN terminal ( COMMA terminal )* RPAREN ;
    public final VerilogAParser.udp_instance_return udp_instance() throws RecognitionException {
        VerilogAParser.udp_instance_return retval = new VerilogAParser.udp_instance_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN271=null;
        Token COMMA273=null;
        Token RPAREN275=null;
        VerilogAParser.name_of_UDP_instance_return name_of_UDP_instance270 = null;

        VerilogAParser.terminal_return terminal272 = null;

        VerilogAParser.terminal_return terminal274 = null;


        CommonTree LPAREN271_tree=null;
        CommonTree COMMA273_tree=null;
        CommonTree RPAREN275_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:460:14: ( ( name_of_UDP_instance )? LPAREN terminal ( COMMA terminal )* RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:461:9: ( name_of_UDP_instance )? LPAREN terminal ( COMMA terminal )* RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:461:9: ( name_of_UDP_instance )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==IDENTIFIER||LA66_0==ESCAPED_IDENTIFIER) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:461:10: name_of_UDP_instance
                    {
                    pushFollow(FOLLOW_name_of_UDP_instance_in_udp_instance3201);
                    name_of_UDP_instance270=name_of_UDP_instance();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_UDP_instance270.getTree());

                    }
                    break;

            }

            LPAREN271=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_udp_instance3206); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN271_tree = (CommonTree)adaptor.create(LPAREN271);
            adaptor.addChild(root_0, LPAREN271_tree);
            }
            pushFollow(FOLLOW_terminal_in_udp_instance3208);
            terminal272=terminal();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, terminal272.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:462:18: ( COMMA terminal )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==COMMA) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:462:20: COMMA terminal
            	    {
            	    COMMA273=(Token)match(input,COMMA,FOLLOW_COMMA_in_udp_instance3212); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA273_tree = (CommonTree)adaptor.create(COMMA273);
            	    adaptor.addChild(root_0, COMMA273_tree);
            	    }
            	    pushFollow(FOLLOW_terminal_in_udp_instance3214);
            	    terminal274=terminal();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, terminal274.getTree());

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            RPAREN275=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_udp_instance3219); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN275_tree = (CommonTree)adaptor.create(RPAREN275);
            adaptor.addChild(root_0, RPAREN275_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "udp_instance"

    public static class terminal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "terminal"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:465:1: terminal : expression ;
    public final VerilogAParser.terminal_return terminal() throws RecognitionException {
        VerilogAParser.terminal_return retval = new VerilogAParser.terminal_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.expression_return expression276 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:465:10: ( expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:466:9: expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_terminal3244);
            expression276=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression276.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "terminal"

    public static class module_instantiation_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "module_instantiation"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:474:1: module_instantiation : name_of_module ( parameter_value_assignment )? module_instance ( COMMA module_instance )* SEMI ;
    public final VerilogAParser.module_instantiation_return module_instantiation() throws RecognitionException {
        VerilogAParser.module_instantiation_return retval = new VerilogAParser.module_instantiation_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA280=null;
        Token SEMI282=null;
        VerilogAParser.name_of_module_return name_of_module277 = null;

        VerilogAParser.parameter_value_assignment_return parameter_value_assignment278 = null;

        VerilogAParser.module_instance_return module_instance279 = null;

        VerilogAParser.module_instance_return module_instance281 = null;


        CommonTree COMMA280_tree=null;
        CommonTree SEMI282_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:474:22: ( name_of_module ( parameter_value_assignment )? module_instance ( COMMA module_instance )* SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:475:9: name_of_module ( parameter_value_assignment )? module_instance ( COMMA module_instance )* SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_name_of_module_in_module_instantiation3277);
            name_of_module277=name_of_module();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_module277.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:475:24: ( parameter_value_assignment )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==POUND) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:475:25: parameter_value_assignment
                    {
                    pushFollow(FOLLOW_parameter_value_assignment_in_module_instantiation3280);
                    parameter_value_assignment278=parameter_value_assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_value_assignment278.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_module_instance_in_module_instantiation3292);
            module_instance279=module_instance();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, module_instance279.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:476:25: ( COMMA module_instance )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==COMMA) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:476:27: COMMA module_instance
            	    {
            	    COMMA280=(Token)match(input,COMMA,FOLLOW_COMMA_in_module_instantiation3296); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA280_tree = (CommonTree)adaptor.create(COMMA280);
            	    adaptor.addChild(root_0, COMMA280_tree);
            	    }
            	    pushFollow(FOLLOW_module_instance_in_module_instantiation3298);
            	    module_instance281=module_instance();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, module_instance281.getTree());

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            SEMI282=(Token)match(input,SEMI,FOLLOW_SEMI_in_module_instantiation3303); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI282_tree = (CommonTree)adaptor.create(SEMI282);
            adaptor.addChild(root_0, SEMI282_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "module_instantiation"

    public static class parameter_value_assignment_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameter_value_assignment"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:479:1: parameter_value_assignment : POUND LPAREN expression ( COMMA expression )* RPAREN ;
    public final VerilogAParser.parameter_value_assignment_return parameter_value_assignment() throws RecognitionException {
        VerilogAParser.parameter_value_assignment_return retval = new VerilogAParser.parameter_value_assignment_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token POUND283=null;
        Token LPAREN284=null;
        Token COMMA286=null;
        Token RPAREN288=null;
        VerilogAParser.expression_return expression285 = null;

        VerilogAParser.expression_return expression287 = null;


        CommonTree POUND283_tree=null;
        CommonTree LPAREN284_tree=null;
        CommonTree COMMA286_tree=null;
        CommonTree RPAREN288_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:479:28: ( POUND LPAREN expression ( COMMA expression )* RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:480:9: POUND LPAREN expression ( COMMA expression )* RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            POUND283=(Token)match(input,POUND,FOLLOW_POUND_in_parameter_value_assignment3328); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            POUND283_tree = (CommonTree)adaptor.create(POUND283);
            adaptor.addChild(root_0, POUND283_tree);
            }
            LPAREN284=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameter_value_assignment3330); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN284_tree = (CommonTree)adaptor.create(LPAREN284);
            adaptor.addChild(root_0, LPAREN284_tree);
            }
            pushFollow(FOLLOW_expression_in_parameter_value_assignment3332);
            expression285=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression285.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:480:33: ( COMMA expression )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==COMMA) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:480:35: COMMA expression
            	    {
            	    COMMA286=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameter_value_assignment3336); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA286_tree = (CommonTree)adaptor.create(COMMA286);
            	    adaptor.addChild(root_0, COMMA286_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_parameter_value_assignment3338);
            	    expression287=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression287.getTree());

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            RPAREN288=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameter_value_assignment3343); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN288_tree = (CommonTree)adaptor.create(RPAREN288);
            adaptor.addChild(root_0, RPAREN288_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "parameter_value_assignment"

    public static class module_instance_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "module_instance"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:483:1: module_instance : name_of_instance LPAREN list_of_module_connections RPAREN ;
    public final VerilogAParser.module_instance_return module_instance() throws RecognitionException {
        VerilogAParser.module_instance_return retval = new VerilogAParser.module_instance_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN290=null;
        Token RPAREN292=null;
        VerilogAParser.name_of_instance_return name_of_instance289 = null;

        VerilogAParser.list_of_module_connections_return list_of_module_connections291 = null;


        CommonTree LPAREN290_tree=null;
        CommonTree RPAREN292_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:483:17: ( name_of_instance LPAREN list_of_module_connections RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:484:9: name_of_instance LPAREN list_of_module_connections RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_name_of_instance_in_module_instance3368);
            name_of_instance289=name_of_instance();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_instance289.getTree());
            LPAREN290=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_module_instance3370); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN290_tree = (CommonTree)adaptor.create(LPAREN290);
            adaptor.addChild(root_0, LPAREN290_tree);
            }
            pushFollow(FOLLOW_list_of_module_connections_in_module_instance3372);
            list_of_module_connections291=list_of_module_connections();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_module_connections291.getTree());
            RPAREN292=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_module_instance3374); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN292_tree = (CommonTree)adaptor.create(RPAREN292);
            adaptor.addChild(root_0, RPAREN292_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "module_instance"

    public static class list_of_module_connections_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_module_connections"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:487:1: list_of_module_connections : ( module_port_connection ( COMMA module_port_connection )* | named_port_connection ( COMMA named_port_connection )* );
    public final VerilogAParser.list_of_module_connections_return list_of_module_connections() throws RecognitionException {
        VerilogAParser.list_of_module_connections_return retval = new VerilogAParser.list_of_module_connections_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA294=null;
        Token COMMA297=null;
        VerilogAParser.module_port_connection_return module_port_connection293 = null;

        VerilogAParser.module_port_connection_return module_port_connection295 = null;

        VerilogAParser.named_port_connection_return named_port_connection296 = null;

        VerilogAParser.named_port_connection_return named_port_connection298 = null;


        CommonTree COMMA294_tree=null;
        CommonTree COMMA297_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:487:28: ( module_port_connection ( COMMA module_port_connection )* | named_port_connection ( COMMA named_port_connection )* )
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:488:9: module_port_connection ( COMMA module_port_connection )*
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_module_port_connection_in_list_of_module_connections3399);
                    module_port_connection293=module_port_connection();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, module_port_connection293.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:488:32: ( COMMA module_port_connection )*
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==COMMA) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:488:34: COMMA module_port_connection
                    	    {
                    	    COMMA294=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_module_connections3403); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA294_tree = (CommonTree)adaptor.create(COMMA294);
                    	    adaptor.addChild(root_0, COMMA294_tree);
                    	    }
                    	    pushFollow(FOLLOW_module_port_connection_in_list_of_module_connections3405);
                    	    module_port_connection295=module_port_connection();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, module_port_connection295.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:489:9: named_port_connection ( COMMA named_port_connection )*
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_named_port_connection_in_list_of_module_connections3420);
                    named_port_connection296=named_port_connection();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, named_port_connection296.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:489:31: ( COMMA named_port_connection )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==COMMA) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:489:33: COMMA named_port_connection
                    	    {
                    	    COMMA297=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_module_connections3424); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA297_tree = (CommonTree)adaptor.create(COMMA297);
                    	    adaptor.addChild(root_0, COMMA297_tree);
                    	    }
                    	    pushFollow(FOLLOW_named_port_connection_in_list_of_module_connections3426);
                    	    named_port_connection298=named_port_connection();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, named_port_connection298.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_module_connections"

    public static class module_port_connection_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "module_port_connection"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:492:1: module_port_connection : ( expression | );
    public final VerilogAParser.module_port_connection_return module_port_connection() throws RecognitionException {
        VerilogAParser.module_port_connection_return retval = new VerilogAParser.module_port_connection_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.expression_return expression299 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:492:24: ( expression | )
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:493:9: expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_module_port_connection3454);
                    expression299=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression299.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:495:9: 
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "module_port_connection"

    public static class named_port_connection_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "named_port_connection"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:499:1: named_port_connection : DOT IDENTIFIER LPAREN ( expression )? RPAREN ;
    public final VerilogAParser.named_port_connection_return named_port_connection() throws RecognitionException {
        VerilogAParser.named_port_connection_return retval = new VerilogAParser.named_port_connection_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token DOT300=null;
        Token IDENTIFIER301=null;
        Token LPAREN302=null;
        Token RPAREN304=null;
        VerilogAParser.expression_return expression303 = null;


        CommonTree DOT300_tree=null;
        CommonTree IDENTIFIER301_tree=null;
        CommonTree LPAREN302_tree=null;
        CommonTree RPAREN304_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:499:23: ( DOT IDENTIFIER LPAREN ( expression )? RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:500:9: DOT IDENTIFIER LPAREN ( expression )? RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            DOT300=(Token)match(input,DOT,FOLLOW_DOT_in_named_port_connection3487); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DOT300_tree = (CommonTree)adaptor.create(DOT300);
            adaptor.addChild(root_0, DOT300_tree);
            }
            IDENTIFIER301=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_named_port_connection3489); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER301_tree = (CommonTree)adaptor.create(IDENTIFIER301);
            adaptor.addChild(root_0, IDENTIFIER301_tree);
            }
            LPAREN302=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_named_port_connection3491); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN302_tree = (CommonTree)adaptor.create(LPAREN302);
            adaptor.addChild(root_0, LPAREN302_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:500:31: ( expression )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:500:32: expression
                    {
                    pushFollow(FOLLOW_expression_in_named_port_connection3494);
                    expression303=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression303.getTree());

                    }
                    break;

            }

            RPAREN304=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_named_port_connection3498); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN304_tree = (CommonTree)adaptor.create(RPAREN304);
            adaptor.addChild(root_0, RPAREN304_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "named_port_connection"

    public static class initial_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "initial_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:507:1: initial_statement : 'initial' statement ;
    public final VerilogAParser.initial_statement_return initial_statement() throws RecognitionException {
        VerilogAParser.initial_statement_return retval = new VerilogAParser.initial_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal305=null;
        VerilogAParser.statement_return statement306 = null;


        CommonTree string_literal305_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:507:19: ( 'initial' statement )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:508:9: 'initial' statement
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal305=(Token)match(input,72,FOLLOW_72_in_initial_statement3527); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal305_tree = (CommonTree)adaptor.create(string_literal305);
            adaptor.addChild(root_0, string_literal305_tree);
            }
            pushFollow(FOLLOW_statement_in_initial_statement3529);
            statement306=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement306.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "initial_statement"

    public static class always_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "always_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:511:1: always_statement : 'always' statement ;
    public final VerilogAParser.always_statement_return always_statement() throws RecognitionException {
        VerilogAParser.always_statement_return retval = new VerilogAParser.always_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal307=null;
        VerilogAParser.statement_return statement308 = null;


        CommonTree string_literal307_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:511:18: ( 'always' statement )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:512:9: 'always' statement
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal307=(Token)match(input,141,FOLLOW_141_in_always_statement3554); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal307_tree = (CommonTree)adaptor.create(string_literal307);
            adaptor.addChild(root_0, string_literal307_tree);
            }
            pushFollow(FOLLOW_statement_in_always_statement3556);
            statement308=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement308.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "always_statement"

    public static class statement_or_null_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement_or_null"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:515:1: statement_or_null : ( ( statement )=> statement | SEMI );
    public final VerilogAParser.statement_or_null_return statement_or_null() throws RecognitionException {
        VerilogAParser.statement_or_null_return retval = new VerilogAParser.statement_or_null_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token SEMI310=null;
        VerilogAParser.statement_return statement309 = null;


        CommonTree SEMI310_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:515:19: ( ( statement )=> statement | SEMI )
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:516:9: ( statement )=> statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_statement_in_statement_or_null3587);
                    statement309=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement309.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:517:2: SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    SEMI310=(Token)match(input,SEMI,FOLLOW_SEMI_in_statement_or_null3592); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI310_tree = (CommonTree)adaptor.create(SEMI310);
                    adaptor.addChild(root_0, SEMI310_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "statement_or_null"

    public static class statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:520:1: statement : ( ( lvalue ASSIGN )=> blocking_assignment SEMI | ( lvalue LE )=> non_blocking_assignment SEMI | conditional_statement | case_statement | loop_statement | procedural_timing_control_statement | wait_statement | event_trigger | seq_block | par_block | task_enable | system_task_enable | disable_statement | procedural_continuous_assignment );
    public final VerilogAParser.statement_return statement() throws RecognitionException {
        VerilogAParser.statement_return retval = new VerilogAParser.statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token SEMI312=null;
        Token SEMI314=null;
        VerilogAParser.blocking_assignment_return blocking_assignment311 = null;

        VerilogAParser.non_blocking_assignment_return non_blocking_assignment313 = null;

        VerilogAParser.conditional_statement_return conditional_statement315 = null;

        VerilogAParser.case_statement_return case_statement316 = null;

        VerilogAParser.loop_statement_return loop_statement317 = null;

        VerilogAParser.procedural_timing_control_statement_return procedural_timing_control_statement318 = null;

        VerilogAParser.wait_statement_return wait_statement319 = null;

        VerilogAParser.event_trigger_return event_trigger320 = null;

        VerilogAParser.seq_block_return seq_block321 = null;

        VerilogAParser.par_block_return par_block322 = null;

        VerilogAParser.task_enable_return task_enable323 = null;

        VerilogAParser.system_task_enable_return system_task_enable324 = null;

        VerilogAParser.disable_statement_return disable_statement325 = null;

        VerilogAParser.procedural_continuous_assignment_return procedural_continuous_assignment326 = null;


        CommonTree SEMI312_tree=null;
        CommonTree SEMI314_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:520:11: ( ( lvalue ASSIGN )=> blocking_assignment SEMI | ( lvalue LE )=> non_blocking_assignment SEMI | conditional_statement | case_statement | loop_statement | procedural_timing_control_statement | wait_statement | event_trigger | seq_block | par_block | task_enable | system_task_enable | disable_statement | procedural_continuous_assignment )
            int alt77=14;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:521:9: ( lvalue ASSIGN )=> blocking_assignment SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_blocking_assignment_in_statement3625);
                    blocking_assignment311=blocking_assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, blocking_assignment311.getTree());
                    SEMI312=(Token)match(input,SEMI,FOLLOW_SEMI_in_statement3627); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI312_tree = (CommonTree)adaptor.create(SEMI312);
                    adaptor.addChild(root_0, SEMI312_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:522:9: ( lvalue LE )=> non_blocking_assignment SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_non_blocking_assignment_in_statement3647);
                    non_blocking_assignment313=non_blocking_assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_blocking_assignment313.getTree());
                    SEMI314=(Token)match(input,SEMI,FOLLOW_SEMI_in_statement3649); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI314_tree = (CommonTree)adaptor.create(SEMI314);
                    adaptor.addChild(root_0, SEMI314_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:523:9: conditional_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_conditional_statement_in_statement3661);
                    conditional_statement315=conditional_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_statement315.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:524:9: case_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_case_statement_in_statement3673);
                    case_statement316=case_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, case_statement316.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:525:9: loop_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_loop_statement_in_statement3685);
                    loop_statement317=loop_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, loop_statement317.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:526:9: procedural_timing_control_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_procedural_timing_control_statement_in_statement3697);
                    procedural_timing_control_statement318=procedural_timing_control_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, procedural_timing_control_statement318.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:527:9: wait_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_wait_statement_in_statement3709);
                    wait_statement319=wait_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, wait_statement319.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:528:9: event_trigger
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_event_trigger_in_statement3721);
                    event_trigger320=event_trigger();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_trigger320.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:529:9: seq_block
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_seq_block_in_statement3733);
                    seq_block321=seq_block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, seq_block321.getTree());

                    }
                    break;
                case 10 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:530:9: par_block
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_par_block_in_statement3745);
                    par_block322=par_block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, par_block322.getTree());

                    }
                    break;
                case 11 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:531:9: task_enable
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_task_enable_in_statement3757);
                    task_enable323=task_enable();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, task_enable323.getTree());

                    }
                    break;
                case 12 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:532:9: system_task_enable
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_system_task_enable_in_statement3769);
                    system_task_enable324=system_task_enable();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, system_task_enable324.getTree());

                    }
                    break;
                case 13 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:533:9: disable_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_disable_statement_in_statement3781);
                    disable_statement325=disable_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, disable_statement325.getTree());

                    }
                    break;
                case 14 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:534:9: procedural_continuous_assignment
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_procedural_continuous_assignment_in_statement3793);
                    procedural_continuous_assignment326=procedural_continuous_assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, procedural_continuous_assignment326.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "statement"

    public static class assignment_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignment"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:537:1: assignment : lvalue assignment2 ;
    public final VerilogAParser.assignment_return assignment() throws RecognitionException {
        VerilogAParser.assignment_return retval = new VerilogAParser.assignment_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.lvalue_return lvalue327 = null;

        VerilogAParser.assignment2_return assignment2328 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:537:12: ( lvalue assignment2 )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:538:9: lvalue assignment2
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_lvalue_in_assignment3818);
            lvalue327=lvalue();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) root_0 = (CommonTree)adaptor.becomeRoot(lvalue327.getTree(), root_0);
            pushFollow(FOLLOW_assignment2_in_assignment3821);
            assignment2328=assignment2();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment2328.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "assignment"

    public static class assignment2_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignment2"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:541:1: assignment2 : ASSIGN expression ;
    public final VerilogAParser.assignment2_return assignment2() throws RecognitionException {
        VerilogAParser.assignment2_return retval = new VerilogAParser.assignment2_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token ASSIGN329=null;
        VerilogAParser.expression_return expression330 = null;


        CommonTree ASSIGN329_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:541:13: ( ASSIGN expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:542:2: ASSIGN expression
            {
            root_0 = (CommonTree)adaptor.nil();

            ASSIGN329=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_assignment23850); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGN329_tree = (CommonTree)adaptor.create(ASSIGN329);
            root_0 = (CommonTree)adaptor.becomeRoot(ASSIGN329_tree, root_0);
            }
            pushFollow(FOLLOW_expression_in_assignment23853);
            expression330=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression330.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "assignment2"

    public static class blocking_assignment_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "blocking_assignment"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:546:1: blocking_assignment : lvalue ASSIGN ( delay_or_event_control )? expression ;
    public final VerilogAParser.blocking_assignment_return blocking_assignment() throws RecognitionException {
        VerilogAParser.blocking_assignment_return retval = new VerilogAParser.blocking_assignment_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token ASSIGN332=null;
        VerilogAParser.lvalue_return lvalue331 = null;

        VerilogAParser.delay_or_event_control_return delay_or_event_control333 = null;

        VerilogAParser.expression_return expression334 = null;


        CommonTree ASSIGN332_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:546:21: ( lvalue ASSIGN ( delay_or_event_control )? expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:547:9: lvalue ASSIGN ( delay_or_event_control )? expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_lvalue_in_blocking_assignment3873);
            lvalue331=lvalue();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, lvalue331.getTree());
            ASSIGN332=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_blocking_assignment3875); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGN332_tree = (CommonTree)adaptor.create(ASSIGN332);
            adaptor.addChild(root_0, ASSIGN332_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:547:23: ( delay_or_event_control )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:547:25: delay_or_event_control
                    {
                    pushFollow(FOLLOW_delay_or_event_control_in_blocking_assignment3879);
                    delay_or_event_control333=delay_or_event_control();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delay_or_event_control333.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_expression_in_blocking_assignment3885);
            expression334=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression334.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "blocking_assignment"

    public static class non_blocking_assignment_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "non_blocking_assignment"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:550:1: non_blocking_assignment : lvalue LE ( delay_or_event_control )? expression ;
    public final VerilogAParser.non_blocking_assignment_return non_blocking_assignment() throws RecognitionException {
        VerilogAParser.non_blocking_assignment_return retval = new VerilogAParser.non_blocking_assignment_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LE336=null;
        VerilogAParser.lvalue_return lvalue335 = null;

        VerilogAParser.delay_or_event_control_return delay_or_event_control337 = null;

        VerilogAParser.expression_return expression338 = null;


        CommonTree LE336_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:550:25: ( lvalue LE ( delay_or_event_control )? expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:551:9: lvalue LE ( delay_or_event_control )? expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_lvalue_in_non_blocking_assignment3910);
            lvalue335=lvalue();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, lvalue335.getTree());
            LE336=(Token)match(input,LE,FOLLOW_LE_in_non_blocking_assignment3912); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LE336_tree = (CommonTree)adaptor.create(LE336);
            adaptor.addChild(root_0, LE336_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:551:19: ( delay_or_event_control )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:551:21: delay_or_event_control
                    {
                    pushFollow(FOLLOW_delay_or_event_control_in_non_blocking_assignment3916);
                    delay_or_event_control337=delay_or_event_control();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delay_or_event_control337.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_expression_in_non_blocking_assignment3922);
            expression338=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression338.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "non_blocking_assignment"

    public static class conditional_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditional_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:556:1: conditional_statement : 'if' LPAREN expression RPAREN statement_or_null ( 'else' statement_or_null )? ;
    public final VerilogAParser.conditional_statement_return conditional_statement() throws RecognitionException {
        VerilogAParser.conditional_statement_return retval = new VerilogAParser.conditional_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal339=null;
        Token LPAREN340=null;
        Token RPAREN342=null;
        Token string_literal344=null;
        VerilogAParser.expression_return expression341 = null;

        VerilogAParser.statement_or_null_return statement_or_null343 = null;

        VerilogAParser.statement_or_null_return statement_or_null345 = null;


        CommonTree string_literal339_tree=null;
        CommonTree LPAREN340_tree=null;
        CommonTree RPAREN342_tree=null;
        CommonTree string_literal344_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:556:23: ( 'if' LPAREN expression RPAREN statement_or_null ( 'else' statement_or_null )? )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:557:9: 'if' LPAREN expression RPAREN statement_or_null ( 'else' statement_or_null )?
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal339=(Token)match(input,142,FOLLOW_142_in_conditional_statement3955); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal339_tree = (CommonTree)adaptor.create(string_literal339);
            adaptor.addChild(root_0, string_literal339_tree);
            }
            LPAREN340=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_conditional_statement3957); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN340_tree = (CommonTree)adaptor.create(LPAREN340);
            adaptor.addChild(root_0, LPAREN340_tree);
            }
            pushFollow(FOLLOW_expression_in_conditional_statement3959);
            expression341=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression341.getTree());
            RPAREN342=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conditional_statement3961); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN342_tree = (CommonTree)adaptor.create(RPAREN342);
            adaptor.addChild(root_0, RPAREN342_tree);
            }
            pushFollow(FOLLOW_statement_or_null_in_conditional_statement3963);
            statement_or_null343=statement_or_null();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_or_null343.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:558:9: ( 'else' statement_or_null )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:558:13: 'else' statement_or_null
                    {
                    string_literal344=(Token)match(input,143,FOLLOW_143_in_conditional_statement3977); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal344_tree = (CommonTree)adaptor.create(string_literal344);
                    adaptor.addChild(root_0, string_literal344_tree);
                    }
                    pushFollow(FOLLOW_statement_or_null_in_conditional_statement3979);
                    statement_or_null345=statement_or_null();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_or_null345.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "conditional_statement"

    public static class case_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "case_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:561:1: case_statement : case_keyword LPAREN expression RPAREN ( case_item )+ 'endcase' ;
    public final VerilogAParser.case_statement_return case_statement() throws RecognitionException {
        VerilogAParser.case_statement_return retval = new VerilogAParser.case_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN347=null;
        Token RPAREN349=null;
        Token string_literal351=null;
        VerilogAParser.case_keyword_return case_keyword346 = null;

        VerilogAParser.expression_return expression348 = null;

        VerilogAParser.case_item_return case_item350 = null;


        CommonTree LPAREN347_tree=null;
        CommonTree RPAREN349_tree=null;
        CommonTree string_literal351_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:561:16: ( case_keyword LPAREN expression RPAREN ( case_item )+ 'endcase' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:562:9: case_keyword LPAREN expression RPAREN ( case_item )+ 'endcase'
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_case_keyword_in_case_statement4006);
            case_keyword346=case_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, case_keyword346.getTree());
            LPAREN347=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_case_statement4008); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN347_tree = (CommonTree)adaptor.create(LPAREN347);
            adaptor.addChild(root_0, LPAREN347_tree);
            }
            pushFollow(FOLLOW_expression_in_case_statement4010);
            expression348=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression348.getTree());
            RPAREN349=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_case_statement4012); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN349_tree = (CommonTree)adaptor.create(RPAREN349);
            adaptor.addChild(root_0, RPAREN349_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:562:47: ( case_item )+
            int cnt81=0;
            loop81:
            do {
                int alt81=2;
                alt81 = dfa81.predict(input);
                switch (alt81) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:562:48: case_item
            	    {
            	    pushFollow(FOLLOW_case_item_in_case_statement4015);
            	    case_item350=case_item();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, case_item350.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt81 >= 1 ) break loop81;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(81, input);
                        throw eee;
                }
                cnt81++;
            } while (true);

            string_literal351=(Token)match(input,144,FOLLOW_144_in_case_statement4019); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal351_tree = (CommonTree)adaptor.create(string_literal351);
            adaptor.addChild(root_0, string_literal351_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "case_statement"

    public static class case_keyword_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "case_keyword"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:565:1: case_keyword : ( 'case' | 'casez' | 'casex' );
    public final VerilogAParser.case_keyword_return case_keyword() throws RecognitionException {
        VerilogAParser.case_keyword_return retval = new VerilogAParser.case_keyword_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set352=null;

        CommonTree set352_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:565:14: ( 'case' | 'casez' | 'casex' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set352=(Token)input.LT(1);
            if ( (input.LA(1)>=145 && input.LA(1)<=147) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set352));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "case_keyword"

    public static class case_item_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "case_item"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:569:1: case_item : ( expression ( COMMA expression )* COLON statement_or_null | 'default' ( COLON )? statement_or_null );
    public final VerilogAParser.case_item_return case_item() throws RecognitionException {
        VerilogAParser.case_item_return retval = new VerilogAParser.case_item_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA354=null;
        Token COLON356=null;
        Token string_literal358=null;
        Token COLON359=null;
        VerilogAParser.expression_return expression353 = null;

        VerilogAParser.expression_return expression355 = null;

        VerilogAParser.statement_or_null_return statement_or_null357 = null;

        VerilogAParser.statement_or_null_return statement_or_null360 = null;


        CommonTree COMMA354_tree=null;
        CommonTree COLON356_tree=null;
        CommonTree string_literal358_tree=null;
        CommonTree COLON359_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:569:11: ( expression ( COMMA expression )* COLON statement_or_null | 'default' ( COLON )? statement_or_null )
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:570:9: expression ( COMMA expression )* COLON statement_or_null
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_case_item4077);
                    expression353=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression353.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:570:20: ( COMMA expression )*
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( (LA82_0==COMMA) ) {
                            alt82=1;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:570:22: COMMA expression
                    	    {
                    	    COMMA354=(Token)match(input,COMMA,FOLLOW_COMMA_in_case_item4081); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA354_tree = (CommonTree)adaptor.create(COMMA354);
                    	    adaptor.addChild(root_0, COMMA354_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_case_item4083);
                    	    expression355=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression355.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop82;
                        }
                    } while (true);

                    COLON356=(Token)match(input,COLON,FOLLOW_COLON_in_case_item4088); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON356_tree = (CommonTree)adaptor.create(COLON356);
                    adaptor.addChild(root_0, COLON356_tree);
                    }
                    pushFollow(FOLLOW_statement_or_null_in_case_item4090);
                    statement_or_null357=statement_or_null();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_or_null357.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:571:9: 'default' ( COLON )? statement_or_null
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal358=(Token)match(input,148,FOLLOW_148_in_case_item4102); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal358_tree = (CommonTree)adaptor.create(string_literal358);
                    adaptor.addChild(root_0, string_literal358_tree);
                    }
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:571:19: ( COLON )?
                    int alt83=2;
                    alt83 = dfa83.predict(input);
                    switch (alt83) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:571:20: COLON
                            {
                            COLON359=(Token)match(input,COLON,FOLLOW_COLON_in_case_item4105); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COLON359_tree = (CommonTree)adaptor.create(COLON359);
                            adaptor.addChild(root_0, COLON359_tree);
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_statement_or_null_in_case_item4109);
                    statement_or_null360=statement_or_null();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_or_null360.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "case_item"

    public static class loop_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "loop_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:574:1: loop_statement : ( 'forever' statement | 'repeat' LPAREN expression RPAREN statement | 'while' LPAREN expression RPAREN statement | 'for' LPAREN assignment SEMI expression SEMI assignment RPAREN statement );
    public final VerilogAParser.loop_statement_return loop_statement() throws RecognitionException {
        VerilogAParser.loop_statement_return retval = new VerilogAParser.loop_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal361=null;
        Token string_literal363=null;
        Token LPAREN364=null;
        Token RPAREN366=null;
        Token string_literal368=null;
        Token LPAREN369=null;
        Token RPAREN371=null;
        Token string_literal373=null;
        Token LPAREN374=null;
        Token SEMI376=null;
        Token SEMI378=null;
        Token RPAREN380=null;
        VerilogAParser.statement_return statement362 = null;

        VerilogAParser.expression_return expression365 = null;

        VerilogAParser.statement_return statement367 = null;

        VerilogAParser.expression_return expression370 = null;

        VerilogAParser.statement_return statement372 = null;

        VerilogAParser.assignment_return assignment375 = null;

        VerilogAParser.expression_return expression377 = null;

        VerilogAParser.assignment_return assignment379 = null;

        VerilogAParser.statement_return statement381 = null;


        CommonTree string_literal361_tree=null;
        CommonTree string_literal363_tree=null;
        CommonTree LPAREN364_tree=null;
        CommonTree RPAREN366_tree=null;
        CommonTree string_literal368_tree=null;
        CommonTree LPAREN369_tree=null;
        CommonTree RPAREN371_tree=null;
        CommonTree string_literal373_tree=null;
        CommonTree LPAREN374_tree=null;
        CommonTree SEMI376_tree=null;
        CommonTree SEMI378_tree=null;
        CommonTree RPAREN380_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:574:16: ( 'forever' statement | 'repeat' LPAREN expression RPAREN statement | 'while' LPAREN expression RPAREN statement | 'for' LPAREN assignment SEMI expression SEMI assignment RPAREN statement )
            int alt85=4;
            switch ( input.LA(1) ) {
            case 149:
                {
                alt85=1;
                }
                break;
            case 150:
                {
                alt85=2;
                }
                break;
            case 151:
                {
                alt85=3;
                }
                break;
            case 152:
                {
                alt85=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:575:9: 'forever' statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal361=(Token)match(input,149,FOLLOW_149_in_loop_statement4134); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal361_tree = (CommonTree)adaptor.create(string_literal361);
                    adaptor.addChild(root_0, string_literal361_tree);
                    }
                    pushFollow(FOLLOW_statement_in_loop_statement4136);
                    statement362=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement362.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:576:9: 'repeat' LPAREN expression RPAREN statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal363=(Token)match(input,150,FOLLOW_150_in_loop_statement4148); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal363_tree = (CommonTree)adaptor.create(string_literal363);
                    adaptor.addChild(root_0, string_literal363_tree);
                    }
                    LPAREN364=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_loop_statement4150); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN364_tree = (CommonTree)adaptor.create(LPAREN364);
                    adaptor.addChild(root_0, LPAREN364_tree);
                    }
                    pushFollow(FOLLOW_expression_in_loop_statement4152);
                    expression365=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression365.getTree());
                    RPAREN366=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_loop_statement4154); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN366_tree = (CommonTree)adaptor.create(RPAREN366);
                    adaptor.addChild(root_0, RPAREN366_tree);
                    }
                    pushFollow(FOLLOW_statement_in_loop_statement4156);
                    statement367=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement367.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:577:9: 'while' LPAREN expression RPAREN statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal368=(Token)match(input,151,FOLLOW_151_in_loop_statement4168); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal368_tree = (CommonTree)adaptor.create(string_literal368);
                    adaptor.addChild(root_0, string_literal368_tree);
                    }
                    LPAREN369=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_loop_statement4170); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN369_tree = (CommonTree)adaptor.create(LPAREN369);
                    adaptor.addChild(root_0, LPAREN369_tree);
                    }
                    pushFollow(FOLLOW_expression_in_loop_statement4172);
                    expression370=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression370.getTree());
                    RPAREN371=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_loop_statement4174); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN371_tree = (CommonTree)adaptor.create(RPAREN371);
                    adaptor.addChild(root_0, RPAREN371_tree);
                    }
                    pushFollow(FOLLOW_statement_in_loop_statement4176);
                    statement372=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement372.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:578:9: 'for' LPAREN assignment SEMI expression SEMI assignment RPAREN statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal373=(Token)match(input,152,FOLLOW_152_in_loop_statement4188); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal373_tree = (CommonTree)adaptor.create(string_literal373);
                    adaptor.addChild(root_0, string_literal373_tree);
                    }
                    LPAREN374=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_loop_statement4190); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN374_tree = (CommonTree)adaptor.create(LPAREN374);
                    adaptor.addChild(root_0, LPAREN374_tree);
                    }
                    pushFollow(FOLLOW_assignment_in_loop_statement4192);
                    assignment375=assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment375.getTree());
                    SEMI376=(Token)match(input,SEMI,FOLLOW_SEMI_in_loop_statement4194); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI376_tree = (CommonTree)adaptor.create(SEMI376);
                    adaptor.addChild(root_0, SEMI376_tree);
                    }
                    pushFollow(FOLLOW_expression_in_loop_statement4196);
                    expression377=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression377.getTree());
                    SEMI378=(Token)match(input,SEMI,FOLLOW_SEMI_in_loop_statement4198); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI378_tree = (CommonTree)adaptor.create(SEMI378);
                    adaptor.addChild(root_0, SEMI378_tree);
                    }
                    pushFollow(FOLLOW_assignment_in_loop_statement4200);
                    assignment379=assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment379.getTree());
                    RPAREN380=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_loop_statement4202); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN380_tree = (CommonTree)adaptor.create(RPAREN380);
                    adaptor.addChild(root_0, RPAREN380_tree);
                    }
                    pushFollow(FOLLOW_statement_in_loop_statement4204);
                    statement381=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement381.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "loop_statement"

    public static class procedural_timing_control_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "procedural_timing_control_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:581:1: procedural_timing_control_statement : delay_or_event_control statement_or_null ;
    public final VerilogAParser.procedural_timing_control_statement_return procedural_timing_control_statement() throws RecognitionException {
        VerilogAParser.procedural_timing_control_statement_return retval = new VerilogAParser.procedural_timing_control_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.delay_or_event_control_return delay_or_event_control382 = null;

        VerilogAParser.statement_or_null_return statement_or_null383 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:581:37: ( delay_or_event_control statement_or_null )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:582:9: delay_or_event_control statement_or_null
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_delay_or_event_control_in_procedural_timing_control_statement4229);
            delay_or_event_control382=delay_or_event_control();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, delay_or_event_control382.getTree());
            pushFollow(FOLLOW_statement_or_null_in_procedural_timing_control_statement4231);
            statement_or_null383=statement_or_null();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_or_null383.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "procedural_timing_control_statement"

    public static class wait_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "wait_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:585:1: wait_statement : 'wait' LPAREN expression RPAREN statement_or_null ;
    public final VerilogAParser.wait_statement_return wait_statement() throws RecognitionException {
        VerilogAParser.wait_statement_return retval = new VerilogAParser.wait_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal384=null;
        Token LPAREN385=null;
        Token RPAREN387=null;
        VerilogAParser.expression_return expression386 = null;

        VerilogAParser.statement_or_null_return statement_or_null388 = null;


        CommonTree string_literal384_tree=null;
        CommonTree LPAREN385_tree=null;
        CommonTree RPAREN387_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:585:16: ( 'wait' LPAREN expression RPAREN statement_or_null )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:586:9: 'wait' LPAREN expression RPAREN statement_or_null
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal384=(Token)match(input,153,FOLLOW_153_in_wait_statement4256); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal384_tree = (CommonTree)adaptor.create(string_literal384);
            adaptor.addChild(root_0, string_literal384_tree);
            }
            LPAREN385=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_wait_statement4258); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN385_tree = (CommonTree)adaptor.create(LPAREN385);
            adaptor.addChild(root_0, LPAREN385_tree);
            }
            pushFollow(FOLLOW_expression_in_wait_statement4260);
            expression386=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression386.getTree());
            RPAREN387=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_wait_statement4262); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN387_tree = (CommonTree)adaptor.create(RPAREN387);
            adaptor.addChild(root_0, RPAREN387_tree);
            }
            pushFollow(FOLLOW_statement_or_null_in_wait_statement4264);
            statement_or_null388=statement_or_null();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_or_null388.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "wait_statement"

    public static class event_trigger_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "event_trigger"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:589:1: event_trigger : TRIGGER name_of_event SEMI ;
    public final VerilogAParser.event_trigger_return event_trigger() throws RecognitionException {
        VerilogAParser.event_trigger_return retval = new VerilogAParser.event_trigger_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token TRIGGER389=null;
        Token SEMI391=null;
        VerilogAParser.name_of_event_return name_of_event390 = null;


        CommonTree TRIGGER389_tree=null;
        CommonTree SEMI391_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:589:15: ( TRIGGER name_of_event SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:590:9: TRIGGER name_of_event SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            TRIGGER389=(Token)match(input,TRIGGER,FOLLOW_TRIGGER_in_event_trigger4289); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            TRIGGER389_tree = (CommonTree)adaptor.create(TRIGGER389);
            adaptor.addChild(root_0, TRIGGER389_tree);
            }
            pushFollow(FOLLOW_name_of_event_in_event_trigger4291);
            name_of_event390=name_of_event();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_event390.getTree());
            SEMI391=(Token)match(input,SEMI,FOLLOW_SEMI_in_event_trigger4293); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI391_tree = (CommonTree)adaptor.create(SEMI391);
            adaptor.addChild(root_0, SEMI391_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "event_trigger"

    public static class disable_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "disable_statement"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:593:1: disable_statement : 'disable' IDENTIFIER SEMI ;
    public final VerilogAParser.disable_statement_return disable_statement() throws RecognitionException {
        VerilogAParser.disable_statement_return retval = new VerilogAParser.disable_statement_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal392=null;
        Token IDENTIFIER393=null;
        Token SEMI394=null;

        CommonTree string_literal392_tree=null;
        CommonTree IDENTIFIER393_tree=null;
        CommonTree SEMI394_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:593:19: ( 'disable' IDENTIFIER SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:594:9: 'disable' IDENTIFIER SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal392=(Token)match(input,154,FOLLOW_154_in_disable_statement4318); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal392_tree = (CommonTree)adaptor.create(string_literal392);
            adaptor.addChild(root_0, string_literal392_tree);
            }
            IDENTIFIER393=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_disable_statement4320); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER393_tree = (CommonTree)adaptor.create(IDENTIFIER393);
            adaptor.addChild(root_0, IDENTIFIER393_tree);
            }
            SEMI394=(Token)match(input,SEMI,FOLLOW_SEMI_in_disable_statement4322); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI394_tree = (CommonTree)adaptor.create(SEMI394);
            adaptor.addChild(root_0, SEMI394_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "disable_statement"

    public static class seq_block_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "seq_block"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:597:1: seq_block : 'begin' ( COLON name_of_block ( block_declaration )* )? ( statement )* 'end' ;
    public final VerilogAParser.seq_block_return seq_block() throws RecognitionException {
        VerilogAParser.seq_block_return retval = new VerilogAParser.seq_block_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal395=null;
        Token COLON396=null;
        Token string_literal400=null;
        VerilogAParser.name_of_block_return name_of_block397 = null;

        VerilogAParser.block_declaration_return block_declaration398 = null;

        VerilogAParser.statement_return statement399 = null;


        CommonTree string_literal395_tree=null;
        CommonTree COLON396_tree=null;
        CommonTree string_literal400_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:597:11: ( 'begin' ( COLON name_of_block ( block_declaration )* )? ( statement )* 'end' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:598:9: 'begin' ( COLON name_of_block ( block_declaration )* )? ( statement )* 'end'
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal395=(Token)match(input,155,FOLLOW_155_in_seq_block4347); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal395_tree = (CommonTree)adaptor.create(string_literal395);
            adaptor.addChild(root_0, string_literal395_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:599:9: ( COLON name_of_block ( block_declaration )* )?
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:599:11: COLON name_of_block ( block_declaration )*
                    {
                    COLON396=(Token)match(input,COLON,FOLLOW_COLON_in_seq_block4359); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON396_tree = (CommonTree)adaptor.create(COLON396);
                    adaptor.addChild(root_0, COLON396_tree);
                    }
                    pushFollow(FOLLOW_name_of_block_in_seq_block4361);
                    name_of_block397=name_of_block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_block397.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:599:31: ( block_declaration )*
                    loop86:
                    do {
                        int alt86=2;
                        alt86 = dfa86.predict(input);
                        switch (alt86) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:599:32: block_declaration
                    	    {
                    	    pushFollow(FOLLOW_block_declaration_in_seq_block4364);
                    	    block_declaration398=block_declaration();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, block_declaration398.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop86;
                        }
                    } while (true);


                    }
                    break;

            }

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:600:9: ( statement )*
            loop88:
            do {
                int alt88=2;
                alt88 = dfa88.predict(input);
                switch (alt88) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:600:10: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_seq_block4380);
            	    statement399=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement399.getTree());

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            string_literal400=(Token)match(input,156,FOLLOW_156_in_seq_block4385); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal400_tree = (CommonTree)adaptor.create(string_literal400);
            adaptor.addChild(root_0, string_literal400_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "seq_block"

    public static class par_block_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "par_block"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:604:1: par_block : 'fork' ( COLON name_of_block ( block_declaration )* )? ( statement )* 'join' ;
    public final VerilogAParser.par_block_return par_block() throws RecognitionException {
        VerilogAParser.par_block_return retval = new VerilogAParser.par_block_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal401=null;
        Token COLON402=null;
        Token string_literal406=null;
        VerilogAParser.name_of_block_return name_of_block403 = null;

        VerilogAParser.block_declaration_return block_declaration404 = null;

        VerilogAParser.statement_return statement405 = null;


        CommonTree string_literal401_tree=null;
        CommonTree COLON402_tree=null;
        CommonTree string_literal406_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:604:11: ( 'fork' ( COLON name_of_block ( block_declaration )* )? ( statement )* 'join' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:605:9: 'fork' ( COLON name_of_block ( block_declaration )* )? ( statement )* 'join'
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal401=(Token)match(input,157,FOLLOW_157_in_par_block4403); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal401_tree = (CommonTree)adaptor.create(string_literal401);
            adaptor.addChild(root_0, string_literal401_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:606:9: ( COLON name_of_block ( block_declaration )* )?
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:606:11: COLON name_of_block ( block_declaration )*
                    {
                    COLON402=(Token)match(input,COLON,FOLLOW_COLON_in_par_block4415); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON402_tree = (CommonTree)adaptor.create(COLON402);
                    adaptor.addChild(root_0, COLON402_tree);
                    }
                    pushFollow(FOLLOW_name_of_block_in_par_block4417);
                    name_of_block403=name_of_block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_block403.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:606:31: ( block_declaration )*
                    loop89:
                    do {
                        int alt89=2;
                        alt89 = dfa89.predict(input);
                        switch (alt89) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:606:32: block_declaration
                    	    {
                    	    pushFollow(FOLLOW_block_declaration_in_par_block4420);
                    	    block_declaration404=block_declaration();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, block_declaration404.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop89;
                        }
                    } while (true);


                    }
                    break;

            }

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:607:9: ( statement )*
            loop91:
            do {
                int alt91=2;
                alt91 = dfa91.predict(input);
                switch (alt91) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:607:10: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_par_block4436);
            	    statement405=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement405.getTree());

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            string_literal406=(Token)match(input,158,FOLLOW_158_in_par_block4441); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal406_tree = (CommonTree)adaptor.create(string_literal406);
            adaptor.addChild(root_0, string_literal406_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "par_block"

    public static class block_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "block_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:611:1: block_declaration : ( parameter_declaration | reg_declaration | integer_declaration | real_declaration | time_declaration | event_declaration );
    public final VerilogAParser.block_declaration_return block_declaration() throws RecognitionException {
        VerilogAParser.block_declaration_return retval = new VerilogAParser.block_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.parameter_declaration_return parameter_declaration407 = null;

        VerilogAParser.reg_declaration_return reg_declaration408 = null;

        VerilogAParser.integer_declaration_return integer_declaration409 = null;

        VerilogAParser.real_declaration_return real_declaration410 = null;

        VerilogAParser.time_declaration_return time_declaration411 = null;

        VerilogAParser.event_declaration_return event_declaration412 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:611:19: ( parameter_declaration | reg_declaration | integer_declaration | real_declaration | time_declaration | event_declaration )
            int alt92=6;
            switch ( input.LA(1) ) {
            case 84:
                {
                alt92=1;
                }
                break;
            case 100:
                {
                alt92=2;
                }
                break;
            case 82:
                {
                alt92=3;
                }
                break;
            case 83:
                {
                alt92=4;
                }
                break;
            case 101:
                {
                alt92=5;
                }
                break;
            case 102:
                {
                alt92=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }

            switch (alt92) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:612:9: parameter_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_parameter_declaration_in_block_declaration4466);
                    parameter_declaration407=parameter_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_declaration407.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:613:9: reg_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_reg_declaration_in_block_declaration4478);
                    reg_declaration408=reg_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, reg_declaration408.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:614:9: integer_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_integer_declaration_in_block_declaration4490);
                    integer_declaration409=integer_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, integer_declaration409.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:615:9: real_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_real_declaration_in_block_declaration4502);
                    real_declaration410=real_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, real_declaration410.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:616:9: time_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_time_declaration_in_block_declaration4514);
                    time_declaration411=time_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, time_declaration411.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:617:9: event_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_event_declaration_in_block_declaration4526);
                    event_declaration412=event_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration412.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "block_declaration"

    public static class task_enable_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "task_enable"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:620:1: task_enable : name_of_task ( LPAREN expression ( COMMA ( expression )? )* RPAREN )? SEMI ;
    public final VerilogAParser.task_enable_return task_enable() throws RecognitionException {
        VerilogAParser.task_enable_return retval = new VerilogAParser.task_enable_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN414=null;
        Token COMMA416=null;
        Token RPAREN418=null;
        Token SEMI419=null;
        VerilogAParser.name_of_task_return name_of_task413 = null;

        VerilogAParser.expression_return expression415 = null;

        VerilogAParser.expression_return expression417 = null;


        CommonTree LPAREN414_tree=null;
        CommonTree COMMA416_tree=null;
        CommonTree RPAREN418_tree=null;
        CommonTree SEMI419_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:620:13: ( name_of_task ( LPAREN expression ( COMMA ( expression )? )* RPAREN )? SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:621:9: name_of_task ( LPAREN expression ( COMMA ( expression )? )* RPAREN )? SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_name_of_task_in_task_enable4552);
            name_of_task413=name_of_task();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_task413.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:621:22: ( LPAREN expression ( COMMA ( expression )? )* RPAREN )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==LPAREN) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:621:24: LPAREN expression ( COMMA ( expression )? )* RPAREN
                    {
                    LPAREN414=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_task_enable4556); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN414_tree = (CommonTree)adaptor.create(LPAREN414);
                    adaptor.addChild(root_0, LPAREN414_tree);
                    }
                    pushFollow(FOLLOW_expression_in_task_enable4558);
                    expression415=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression415.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:621:42: ( COMMA ( expression )? )*
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==COMMA) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:621:43: COMMA ( expression )?
                    	    {
                    	    COMMA416=(Token)match(input,COMMA,FOLLOW_COMMA_in_task_enable4561); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA416_tree = (CommonTree)adaptor.create(COMMA416);
                    	    adaptor.addChild(root_0, COMMA416_tree);
                    	    }
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:621:49: ( expression )?
                    	    int alt93=2;
                    	    alt93 = dfa93.predict(input);
                    	    switch (alt93) {
                    	        case 1 :
                    	            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:621:50: expression
                    	            {
                    	            pushFollow(FOLLOW_expression_in_task_enable4564);
                    	            expression417=expression();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression417.getTree());

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);

                    RPAREN418=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_task_enable4570); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN418_tree = (CommonTree)adaptor.create(RPAREN418);
                    adaptor.addChild(root_0, RPAREN418_tree);
                    }

                    }
                    break;

            }

            SEMI419=(Token)match(input,SEMI,FOLLOW_SEMI_in_task_enable4576); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI419_tree = (CommonTree)adaptor.create(SEMI419);
            adaptor.addChild(root_0, SEMI419_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "task_enable"

    public static class system_task_enable_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "system_task_enable"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:625:1: system_task_enable : SYSTEM_TASK_NAME ( LPAREN expression ( COMMA ( expression )? )* RPAREN )? SEMI ;
    public final VerilogAParser.system_task_enable_return system_task_enable() throws RecognitionException {
        VerilogAParser.system_task_enable_return retval = new VerilogAParser.system_task_enable_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token SYSTEM_TASK_NAME420=null;
        Token LPAREN421=null;
        Token COMMA423=null;
        Token RPAREN425=null;
        Token SEMI426=null;
        VerilogAParser.expression_return expression422 = null;

        VerilogAParser.expression_return expression424 = null;


        CommonTree SYSTEM_TASK_NAME420_tree=null;
        CommonTree LPAREN421_tree=null;
        CommonTree COMMA423_tree=null;
        CommonTree RPAREN425_tree=null;
        CommonTree SEMI426_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:625:20: ( SYSTEM_TASK_NAME ( LPAREN expression ( COMMA ( expression )? )* RPAREN )? SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:626:9: SYSTEM_TASK_NAME ( LPAREN expression ( COMMA ( expression )? )* RPAREN )? SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            SYSTEM_TASK_NAME420=(Token)match(input,SYSTEM_TASK_NAME,FOLLOW_SYSTEM_TASK_NAME_in_system_task_enable4601); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SYSTEM_TASK_NAME420_tree = (CommonTree)adaptor.create(SYSTEM_TASK_NAME420);
            adaptor.addChild(root_0, SYSTEM_TASK_NAME420_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:626:26: ( LPAREN expression ( COMMA ( expression )? )* RPAREN )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==LPAREN) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:626:28: LPAREN expression ( COMMA ( expression )? )* RPAREN
                    {
                    LPAREN421=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_task_enable4605); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN421_tree = (CommonTree)adaptor.create(LPAREN421);
                    adaptor.addChild(root_0, LPAREN421_tree);
                    }
                    pushFollow(FOLLOW_expression_in_system_task_enable4607);
                    expression422=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression422.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:626:46: ( COMMA ( expression )? )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==COMMA) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:626:47: COMMA ( expression )?
                    	    {
                    	    COMMA423=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_task_enable4610); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA423_tree = (CommonTree)adaptor.create(COMMA423);
                    	    adaptor.addChild(root_0, COMMA423_tree);
                    	    }
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:626:53: ( expression )?
                    	    int alt96=2;
                    	    alt96 = dfa96.predict(input);
                    	    switch (alt96) {
                    	        case 1 :
                    	            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:626:54: expression
                    	            {
                    	            pushFollow(FOLLOW_expression_in_system_task_enable4613);
                    	            expression424=expression();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression424.getTree());

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    RPAREN425=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_task_enable4619); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN425_tree = (CommonTree)adaptor.create(RPAREN425);
                    adaptor.addChild(root_0, RPAREN425_tree);
                    }

                    }
                    break;

            }

            SEMI426=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_task_enable4625); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI426_tree = (CommonTree)adaptor.create(SEMI426);
            adaptor.addChild(root_0, SEMI426_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "system_task_enable"

    public static class procedural_continuous_assignment_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "procedural_continuous_assignment"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:630:1: procedural_continuous_assignment : ( KW_ASSIGN assignment SEMI | 'deassign' lvalue SEMI | 'force' assignment SEMI | 'release' lvalue SEMI );
    public final VerilogAParser.procedural_continuous_assignment_return procedural_continuous_assignment() throws RecognitionException {
        VerilogAParser.procedural_continuous_assignment_return retval = new VerilogAParser.procedural_continuous_assignment_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token KW_ASSIGN427=null;
        Token SEMI429=null;
        Token string_literal430=null;
        Token SEMI432=null;
        Token string_literal433=null;
        Token SEMI435=null;
        Token string_literal436=null;
        Token SEMI438=null;
        VerilogAParser.assignment_return assignment428 = null;

        VerilogAParser.lvalue_return lvalue431 = null;

        VerilogAParser.assignment_return assignment434 = null;

        VerilogAParser.lvalue_return lvalue437 = null;


        CommonTree KW_ASSIGN427_tree=null;
        CommonTree SEMI429_tree=null;
        CommonTree string_literal430_tree=null;
        CommonTree SEMI432_tree=null;
        CommonTree string_literal433_tree=null;
        CommonTree SEMI435_tree=null;
        CommonTree string_literal436_tree=null;
        CommonTree SEMI438_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:630:34: ( KW_ASSIGN assignment SEMI | 'deassign' lvalue SEMI | 'force' assignment SEMI | 'release' lvalue SEMI )
            int alt99=4;
            switch ( input.LA(1) ) {
            case KW_ASSIGN:
                {
                alt99=1;
                }
                break;
            case 159:
                {
                alt99=2;
                }
                break;
            case 160:
                {
                alt99=3;
                }
                break;
            case 161:
                {
                alt99=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:631:9: KW_ASSIGN assignment SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    KW_ASSIGN427=(Token)match(input,KW_ASSIGN,FOLLOW_KW_ASSIGN_in_procedural_continuous_assignment4650); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_ASSIGN427_tree = (CommonTree)adaptor.create(KW_ASSIGN427);
                    adaptor.addChild(root_0, KW_ASSIGN427_tree);
                    }
                    pushFollow(FOLLOW_assignment_in_procedural_continuous_assignment4652);
                    assignment428=assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment428.getTree());
                    SEMI429=(Token)match(input,SEMI,FOLLOW_SEMI_in_procedural_continuous_assignment4654); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI429_tree = (CommonTree)adaptor.create(SEMI429);
                    adaptor.addChild(root_0, SEMI429_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:632:9: 'deassign' lvalue SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal430=(Token)match(input,159,FOLLOW_159_in_procedural_continuous_assignment4666); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal430_tree = (CommonTree)adaptor.create(string_literal430);
                    adaptor.addChild(root_0, string_literal430_tree);
                    }
                    pushFollow(FOLLOW_lvalue_in_procedural_continuous_assignment4668);
                    lvalue431=lvalue();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lvalue431.getTree());
                    SEMI432=(Token)match(input,SEMI,FOLLOW_SEMI_in_procedural_continuous_assignment4670); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI432_tree = (CommonTree)adaptor.create(SEMI432);
                    adaptor.addChild(root_0, SEMI432_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:633:9: 'force' assignment SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal433=(Token)match(input,160,FOLLOW_160_in_procedural_continuous_assignment4682); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal433_tree = (CommonTree)adaptor.create(string_literal433);
                    adaptor.addChild(root_0, string_literal433_tree);
                    }
                    pushFollow(FOLLOW_assignment_in_procedural_continuous_assignment4684);
                    assignment434=assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment434.getTree());
                    SEMI435=(Token)match(input,SEMI,FOLLOW_SEMI_in_procedural_continuous_assignment4686); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI435_tree = (CommonTree)adaptor.create(SEMI435);
                    adaptor.addChild(root_0, SEMI435_tree);
                    }

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:634:9: 'release' lvalue SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal436=(Token)match(input,161,FOLLOW_161_in_procedural_continuous_assignment4698); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal436_tree = (CommonTree)adaptor.create(string_literal436);
                    adaptor.addChild(root_0, string_literal436_tree);
                    }
                    pushFollow(FOLLOW_lvalue_in_procedural_continuous_assignment4700);
                    lvalue437=lvalue();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lvalue437.getTree());
                    SEMI438=(Token)match(input,SEMI,FOLLOW_SEMI_in_procedural_continuous_assignment4702); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI438_tree = (CommonTree)adaptor.create(SEMI438);
                    adaptor.addChild(root_0, SEMI438_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "procedural_continuous_assignment"

    public static class delay_or_event_control_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delay_or_event_control"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:637:1: delay_or_event_control : ( delay_control | event_control );
    public final VerilogAParser.delay_or_event_control_return delay_or_event_control() throws RecognitionException {
        VerilogAParser.delay_or_event_control_return retval = new VerilogAParser.delay_or_event_control_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.delay_control_return delay_control439 = null;

        VerilogAParser.event_control_return event_control440 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:637:24: ( delay_control | event_control )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==POUND) ) {
                alt100=1;
            }
            else if ( (LA100_0==AT) ) {
                alt100=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:638:9: delay_control
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_delay_control_in_delay_or_event_control4727);
                    delay_control439=delay_control();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delay_control439.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:639:9: event_control
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_event_control_in_delay_or_event_control4739);
                    event_control440=event_control();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_control440.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "delay_or_event_control"

    public static class specify_block_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "specify_block"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:646:1: specify_block : 'specify' ( specify_item )* 'endspecify' ;
    public final VerilogAParser.specify_block_return specify_block() throws RecognitionException {
        VerilogAParser.specify_block_return retval = new VerilogAParser.specify_block_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal441=null;
        Token string_literal443=null;
        VerilogAParser.specify_item_return specify_item442 = null;


        CommonTree string_literal441_tree=null;
        CommonTree string_literal443_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:646:15: ( 'specify' ( specify_item )* 'endspecify' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:647:9: 'specify' ( specify_item )* 'endspecify'
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal441=(Token)match(input,162,FOLLOW_162_in_specify_block4768); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal441_tree = (CommonTree)adaptor.create(string_literal441);
            adaptor.addChild(root_0, string_literal441_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:647:19: ( specify_item )*
            loop101:
            do {
                int alt101=2;
                alt101 = dfa101.predict(input);
                switch (alt101) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:647:20: specify_item
            	    {
            	    pushFollow(FOLLOW_specify_item_in_specify_block4771);
            	    specify_item442=specify_item();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_item442.getTree());

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            string_literal443=(Token)match(input,163,FOLLOW_163_in_specify_block4775); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal443_tree = (CommonTree)adaptor.create(string_literal443);
            adaptor.addChild(root_0, string_literal443_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "specify_block"

    public static class specify_item_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "specify_item"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:650:1: specify_item : ( spec_param_declaration | ( path_declaration )=> path_declaration | system_timing_check | sdpd );
    public final VerilogAParser.specify_item_return specify_item() throws RecognitionException {
        VerilogAParser.specify_item_return retval = new VerilogAParser.specify_item_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.spec_param_declaration_return spec_param_declaration444 = null;

        VerilogAParser.path_declaration_return path_declaration445 = null;

        VerilogAParser.system_timing_check_return system_timing_check446 = null;

        VerilogAParser.sdpd_return sdpd447 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:650:14: ( spec_param_declaration | ( path_declaration )=> path_declaration | system_timing_check | sdpd )
            int alt102=4;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:651:9: spec_param_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_spec_param_declaration_in_specify_item4800);
                    spec_param_declaration444=spec_param_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, spec_param_declaration444.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:652:9: ( path_declaration )=> path_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_path_declaration_in_specify_item4818);
                    path_declaration445=path_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, path_declaration445.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:653:9: system_timing_check
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_system_timing_check_in_specify_item4830);
                    system_timing_check446=system_timing_check();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, system_timing_check446.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:654:11: sdpd
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_sdpd_in_specify_item4842);
                    sdpd447=sdpd();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, sdpd447.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "specify_item"

    public static class spec_param_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "spec_param_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:657:1: spec_param_declaration : 'specparam' list_of_specparam_assignments SEMI ;
    public final VerilogAParser.spec_param_declaration_return spec_param_declaration() throws RecognitionException {
        VerilogAParser.spec_param_declaration_return retval = new VerilogAParser.spec_param_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal448=null;
        Token SEMI450=null;
        VerilogAParser.list_of_specparam_assignments_return list_of_specparam_assignments449 = null;


        CommonTree string_literal448_tree=null;
        CommonTree SEMI450_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:657:24: ( 'specparam' list_of_specparam_assignments SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:658:9: 'specparam' list_of_specparam_assignments SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal448=(Token)match(input,164,FOLLOW_164_in_spec_param_declaration4867); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal448_tree = (CommonTree)adaptor.create(string_literal448);
            adaptor.addChild(root_0, string_literal448_tree);
            }
            pushFollow(FOLLOW_list_of_specparam_assignments_in_spec_param_declaration4869);
            list_of_specparam_assignments449=list_of_specparam_assignments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_specparam_assignments449.getTree());
            SEMI450=(Token)match(input,SEMI,FOLLOW_SEMI_in_spec_param_declaration4871); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI450_tree = (CommonTree)adaptor.create(SEMI450);
            adaptor.addChild(root_0, SEMI450_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "spec_param_declaration"

    public static class list_of_specparam_assignments_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_specparam_assignments"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:661:1: list_of_specparam_assignments : specparam_assignment ( COMMA specparam_assignment )* ;
    public final VerilogAParser.list_of_specparam_assignments_return list_of_specparam_assignments() throws RecognitionException {
        VerilogAParser.list_of_specparam_assignments_return retval = new VerilogAParser.list_of_specparam_assignments_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA452=null;
        VerilogAParser.specparam_assignment_return specparam_assignment451 = null;

        VerilogAParser.specparam_assignment_return specparam_assignment453 = null;


        CommonTree COMMA452_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:661:31: ( specparam_assignment ( COMMA specparam_assignment )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:662:9: specparam_assignment ( COMMA specparam_assignment )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_specparam_assignment_in_list_of_specparam_assignments4896);
            specparam_assignment451=specparam_assignment();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specparam_assignment451.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:662:30: ( COMMA specparam_assignment )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==COMMA) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:662:32: COMMA specparam_assignment
            	    {
            	    COMMA452=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_specparam_assignments4900); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA452_tree = (CommonTree)adaptor.create(COMMA452);
            	    adaptor.addChild(root_0, COMMA452_tree);
            	    }
            	    pushFollow(FOLLOW_specparam_assignment_in_list_of_specparam_assignments4902);
            	    specparam_assignment453=specparam_assignment();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, specparam_assignment453.getTree());

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_specparam_assignments"

    public static class specparam_assignment_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "specparam_assignment"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:665:1: specparam_assignment : identifier ASSIGN expression ;
    public final VerilogAParser.specparam_assignment_return specparam_assignment() throws RecognitionException {
        VerilogAParser.specparam_assignment_return retval = new VerilogAParser.specparam_assignment_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token ASSIGN455=null;
        VerilogAParser.identifier_return identifier454 = null;

        VerilogAParser.expression_return expression456 = null;


        CommonTree ASSIGN455_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:665:22: ( identifier ASSIGN expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:666:9: identifier ASSIGN expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_specparam_assignment4930);
            identifier454=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier454.getTree());
            ASSIGN455=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_specparam_assignment4932); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGN455_tree = (CommonTree)adaptor.create(ASSIGN455);
            adaptor.addChild(root_0, ASSIGN455_tree);
            }
            pushFollow(FOLLOW_expression_in_specparam_assignment4934);
            expression456=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression456.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "specparam_assignment"

    public static class path_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "path_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:669:1: path_declaration : ( ( simple_path_declaration )=> simple_path_declaration SEMI | ( level_sensitive_path_declaration )=> level_sensitive_path_declaration SEMI | edge_sensitive_path_declaration SEMI );
    public final VerilogAParser.path_declaration_return path_declaration() throws RecognitionException {
        VerilogAParser.path_declaration_return retval = new VerilogAParser.path_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token SEMI458=null;
        Token SEMI460=null;
        Token SEMI462=null;
        VerilogAParser.simple_path_declaration_return simple_path_declaration457 = null;

        VerilogAParser.level_sensitive_path_declaration_return level_sensitive_path_declaration459 = null;

        VerilogAParser.edge_sensitive_path_declaration_return edge_sensitive_path_declaration461 = null;


        CommonTree SEMI458_tree=null;
        CommonTree SEMI460_tree=null;
        CommonTree SEMI462_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:669:18: ( ( simple_path_declaration )=> simple_path_declaration SEMI | ( level_sensitive_path_declaration )=> level_sensitive_path_declaration SEMI | edge_sensitive_path_declaration SEMI )
            int alt104=3;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:670:9: ( simple_path_declaration )=> simple_path_declaration SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_simple_path_declaration_in_path_declaration4969);
                    simple_path_declaration457=simple_path_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_path_declaration457.getTree());
                    SEMI458=(Token)match(input,SEMI,FOLLOW_SEMI_in_path_declaration4971); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI458_tree = (CommonTree)adaptor.create(SEMI458);
                    adaptor.addChild(root_0, SEMI458_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:672:9: ( level_sensitive_path_declaration )=> level_sensitive_path_declaration SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_level_sensitive_path_declaration_in_path_declaration4993);
                    level_sensitive_path_declaration459=level_sensitive_path_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, level_sensitive_path_declaration459.getTree());
                    SEMI460=(Token)match(input,SEMI,FOLLOW_SEMI_in_path_declaration4995); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI460_tree = (CommonTree)adaptor.create(SEMI460);
                    adaptor.addChild(root_0, SEMI460_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:674:9: edge_sensitive_path_declaration SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_edge_sensitive_path_declaration_in_path_declaration5007);
                    edge_sensitive_path_declaration461=edge_sensitive_path_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, edge_sensitive_path_declaration461.getTree());
                    SEMI462=(Token)match(input,SEMI,FOLLOW_SEMI_in_path_declaration5009); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI462_tree = (CommonTree)adaptor.create(SEMI462);
                    adaptor.addChild(root_0, SEMI462_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "path_declaration"

    public static class simple_path_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "simple_path_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:677:1: simple_path_declaration : ( ( parallel_path_description )=> parallel_path_description ASSIGN path_delay_value | full_path_descriptor ASSIGN path_delay_value );
    public final VerilogAParser.simple_path_declaration_return simple_path_declaration() throws RecognitionException {
        VerilogAParser.simple_path_declaration_return retval = new VerilogAParser.simple_path_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token ASSIGN464=null;
        Token ASSIGN467=null;
        VerilogAParser.parallel_path_description_return parallel_path_description463 = null;

        VerilogAParser.path_delay_value_return path_delay_value465 = null;

        VerilogAParser.full_path_descriptor_return full_path_descriptor466 = null;

        VerilogAParser.path_delay_value_return path_delay_value468 = null;


        CommonTree ASSIGN464_tree=null;
        CommonTree ASSIGN467_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:677:25: ( ( parallel_path_description )=> parallel_path_description ASSIGN path_delay_value | full_path_descriptor ASSIGN path_delay_value )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==LPAREN) ) {
                int LA105_1 = input.LA(2);

                if ( (LA105_1==IDENTIFIER||LA105_1==ESCAPED_IDENTIFIER) ) {
                    int LA105_2 = input.LA(3);

                    if ( (LA105_2==DOT) ) {
                        int LA105_3 = input.LA(4);

                        if ( (synpred12_VerilogA()) ) {
                            alt105=1;
                        }
                        else if ( (true) ) {
                            alt105=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 105, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA105_2==LBRACK) ) {
                        int LA105_4 = input.LA(4);

                        if ( (synpred12_VerilogA()) ) {
                            alt105=1;
                        }
                        else if ( (true) ) {
                            alt105=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 105, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA105_2==PPATH) && (synpred12_VerilogA())) {
                        alt105=1;
                    }
                    else if ( (LA105_2==COMMA||LA105_2==FPATH) ) {
                        alt105=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 105, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 105, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:678:9: ( parallel_path_description )=> parallel_path_description ASSIGN path_delay_value
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_parallel_path_description_in_simple_path_declaration5044);
                    parallel_path_description463=parallel_path_description();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parallel_path_description463.getTree());
                    ASSIGN464=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_simple_path_declaration5046); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGN464_tree = (CommonTree)adaptor.create(ASSIGN464);
                    adaptor.addChild(root_0, ASSIGN464_tree);
                    }
                    pushFollow(FOLLOW_path_delay_value_in_simple_path_declaration5048);
                    path_delay_value465=path_delay_value();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_value465.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:680:9: full_path_descriptor ASSIGN path_delay_value
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_full_path_descriptor_in_simple_path_declaration5060);
                    full_path_descriptor466=full_path_descriptor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, full_path_descriptor466.getTree());
                    ASSIGN467=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_simple_path_declaration5062); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGN467_tree = (CommonTree)adaptor.create(ASSIGN467);
                    adaptor.addChild(root_0, ASSIGN467_tree);
                    }
                    pushFollow(FOLLOW_path_delay_value_in_simple_path_declaration5064);
                    path_delay_value468=path_delay_value();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_value468.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "simple_path_declaration"

    public static class parallel_path_description_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parallel_path_description"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:683:1: parallel_path_description : LPAREN specify_terminal_descriptor PPATH specify_terminal_descriptor RPAREN ;
    public final VerilogAParser.parallel_path_description_return parallel_path_description() throws RecognitionException {
        VerilogAParser.parallel_path_description_return retval = new VerilogAParser.parallel_path_description_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN469=null;
        Token PPATH471=null;
        Token RPAREN473=null;
        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor470 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor472 = null;


        CommonTree LPAREN469_tree=null;
        CommonTree PPATH471_tree=null;
        CommonTree RPAREN473_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:683:27: ( LPAREN specify_terminal_descriptor PPATH specify_terminal_descriptor RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:684:9: LPAREN specify_terminal_descriptor PPATH specify_terminal_descriptor RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN469=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parallel_path_description5089); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN469_tree = (CommonTree)adaptor.create(LPAREN469);
            adaptor.addChild(root_0, LPAREN469_tree);
            }
            pushFollow(FOLLOW_specify_terminal_descriptor_in_parallel_path_description5091);
            specify_terminal_descriptor470=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor470.getTree());
            PPATH471=(Token)match(input,PPATH,FOLLOW_PPATH_in_parallel_path_description5093); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            PPATH471_tree = (CommonTree)adaptor.create(PPATH471);
            adaptor.addChild(root_0, PPATH471_tree);
            }
            pushFollow(FOLLOW_specify_terminal_descriptor_in_parallel_path_description5095);
            specify_terminal_descriptor472=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor472.getTree());
            RPAREN473=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parallel_path_description5097); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN473_tree = (CommonTree)adaptor.create(RPAREN473);
            adaptor.addChild(root_0, RPAREN473_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "parallel_path_description"

    public static class full_path_descriptor_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "full_path_descriptor"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:687:1: full_path_descriptor : LPAREN list_of_path_terminals FPATH list_of_path_terminals RPAREN ;
    public final VerilogAParser.full_path_descriptor_return full_path_descriptor() throws RecognitionException {
        VerilogAParser.full_path_descriptor_return retval = new VerilogAParser.full_path_descriptor_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN474=null;
        Token FPATH476=null;
        Token RPAREN478=null;
        VerilogAParser.list_of_path_terminals_return list_of_path_terminals475 = null;

        VerilogAParser.list_of_path_terminals_return list_of_path_terminals477 = null;


        CommonTree LPAREN474_tree=null;
        CommonTree FPATH476_tree=null;
        CommonTree RPAREN478_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:687:22: ( LPAREN list_of_path_terminals FPATH list_of_path_terminals RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:688:9: LPAREN list_of_path_terminals FPATH list_of_path_terminals RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN474=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_full_path_descriptor5122); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN474_tree = (CommonTree)adaptor.create(LPAREN474);
            adaptor.addChild(root_0, LPAREN474_tree);
            }
            pushFollow(FOLLOW_list_of_path_terminals_in_full_path_descriptor5124);
            list_of_path_terminals475=list_of_path_terminals();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_path_terminals475.getTree());
            FPATH476=(Token)match(input,FPATH,FOLLOW_FPATH_in_full_path_descriptor5127); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            FPATH476_tree = (CommonTree)adaptor.create(FPATH476);
            adaptor.addChild(root_0, FPATH476_tree);
            }
            pushFollow(FOLLOW_list_of_path_terminals_in_full_path_descriptor5129);
            list_of_path_terminals477=list_of_path_terminals();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_path_terminals477.getTree());
            RPAREN478=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_full_path_descriptor5131); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN478_tree = (CommonTree)adaptor.create(RPAREN478);
            adaptor.addChild(root_0, RPAREN478_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "full_path_descriptor"

    public static class list_of_path_terminals_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_path_terminals"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:691:1: list_of_path_terminals : specify_terminal_descriptor ( COMMA specify_terminal_descriptor )* ;
    public final VerilogAParser.list_of_path_terminals_return list_of_path_terminals() throws RecognitionException {
        VerilogAParser.list_of_path_terminals_return retval = new VerilogAParser.list_of_path_terminals_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA480=null;
        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor479 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor481 = null;


        CommonTree COMMA480_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:691:24: ( specify_terminal_descriptor ( COMMA specify_terminal_descriptor )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:692:9: specify_terminal_descriptor ( COMMA specify_terminal_descriptor )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_specify_terminal_descriptor_in_list_of_path_terminals5156);
            specify_terminal_descriptor479=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor479.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:692:37: ( COMMA specify_terminal_descriptor )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==COMMA) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:692:39: COMMA specify_terminal_descriptor
            	    {
            	    COMMA480=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_path_terminals5160); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA480_tree = (CommonTree)adaptor.create(COMMA480);
            	    adaptor.addChild(root_0, COMMA480_tree);
            	    }
            	    pushFollow(FOLLOW_specify_terminal_descriptor_in_list_of_path_terminals5162);
            	    specify_terminal_descriptor481=specify_terminal_descriptor();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor481.getTree());

            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_path_terminals"

    public static class specify_terminal_descriptor_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "specify_terminal_descriptor"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:695:1: specify_terminal_descriptor : ( ( identifier LBRACK expression COLON )=> identifier LBRACK expression COLON expression RBRACK | ( identifier LBRACK )=> identifier LBRACK expression RBRACK | identifier );
    public final VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor() throws RecognitionException {
        VerilogAParser.specify_terminal_descriptor_return retval = new VerilogAParser.specify_terminal_descriptor_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LBRACK483=null;
        Token COLON485=null;
        Token RBRACK487=null;
        Token LBRACK489=null;
        Token RBRACK491=null;
        VerilogAParser.identifier_return identifier482 = null;

        VerilogAParser.expression_return expression484 = null;

        VerilogAParser.expression_return expression486 = null;

        VerilogAParser.identifier_return identifier488 = null;

        VerilogAParser.expression_return expression490 = null;

        VerilogAParser.identifier_return identifier492 = null;


        CommonTree LBRACK483_tree=null;
        CommonTree COLON485_tree=null;
        CommonTree RBRACK487_tree=null;
        CommonTree LBRACK489_tree=null;
        CommonTree RBRACK491_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:695:29: ( ( identifier LBRACK expression COLON )=> identifier LBRACK expression COLON expression RBRACK | ( identifier LBRACK )=> identifier LBRACK expression RBRACK | identifier )
            int alt107=3;
            alt107 = dfa107.predict(input);
            switch (alt107) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:696:2: ( identifier LBRACK expression COLON )=> identifier LBRACK expression COLON expression RBRACK
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_specify_terminal_descriptor5206);
                    identifier482=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier482.getTree());
                    LBRACK483=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_specify_terminal_descriptor5208); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACK483_tree = (CommonTree)adaptor.create(LBRACK483);
                    adaptor.addChild(root_0, LBRACK483_tree);
                    }
                    pushFollow(FOLLOW_expression_in_specify_terminal_descriptor5210);
                    expression484=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression484.getTree());
                    COLON485=(Token)match(input,COLON,FOLLOW_COLON_in_specify_terminal_descriptor5212); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON485_tree = (CommonTree)adaptor.create(COLON485);
                    adaptor.addChild(root_0, COLON485_tree);
                    }
                    pushFollow(FOLLOW_expression_in_specify_terminal_descriptor5214);
                    expression486=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression486.getTree());
                    RBRACK487=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_specify_terminal_descriptor5216); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACK487_tree = (CommonTree)adaptor.create(RBRACK487);
                    adaptor.addChild(root_0, RBRACK487_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:698:9: ( identifier LBRACK )=> identifier LBRACK expression RBRACK
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_specify_terminal_descriptor5247);
                    identifier488=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier488.getTree());
                    LBRACK489=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_specify_terminal_descriptor5249); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACK489_tree = (CommonTree)adaptor.create(LBRACK489);
                    adaptor.addChild(root_0, LBRACK489_tree);
                    }
                    pushFollow(FOLLOW_expression_in_specify_terminal_descriptor5251);
                    expression490=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression490.getTree());
                    RBRACK491=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_specify_terminal_descriptor5253); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACK491_tree = (CommonTree)adaptor.create(RBRACK491);
                    adaptor.addChild(root_0, RBRACK491_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:700:9: identifier
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_specify_terminal_descriptor5265);
                    identifier492=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier492.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "specify_terminal_descriptor"

    public static class path_delay_value_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "path_delay_value"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:703:1: path_delay_value : ( ( path_delay_expression )=> path_delay_expression | LPAREN list_of_path_delay_expressions RPAREN );
    public final VerilogAParser.path_delay_value_return path_delay_value() throws RecognitionException {
        VerilogAParser.path_delay_value_return retval = new VerilogAParser.path_delay_value_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN494=null;
        Token RPAREN496=null;
        VerilogAParser.path_delay_expression_return path_delay_expression493 = null;

        VerilogAParser.list_of_path_delay_expressions_return list_of_path_delay_expressions495 = null;


        CommonTree LPAREN494_tree=null;
        CommonTree RPAREN496_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:703:18: ( ( path_delay_expression )=> path_delay_expression | LPAREN list_of_path_delay_expressions RPAREN )
            int alt108=2;
            alt108 = dfa108.predict(input);
            switch (alt108) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:704:9: ( path_delay_expression )=> path_delay_expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_path_delay_expression_in_path_delay_value5296);
                    path_delay_expression493=path_delay_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_expression493.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:705:9: LPAREN list_of_path_delay_expressions RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN494=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_path_delay_value5308); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN494_tree = (CommonTree)adaptor.create(LPAREN494);
                    adaptor.addChild(root_0, LPAREN494_tree);
                    }
                    pushFollow(FOLLOW_list_of_path_delay_expressions_in_path_delay_value5310);
                    list_of_path_delay_expressions495=list_of_path_delay_expressions();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_path_delay_expressions495.getTree());
                    RPAREN496=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_path_delay_value5312); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN496_tree = (CommonTree)adaptor.create(RPAREN496);
                    adaptor.addChild(root_0, RPAREN496_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "path_delay_value"

    public static class list_of_path_delay_expressions_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "list_of_path_delay_expressions"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:708:1: list_of_path_delay_expressions : path_delay_expression COMMA path_delay_expression ( COMMA path_delay_expression ( COMMA path_delay_expression COMMA path_delay_expression COMMA path_delay_expression )? )? ;
    public final VerilogAParser.list_of_path_delay_expressions_return list_of_path_delay_expressions() throws RecognitionException {
        VerilogAParser.list_of_path_delay_expressions_return retval = new VerilogAParser.list_of_path_delay_expressions_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA498=null;
        Token COMMA500=null;
        Token COMMA502=null;
        Token COMMA504=null;
        Token COMMA506=null;
        VerilogAParser.path_delay_expression_return path_delay_expression497 = null;

        VerilogAParser.path_delay_expression_return path_delay_expression499 = null;

        VerilogAParser.path_delay_expression_return path_delay_expression501 = null;

        VerilogAParser.path_delay_expression_return path_delay_expression503 = null;

        VerilogAParser.path_delay_expression_return path_delay_expression505 = null;

        VerilogAParser.path_delay_expression_return path_delay_expression507 = null;


        CommonTree COMMA498_tree=null;
        CommonTree COMMA500_tree=null;
        CommonTree COMMA502_tree=null;
        CommonTree COMMA504_tree=null;
        CommonTree COMMA506_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:708:32: ( path_delay_expression COMMA path_delay_expression ( COMMA path_delay_expression ( COMMA path_delay_expression COMMA path_delay_expression COMMA path_delay_expression )? )? )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:709:9: path_delay_expression COMMA path_delay_expression ( COMMA path_delay_expression ( COMMA path_delay_expression COMMA path_delay_expression COMMA path_delay_expression )? )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5337);
            path_delay_expression497=path_delay_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_expression497.getTree());
            COMMA498=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_path_delay_expressions5339); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COMMA498_tree = (CommonTree)adaptor.create(COMMA498);
            adaptor.addChild(root_0, COMMA498_tree);
            }
            pushFollow(FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5341);
            path_delay_expression499=path_delay_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_expression499.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:710:4: ( COMMA path_delay_expression ( COMMA path_delay_expression COMMA path_delay_expression COMMA path_delay_expression )? )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==COMMA) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:710:6: COMMA path_delay_expression ( COMMA path_delay_expression COMMA path_delay_expression COMMA path_delay_expression )?
                    {
                    COMMA500=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_path_delay_expressions5348); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA500_tree = (CommonTree)adaptor.create(COMMA500);
                    adaptor.addChild(root_0, COMMA500_tree);
                    }
                    pushFollow(FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5350);
                    path_delay_expression501=path_delay_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_expression501.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:711:6: ( COMMA path_delay_expression COMMA path_delay_expression COMMA path_delay_expression )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==COMMA) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:711:8: COMMA path_delay_expression COMMA path_delay_expression COMMA path_delay_expression
                            {
                            COMMA502=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_path_delay_expressions5359); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA502_tree = (CommonTree)adaptor.create(COMMA502);
                            adaptor.addChild(root_0, COMMA502_tree);
                            }
                            pushFollow(FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5361);
                            path_delay_expression503=path_delay_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_expression503.getTree());
                            COMMA504=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_path_delay_expressions5363); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA504_tree = (CommonTree)adaptor.create(COMMA504);
                            adaptor.addChild(root_0, COMMA504_tree);
                            }
                            pushFollow(FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5379);
                            path_delay_expression505=path_delay_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_expression505.getTree());
                            COMMA506=(Token)match(input,COMMA,FOLLOW_COMMA_in_list_of_path_delay_expressions5381); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA506_tree = (CommonTree)adaptor.create(COMMA506);
                            adaptor.addChild(root_0, COMMA506_tree);
                            }
                            pushFollow(FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5383);
                            path_delay_expression507=path_delay_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_expression507.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "list_of_path_delay_expressions"

    public static class path_delay_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "path_delay_expression"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:715:1: path_delay_expression : mintypmax_expression ;
    public final VerilogAParser.path_delay_expression_return path_delay_expression() throws RecognitionException {
        VerilogAParser.path_delay_expression_return retval = new VerilogAParser.path_delay_expression_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.mintypmax_expression_return mintypmax_expression508 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:715:23: ( mintypmax_expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:716:9: mintypmax_expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_mintypmax_expression_in_path_delay_expression5415);
            mintypmax_expression508=mintypmax_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, mintypmax_expression508.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "path_delay_expression"

    public static class system_timing_check_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "system_timing_check"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:719:1: system_timing_check : ( '$setup' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$hold' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$period' LPAREN controlled_timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$width' LPAREN controlled_timing_check_event COMMA timing_check_limit ( COMMA expression COMMA notify_register )? RPAREN SEMI | '$skew' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$recovery' LPAREN controlled_timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$setuphold' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI );
    public final VerilogAParser.system_timing_check_return system_timing_check() throws RecognitionException {
        VerilogAParser.system_timing_check_return retval = new VerilogAParser.system_timing_check_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal509=null;
        Token LPAREN510=null;
        Token COMMA512=null;
        Token COMMA514=null;
        Token COMMA516=null;
        Token RPAREN518=null;
        Token SEMI519=null;
        Token string_literal520=null;
        Token LPAREN521=null;
        Token COMMA523=null;
        Token COMMA525=null;
        Token COMMA527=null;
        Token RPAREN529=null;
        Token SEMI530=null;
        Token string_literal531=null;
        Token LPAREN532=null;
        Token COMMA534=null;
        Token COMMA536=null;
        Token RPAREN538=null;
        Token SEMI539=null;
        Token string_literal540=null;
        Token LPAREN541=null;
        Token COMMA543=null;
        Token COMMA545=null;
        Token COMMA547=null;
        Token RPAREN549=null;
        Token SEMI550=null;
        Token string_literal551=null;
        Token LPAREN552=null;
        Token COMMA554=null;
        Token COMMA556=null;
        Token COMMA558=null;
        Token RPAREN560=null;
        Token SEMI561=null;
        Token string_literal562=null;
        Token LPAREN563=null;
        Token COMMA565=null;
        Token COMMA567=null;
        Token COMMA569=null;
        Token RPAREN571=null;
        Token SEMI572=null;
        Token string_literal573=null;
        Token LPAREN574=null;
        Token COMMA576=null;
        Token COMMA578=null;
        Token COMMA580=null;
        Token COMMA582=null;
        Token RPAREN584=null;
        Token SEMI585=null;
        VerilogAParser.timing_check_event_return timing_check_event511 = null;

        VerilogAParser.timing_check_event_return timing_check_event513 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit515 = null;

        VerilogAParser.notify_register_return notify_register517 = null;

        VerilogAParser.timing_check_event_return timing_check_event522 = null;

        VerilogAParser.timing_check_event_return timing_check_event524 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit526 = null;

        VerilogAParser.notify_register_return notify_register528 = null;

        VerilogAParser.controlled_timing_check_event_return controlled_timing_check_event533 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit535 = null;

        VerilogAParser.notify_register_return notify_register537 = null;

        VerilogAParser.controlled_timing_check_event_return controlled_timing_check_event542 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit544 = null;

        VerilogAParser.expression_return expression546 = null;

        VerilogAParser.notify_register_return notify_register548 = null;

        VerilogAParser.timing_check_event_return timing_check_event553 = null;

        VerilogAParser.timing_check_event_return timing_check_event555 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit557 = null;

        VerilogAParser.notify_register_return notify_register559 = null;

        VerilogAParser.controlled_timing_check_event_return controlled_timing_check_event564 = null;

        VerilogAParser.timing_check_event_return timing_check_event566 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit568 = null;

        VerilogAParser.notify_register_return notify_register570 = null;

        VerilogAParser.timing_check_event_return timing_check_event575 = null;

        VerilogAParser.timing_check_event_return timing_check_event577 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit579 = null;

        VerilogAParser.timing_check_limit_return timing_check_limit581 = null;

        VerilogAParser.notify_register_return notify_register583 = null;


        CommonTree string_literal509_tree=null;
        CommonTree LPAREN510_tree=null;
        CommonTree COMMA512_tree=null;
        CommonTree COMMA514_tree=null;
        CommonTree COMMA516_tree=null;
        CommonTree RPAREN518_tree=null;
        CommonTree SEMI519_tree=null;
        CommonTree string_literal520_tree=null;
        CommonTree LPAREN521_tree=null;
        CommonTree COMMA523_tree=null;
        CommonTree COMMA525_tree=null;
        CommonTree COMMA527_tree=null;
        CommonTree RPAREN529_tree=null;
        CommonTree SEMI530_tree=null;
        CommonTree string_literal531_tree=null;
        CommonTree LPAREN532_tree=null;
        CommonTree COMMA534_tree=null;
        CommonTree COMMA536_tree=null;
        CommonTree RPAREN538_tree=null;
        CommonTree SEMI539_tree=null;
        CommonTree string_literal540_tree=null;
        CommonTree LPAREN541_tree=null;
        CommonTree COMMA543_tree=null;
        CommonTree COMMA545_tree=null;
        CommonTree COMMA547_tree=null;
        CommonTree RPAREN549_tree=null;
        CommonTree SEMI550_tree=null;
        CommonTree string_literal551_tree=null;
        CommonTree LPAREN552_tree=null;
        CommonTree COMMA554_tree=null;
        CommonTree COMMA556_tree=null;
        CommonTree COMMA558_tree=null;
        CommonTree RPAREN560_tree=null;
        CommonTree SEMI561_tree=null;
        CommonTree string_literal562_tree=null;
        CommonTree LPAREN563_tree=null;
        CommonTree COMMA565_tree=null;
        CommonTree COMMA567_tree=null;
        CommonTree COMMA569_tree=null;
        CommonTree RPAREN571_tree=null;
        CommonTree SEMI572_tree=null;
        CommonTree string_literal573_tree=null;
        CommonTree LPAREN574_tree=null;
        CommonTree COMMA576_tree=null;
        CommonTree COMMA578_tree=null;
        CommonTree COMMA580_tree=null;
        CommonTree COMMA582_tree=null;
        CommonTree RPAREN584_tree=null;
        CommonTree SEMI585_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:719:21: ( '$setup' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$hold' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$period' LPAREN controlled_timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$width' LPAREN controlled_timing_check_event COMMA timing_check_limit ( COMMA expression COMMA notify_register )? RPAREN SEMI | '$skew' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$recovery' LPAREN controlled_timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI | '$setuphold' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI )
            int alt118=7;
            switch ( input.LA(1) ) {
            case 165:
                {
                alt118=1;
                }
                break;
            case 166:
                {
                alt118=2;
                }
                break;
            case 167:
                {
                alt118=3;
                }
                break;
            case 168:
                {
                alt118=4;
                }
                break;
            case 169:
                {
                alt118=5;
                }
                break;
            case 170:
                {
                alt118=6;
                }
                break;
            case 171:
                {
                alt118=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }

            switch (alt118) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:720:9: '$setup' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal509=(Token)match(input,165,FOLLOW_165_in_system_timing_check5440); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal509_tree = (CommonTree)adaptor.create(string_literal509);
                    adaptor.addChild(root_0, string_literal509_tree);
                    }
                    LPAREN510=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_timing_check5442); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN510_tree = (CommonTree)adaptor.create(LPAREN510);
                    adaptor.addChild(root_0, LPAREN510_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5444);
                    timing_check_event511=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event511.getTree());
                    COMMA512=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5446); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA512_tree = (CommonTree)adaptor.create(COMMA512);
                    adaptor.addChild(root_0, COMMA512_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5448);
                    timing_check_event513=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event513.getTree());
                    COMMA514=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5450); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA514_tree = (CommonTree)adaptor.create(COMMA514);
                    adaptor.addChild(root_0, COMMA514_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5464);
                    timing_check_limit515=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit515.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:721:32: ( COMMA notify_register )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==COMMA) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:721:34: COMMA notify_register
                            {
                            COMMA516=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5468); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA516_tree = (CommonTree)adaptor.create(COMMA516);
                            adaptor.addChild(root_0, COMMA516_tree);
                            }
                            pushFollow(FOLLOW_notify_register_in_system_timing_check5470);
                            notify_register517=notify_register();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, notify_register517.getTree());

                            }
                            break;

                    }

                    RPAREN518=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_timing_check5475); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN518_tree = (CommonTree)adaptor.create(RPAREN518);
                    adaptor.addChild(root_0, RPAREN518_tree);
                    }
                    SEMI519=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_timing_check5477); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI519_tree = (CommonTree)adaptor.create(SEMI519);
                    adaptor.addChild(root_0, SEMI519_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:722:9: '$hold' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal520=(Token)match(input,166,FOLLOW_166_in_system_timing_check5489); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal520_tree = (CommonTree)adaptor.create(string_literal520);
                    adaptor.addChild(root_0, string_literal520_tree);
                    }
                    LPAREN521=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_timing_check5491); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN521_tree = (CommonTree)adaptor.create(LPAREN521);
                    adaptor.addChild(root_0, LPAREN521_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5493);
                    timing_check_event522=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event522.getTree());
                    COMMA523=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5495); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA523_tree = (CommonTree)adaptor.create(COMMA523);
                    adaptor.addChild(root_0, COMMA523_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5497);
                    timing_check_event524=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event524.getTree());
                    COMMA525=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5499); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA525_tree = (CommonTree)adaptor.create(COMMA525);
                    adaptor.addChild(root_0, COMMA525_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5513);
                    timing_check_limit526=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit526.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:723:32: ( COMMA notify_register )?
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==COMMA) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:723:34: COMMA notify_register
                            {
                            COMMA527=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5517); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA527_tree = (CommonTree)adaptor.create(COMMA527);
                            adaptor.addChild(root_0, COMMA527_tree);
                            }
                            pushFollow(FOLLOW_notify_register_in_system_timing_check5519);
                            notify_register528=notify_register();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, notify_register528.getTree());

                            }
                            break;

                    }

                    RPAREN529=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_timing_check5524); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN529_tree = (CommonTree)adaptor.create(RPAREN529);
                    adaptor.addChild(root_0, RPAREN529_tree);
                    }
                    SEMI530=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_timing_check5526); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI530_tree = (CommonTree)adaptor.create(SEMI530);
                    adaptor.addChild(root_0, SEMI530_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:724:9: '$period' LPAREN controlled_timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal531=(Token)match(input,167,FOLLOW_167_in_system_timing_check5538); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal531_tree = (CommonTree)adaptor.create(string_literal531);
                    adaptor.addChild(root_0, string_literal531_tree);
                    }
                    LPAREN532=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_timing_check5540); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN532_tree = (CommonTree)adaptor.create(LPAREN532);
                    adaptor.addChild(root_0, LPAREN532_tree);
                    }
                    pushFollow(FOLLOW_controlled_timing_check_event_in_system_timing_check5542);
                    controlled_timing_check_event533=controlled_timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, controlled_timing_check_event533.getTree());
                    COMMA534=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5544); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA534_tree = (CommonTree)adaptor.create(COMMA534);
                    adaptor.addChild(root_0, COMMA534_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5558);
                    timing_check_limit535=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit535.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:725:32: ( COMMA notify_register )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==COMMA) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:725:34: COMMA notify_register
                            {
                            COMMA536=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5562); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA536_tree = (CommonTree)adaptor.create(COMMA536);
                            adaptor.addChild(root_0, COMMA536_tree);
                            }
                            pushFollow(FOLLOW_notify_register_in_system_timing_check5564);
                            notify_register537=notify_register();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, notify_register537.getTree());

                            }
                            break;

                    }

                    RPAREN538=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_timing_check5569); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN538_tree = (CommonTree)adaptor.create(RPAREN538);
                    adaptor.addChild(root_0, RPAREN538_tree);
                    }
                    SEMI539=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_timing_check5571); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI539_tree = (CommonTree)adaptor.create(SEMI539);
                    adaptor.addChild(root_0, SEMI539_tree);
                    }

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:726:9: '$width' LPAREN controlled_timing_check_event COMMA timing_check_limit ( COMMA expression COMMA notify_register )? RPAREN SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal540=(Token)match(input,168,FOLLOW_168_in_system_timing_check5583); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal540_tree = (CommonTree)adaptor.create(string_literal540);
                    adaptor.addChild(root_0, string_literal540_tree);
                    }
                    LPAREN541=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_timing_check5585); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN541_tree = (CommonTree)adaptor.create(LPAREN541);
                    adaptor.addChild(root_0, LPAREN541_tree);
                    }
                    pushFollow(FOLLOW_controlled_timing_check_event_in_system_timing_check5587);
                    controlled_timing_check_event542=controlled_timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, controlled_timing_check_event542.getTree());
                    COMMA543=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5589); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA543_tree = (CommonTree)adaptor.create(COMMA543);
                    adaptor.addChild(root_0, COMMA543_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5603);
                    timing_check_limit544=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit544.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:727:32: ( COMMA expression COMMA notify_register )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==COMMA) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:727:34: COMMA expression COMMA notify_register
                            {
                            COMMA545=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5607); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA545_tree = (CommonTree)adaptor.create(COMMA545);
                            adaptor.addChild(root_0, COMMA545_tree);
                            }
                            pushFollow(FOLLOW_expression_in_system_timing_check5609);
                            expression546=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression546.getTree());
                            COMMA547=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5611); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA547_tree = (CommonTree)adaptor.create(COMMA547);
                            adaptor.addChild(root_0, COMMA547_tree);
                            }
                            pushFollow(FOLLOW_notify_register_in_system_timing_check5613);
                            notify_register548=notify_register();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, notify_register548.getTree());

                            }
                            break;

                    }

                    RPAREN549=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_timing_check5623); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN549_tree = (CommonTree)adaptor.create(RPAREN549);
                    adaptor.addChild(root_0, RPAREN549_tree);
                    }
                    SEMI550=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_timing_check5625); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI550_tree = (CommonTree)adaptor.create(SEMI550);
                    adaptor.addChild(root_0, SEMI550_tree);
                    }

                    }
                    break;
                case 5 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:729:9: '$skew' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal551=(Token)match(input,169,FOLLOW_169_in_system_timing_check5637); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal551_tree = (CommonTree)adaptor.create(string_literal551);
                    adaptor.addChild(root_0, string_literal551_tree);
                    }
                    LPAREN552=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_timing_check5639); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN552_tree = (CommonTree)adaptor.create(LPAREN552);
                    adaptor.addChild(root_0, LPAREN552_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5641);
                    timing_check_event553=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event553.getTree());
                    COMMA554=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5643); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA554_tree = (CommonTree)adaptor.create(COMMA554);
                    adaptor.addChild(root_0, COMMA554_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5645);
                    timing_check_event555=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event555.getTree());
                    COMMA556=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5647); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA556_tree = (CommonTree)adaptor.create(COMMA556);
                    adaptor.addChild(root_0, COMMA556_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5662);
                    timing_check_limit557=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit557.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:730:32: ( COMMA notify_register )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==COMMA) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:730:34: COMMA notify_register
                            {
                            COMMA558=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5666); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA558_tree = (CommonTree)adaptor.create(COMMA558);
                            adaptor.addChild(root_0, COMMA558_tree);
                            }
                            pushFollow(FOLLOW_notify_register_in_system_timing_check5668);
                            notify_register559=notify_register();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, notify_register559.getTree());

                            }
                            break;

                    }

                    RPAREN560=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_timing_check5673); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN560_tree = (CommonTree)adaptor.create(RPAREN560);
                    adaptor.addChild(root_0, RPAREN560_tree);
                    }
                    SEMI561=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_timing_check5675); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI561_tree = (CommonTree)adaptor.create(SEMI561);
                    adaptor.addChild(root_0, SEMI561_tree);
                    }

                    }
                    break;
                case 6 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:731:9: '$recovery' LPAREN controlled_timing_check_event COMMA timing_check_event COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal562=(Token)match(input,170,FOLLOW_170_in_system_timing_check5687); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal562_tree = (CommonTree)adaptor.create(string_literal562);
                    adaptor.addChild(root_0, string_literal562_tree);
                    }
                    LPAREN563=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_timing_check5689); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN563_tree = (CommonTree)adaptor.create(LPAREN563);
                    adaptor.addChild(root_0, LPAREN563_tree);
                    }
                    pushFollow(FOLLOW_controlled_timing_check_event_in_system_timing_check5691);
                    controlled_timing_check_event564=controlled_timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, controlled_timing_check_event564.getTree());
                    COMMA565=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5693); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA565_tree = (CommonTree)adaptor.create(COMMA565);
                    adaptor.addChild(root_0, COMMA565_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5707);
                    timing_check_event566=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event566.getTree());
                    COMMA567=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5709); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA567_tree = (CommonTree)adaptor.create(COMMA567);
                    adaptor.addChild(root_0, COMMA567_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5711);
                    timing_check_limit568=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit568.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:733:13: ( COMMA notify_register )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==COMMA) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:733:15: COMMA notify_register
                            {
                            COMMA569=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5727); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA569_tree = (CommonTree)adaptor.create(COMMA569);
                            adaptor.addChild(root_0, COMMA569_tree);
                            }
                            pushFollow(FOLLOW_notify_register_in_system_timing_check5729);
                            notify_register570=notify_register();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, notify_register570.getTree());

                            }
                            break;

                    }

                    RPAREN571=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_timing_check5734); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN571_tree = (CommonTree)adaptor.create(RPAREN571);
                    adaptor.addChild(root_0, RPAREN571_tree);
                    }
                    SEMI572=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_timing_check5736); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI572_tree = (CommonTree)adaptor.create(SEMI572);
                    adaptor.addChild(root_0, SEMI572_tree);
                    }

                    }
                    break;
                case 7 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:734:9: '$setuphold' LPAREN timing_check_event COMMA timing_check_event COMMA timing_check_limit COMMA timing_check_limit ( COMMA notify_register )? RPAREN SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal573=(Token)match(input,171,FOLLOW_171_in_system_timing_check5748); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal573_tree = (CommonTree)adaptor.create(string_literal573);
                    adaptor.addChild(root_0, string_literal573_tree);
                    }
                    LPAREN574=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_system_timing_check5750); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN574_tree = (CommonTree)adaptor.create(LPAREN574);
                    adaptor.addChild(root_0, LPAREN574_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5752);
                    timing_check_event575=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event575.getTree());
                    COMMA576=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5754); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA576_tree = (CommonTree)adaptor.create(COMMA576);
                    adaptor.addChild(root_0, COMMA576_tree);
                    }
                    pushFollow(FOLLOW_timing_check_event_in_system_timing_check5756);
                    timing_check_event577=timing_check_event();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event577.getTree());
                    COMMA578=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5758); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA578_tree = (CommonTree)adaptor.create(COMMA578);
                    adaptor.addChild(root_0, COMMA578_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5772);
                    timing_check_limit579=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit579.getTree());
                    COMMA580=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5774); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA580_tree = (CommonTree)adaptor.create(COMMA580);
                    adaptor.addChild(root_0, COMMA580_tree);
                    }
                    pushFollow(FOLLOW_timing_check_limit_in_system_timing_check5776);
                    timing_check_limit581=timing_check_limit();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_limit581.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:736:13: ( COMMA notify_register )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==COMMA) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:736:15: COMMA notify_register
                            {
                            COMMA582=(Token)match(input,COMMA,FOLLOW_COMMA_in_system_timing_check5792); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA582_tree = (CommonTree)adaptor.create(COMMA582);
                            adaptor.addChild(root_0, COMMA582_tree);
                            }
                            pushFollow(FOLLOW_notify_register_in_system_timing_check5794);
                            notify_register583=notify_register();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, notify_register583.getTree());

                            }
                            break;

                    }

                    RPAREN584=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_system_timing_check5799); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN584_tree = (CommonTree)adaptor.create(RPAREN584);
                    adaptor.addChild(root_0, RPAREN584_tree);
                    }
                    SEMI585=(Token)match(input,SEMI,FOLLOW_SEMI_in_system_timing_check5801); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI585_tree = (CommonTree)adaptor.create(SEMI585);
                    adaptor.addChild(root_0, SEMI585_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "system_timing_check"

    public static class timing_check_event_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "timing_check_event"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:739:1: timing_check_event : ( timing_check_event_control )? specify_terminal_descriptor ( '&&&' timing_check_condition )? ;
    public final VerilogAParser.timing_check_event_return timing_check_event() throws RecognitionException {
        VerilogAParser.timing_check_event_return retval = new VerilogAParser.timing_check_event_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal588=null;
        VerilogAParser.timing_check_event_control_return timing_check_event_control586 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor587 = null;

        VerilogAParser.timing_check_condition_return timing_check_condition589 = null;


        CommonTree string_literal588_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:739:20: ( ( timing_check_event_control )? specify_terminal_descriptor ( '&&&' timing_check_condition )? )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:740:9: ( timing_check_event_control )? specify_terminal_descriptor ( '&&&' timing_check_condition )?
            {
            root_0 = (CommonTree)adaptor.nil();

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:740:9: ( timing_check_event_control )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=173 && LA119_0<=175)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:740:10: timing_check_event_control
                    {
                    pushFollow(FOLLOW_timing_check_event_control_in_timing_check_event5827);
                    timing_check_event_control586=timing_check_event_control();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event_control586.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_specify_terminal_descriptor_in_timing_check_event5831);
            specify_terminal_descriptor587=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor587.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:741:9: ( '&&&' timing_check_condition )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==172) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:741:11: '&&&' timing_check_condition
                    {
                    string_literal588=(Token)match(input,172,FOLLOW_172_in_timing_check_event5843); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal588_tree = (CommonTree)adaptor.create(string_literal588);
                    adaptor.addChild(root_0, string_literal588_tree);
                    }
                    pushFollow(FOLLOW_timing_check_condition_in_timing_check_event5845);
                    timing_check_condition589=timing_check_condition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_condition589.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "timing_check_event"

    public static class controlled_timing_check_event_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "controlled_timing_check_event"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:744:1: controlled_timing_check_event : timing_check_event_control specify_terminal_descriptor ( '&&&' timing_check_condition )? ;
    public final VerilogAParser.controlled_timing_check_event_return controlled_timing_check_event() throws RecognitionException {
        VerilogAParser.controlled_timing_check_event_return retval = new VerilogAParser.controlled_timing_check_event_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal592=null;
        VerilogAParser.timing_check_event_control_return timing_check_event_control590 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor591 = null;

        VerilogAParser.timing_check_condition_return timing_check_condition593 = null;


        CommonTree string_literal592_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:744:31: ( timing_check_event_control specify_terminal_descriptor ( '&&&' timing_check_condition )? )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:745:9: timing_check_event_control specify_terminal_descriptor ( '&&&' timing_check_condition )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_timing_check_event_control_in_controlled_timing_check_event5873);
            timing_check_event_control590=timing_check_event_control();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_event_control590.getTree());
            pushFollow(FOLLOW_specify_terminal_descriptor_in_controlled_timing_check_event5875);
            specify_terminal_descriptor591=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor591.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:746:9: ( '&&&' timing_check_condition )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==172) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:746:11: '&&&' timing_check_condition
                    {
                    string_literal592=(Token)match(input,172,FOLLOW_172_in_controlled_timing_check_event5887); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal592_tree = (CommonTree)adaptor.create(string_literal592);
                    adaptor.addChild(root_0, string_literal592_tree);
                    }
                    pushFollow(FOLLOW_timing_check_condition_in_controlled_timing_check_event5889);
                    timing_check_condition593=timing_check_condition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, timing_check_condition593.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "controlled_timing_check_event"

    public static class timing_check_event_control_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "timing_check_event_control"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:749:1: timing_check_event_control : ( 'posedge' | 'negedge' | edge_control_specifier );
    public final VerilogAParser.timing_check_event_control_return timing_check_event_control() throws RecognitionException {
        VerilogAParser.timing_check_event_control_return retval = new VerilogAParser.timing_check_event_control_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal594=null;
        Token string_literal595=null;
        VerilogAParser.edge_control_specifier_return edge_control_specifier596 = null;


        CommonTree string_literal594_tree=null;
        CommonTree string_literal595_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:749:28: ( 'posedge' | 'negedge' | edge_control_specifier )
            int alt122=3;
            switch ( input.LA(1) ) {
            case 173:
                {
                alt122=1;
                }
                break;
            case 174:
                {
                alt122=2;
                }
                break;
            case 175:
                {
                alt122=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:750:9: 'posedge'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal594=(Token)match(input,173,FOLLOW_173_in_timing_check_event_control5917); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal594_tree = (CommonTree)adaptor.create(string_literal594);
                    adaptor.addChild(root_0, string_literal594_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:751:9: 'negedge'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal595=(Token)match(input,174,FOLLOW_174_in_timing_check_event_control5929); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal595_tree = (CommonTree)adaptor.create(string_literal595);
                    adaptor.addChild(root_0, string_literal595_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:752:9: edge_control_specifier
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_edge_control_specifier_in_timing_check_event_control5941);
                    edge_control_specifier596=edge_control_specifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, edge_control_specifier596.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "timing_check_event_control"

    public static class edge_control_specifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "edge_control_specifier"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:755:1: edge_control_specifier : 'edge' LBRACK edge_descriptor ( COMMA edge_descriptor )* RBRACK ;
    public final VerilogAParser.edge_control_specifier_return edge_control_specifier() throws RecognitionException {
        VerilogAParser.edge_control_specifier_return retval = new VerilogAParser.edge_control_specifier_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal597=null;
        Token LBRACK598=null;
        Token COMMA600=null;
        Token RBRACK602=null;
        VerilogAParser.edge_descriptor_return edge_descriptor599 = null;

        VerilogAParser.edge_descriptor_return edge_descriptor601 = null;


        CommonTree string_literal597_tree=null;
        CommonTree LBRACK598_tree=null;
        CommonTree COMMA600_tree=null;
        CommonTree RBRACK602_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:755:24: ( 'edge' LBRACK edge_descriptor ( COMMA edge_descriptor )* RBRACK )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:756:9: 'edge' LBRACK edge_descriptor ( COMMA edge_descriptor )* RBRACK
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal597=(Token)match(input,175,FOLLOW_175_in_edge_control_specifier5966); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal597_tree = (CommonTree)adaptor.create(string_literal597);
            adaptor.addChild(root_0, string_literal597_tree);
            }
            LBRACK598=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_edge_control_specifier5968); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LBRACK598_tree = (CommonTree)adaptor.create(LBRACK598);
            adaptor.addChild(root_0, LBRACK598_tree);
            }
            pushFollow(FOLLOW_edge_descriptor_in_edge_control_specifier5970);
            edge_descriptor599=edge_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, edge_descriptor599.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:756:39: ( COMMA edge_descriptor )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==COMMA) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:756:41: COMMA edge_descriptor
            	    {
            	    COMMA600=(Token)match(input,COMMA,FOLLOW_COMMA_in_edge_control_specifier5974); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA600_tree = (CommonTree)adaptor.create(COMMA600);
            	    adaptor.addChild(root_0, COMMA600_tree);
            	    }
            	    pushFollow(FOLLOW_edge_descriptor_in_edge_control_specifier5976);
            	    edge_descriptor601=edge_descriptor();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, edge_descriptor601.getTree());

            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            RBRACK602=(Token)match(input,RBRACK,FOLLOW_RBRACK_in_edge_control_specifier5981); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RBRACK602_tree = (CommonTree)adaptor.create(RBRACK602);
            adaptor.addChild(root_0, RBRACK602_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "edge_control_specifier"

    public static class edge_descriptor_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "edge_descriptor"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:763:1: edge_descriptor : ( '0x' | '1x' | n= NUMBER {...}? | i= IDENTIFIER {...}?);
    public final VerilogAParser.edge_descriptor_return edge_descriptor() throws RecognitionException {
        VerilogAParser.edge_descriptor_return retval = new VerilogAParser.edge_descriptor_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token n=null;
        Token i=null;
        Token string_literal603=null;
        Token string_literal604=null;

        CommonTree n_tree=null;
        CommonTree i_tree=null;
        CommonTree string_literal603_tree=null;
        CommonTree string_literal604_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:763:17: ( '0x' | '1x' | n= NUMBER {...}? | i= IDENTIFIER {...}?)
            int alt124=4;
            switch ( input.LA(1) ) {
            case 176:
                {
                alt124=1;
                }
                break;
            case 177:
                {
                alt124=2;
                }
                break;
            case NUMBER:
                {
                alt124=3;
                }
                break;
            case IDENTIFIER:
                {
                alt124=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }

            switch (alt124) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:764:2: '0x'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal603=(Token)match(input,176,FOLLOW_176_in_edge_descriptor6015); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal603_tree = (CommonTree)adaptor.create(string_literal603);
                    adaptor.addChild(root_0, string_literal603_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:764:9: '1x'
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal604=(Token)match(input,177,FOLLOW_177_in_edge_descriptor6019); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal604_tree = (CommonTree)adaptor.create(string_literal604);
                    adaptor.addChild(root_0, string_literal604_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:766:2: n= NUMBER {...}?
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    n=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_edge_descriptor6032); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n_tree = (CommonTree)adaptor.create(n);
                    adaptor.addChild(root_0, n_tree);
                    }
                    if ( !(( (n!=null?n.getText():null)=="01" || (n!=null?n.getText():null)=="10")) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "edge_descriptor", " $n.text==\"01\" || $n.text==\"10\"");
                    }

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:769:2: i= IDENTIFIER {...}?
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    i=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_edge_descriptor6048); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    i_tree = (CommonTree)adaptor.create(i);
                    adaptor.addChild(root_0, i_tree);
                    }
                    if ( !(( (i!=null?i.getText():null)=="x1" || (i!=null?i.getText():null)=="x0")) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "edge_descriptor", " $i.text==\"x1\" || $i.text==\"x0\"");
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "edge_descriptor"

    public static class timing_check_condition_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "timing_check_condition"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:773:1: timing_check_condition : scalar_timing_check_condition ;
    public final VerilogAParser.timing_check_condition_return timing_check_condition() throws RecognitionException {
        VerilogAParser.timing_check_condition_return retval = new VerilogAParser.timing_check_condition_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.scalar_timing_check_condition_return scalar_timing_check_condition605 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:773:24: ( scalar_timing_check_condition )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:774:9: scalar_timing_check_condition
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_scalar_timing_check_condition_in_timing_check_condition6069);
            scalar_timing_check_condition605=scalar_timing_check_condition();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, scalar_timing_check_condition605.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "timing_check_condition"

    public static class scalar_timing_check_condition_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "scalar_timing_check_condition"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:776:1: scalar_timing_check_condition : expression ;
    public final VerilogAParser.scalar_timing_check_condition_return scalar_timing_check_condition() throws RecognitionException {
        VerilogAParser.scalar_timing_check_condition_return retval = new VerilogAParser.scalar_timing_check_condition_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.expression_return expression606 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:776:31: ( expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:777:9: expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_scalar_timing_check_condition6094);
            expression606=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression606.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "scalar_timing_check_condition"

    public static class timing_check_limit_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "timing_check_limit"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:780:1: timing_check_limit : expression ;
    public final VerilogAParser.timing_check_limit_return timing_check_limit() throws RecognitionException {
        VerilogAParser.timing_check_limit_return retval = new VerilogAParser.timing_check_limit_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.expression_return expression607 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:780:20: ( expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:781:9: expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_timing_check_limit6119);
            expression607=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression607.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "timing_check_limit"

    public static class notify_register_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "notify_register"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:784:1: notify_register : name_of_register ;
    public final VerilogAParser.notify_register_return notify_register() throws RecognitionException {
        VerilogAParser.notify_register_return retval = new VerilogAParser.notify_register_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.name_of_register_return name_of_register608 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:784:17: ( name_of_register )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:785:9: name_of_register
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_name_of_register_in_notify_register6144);
            name_of_register608=name_of_register();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_register608.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "notify_register"

    public static class level_sensitive_path_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "level_sensitive_path_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:788:1: level_sensitive_path_declaration : ( ( parallel_level_sensitive_path_description )=> parallel_level_sensitive_path_description ASSIGN path_delay_value SEMI | full_level_sensitive_path_description ASSIGN path_delay_value SEMI );
    public final VerilogAParser.level_sensitive_path_declaration_return level_sensitive_path_declaration() throws RecognitionException {
        VerilogAParser.level_sensitive_path_declaration_return retval = new VerilogAParser.level_sensitive_path_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token ASSIGN610=null;
        Token SEMI612=null;
        Token ASSIGN614=null;
        Token SEMI616=null;
        VerilogAParser.parallel_level_sensitive_path_description_return parallel_level_sensitive_path_description609 = null;

        VerilogAParser.path_delay_value_return path_delay_value611 = null;

        VerilogAParser.full_level_sensitive_path_description_return full_level_sensitive_path_description613 = null;

        VerilogAParser.path_delay_value_return path_delay_value615 = null;


        CommonTree ASSIGN610_tree=null;
        CommonTree SEMI612_tree=null;
        CommonTree ASSIGN614_tree=null;
        CommonTree SEMI616_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:788:34: ( ( parallel_level_sensitive_path_description )=> parallel_level_sensitive_path_description ASSIGN path_delay_value SEMI | full_level_sensitive_path_description ASSIGN path_delay_value SEMI )
            int alt125=2;
            alt125 = dfa125.predict(input);
            switch (alt125) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:789:2: ( parallel_level_sensitive_path_description )=> parallel_level_sensitive_path_description ASSIGN path_delay_value SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_parallel_level_sensitive_path_description_in_level_sensitive_path_declaration6169);
                    parallel_level_sensitive_path_description609=parallel_level_sensitive_path_description();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parallel_level_sensitive_path_description609.getTree());
                    ASSIGN610=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_level_sensitive_path_declaration6177); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGN610_tree = (CommonTree)adaptor.create(ASSIGN610);
                    adaptor.addChild(root_0, ASSIGN610_tree);
                    }
                    pushFollow(FOLLOW_path_delay_value_in_level_sensitive_path_declaration6179);
                    path_delay_value611=path_delay_value();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_value611.getTree());
                    SEMI612=(Token)match(input,SEMI,FOLLOW_SEMI_in_level_sensitive_path_declaration6181); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI612_tree = (CommonTree)adaptor.create(SEMI612);
                    adaptor.addChild(root_0, SEMI612_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:793:2: full_level_sensitive_path_description ASSIGN path_delay_value SEMI
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_full_level_sensitive_path_description_in_level_sensitive_path_declaration6192);
                    full_level_sensitive_path_description613=full_level_sensitive_path_description();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, full_level_sensitive_path_description613.getTree());
                    ASSIGN614=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_level_sensitive_path_declaration6200); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGN614_tree = (CommonTree)adaptor.create(ASSIGN614);
                    adaptor.addChild(root_0, ASSIGN614_tree);
                    }
                    pushFollow(FOLLOW_path_delay_value_in_level_sensitive_path_declaration6202);
                    path_delay_value615=path_delay_value();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_value615.getTree());
                    SEMI616=(Token)match(input,SEMI,FOLLOW_SEMI_in_level_sensitive_path_declaration6204); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMI616_tree = (CommonTree)adaptor.create(SEMI616);
                    adaptor.addChild(root_0, SEMI616_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "level_sensitive_path_declaration"

    public static class parallel_level_sensitive_path_description_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parallel_level_sensitive_path_description"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:797:1: parallel_level_sensitive_path_description : 'if' LPAREN expression RPAREN LPAREN specify_terminal_descriptor ( polarity_operator )? PPATH specify_terminal_descriptor RPAREN ;
    public final VerilogAParser.parallel_level_sensitive_path_description_return parallel_level_sensitive_path_description() throws RecognitionException {
        VerilogAParser.parallel_level_sensitive_path_description_return retval = new VerilogAParser.parallel_level_sensitive_path_description_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal617=null;
        Token LPAREN618=null;
        Token RPAREN620=null;
        Token LPAREN621=null;
        Token PPATH624=null;
        Token RPAREN626=null;
        VerilogAParser.expression_return expression619 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor622 = null;

        VerilogAParser.polarity_operator_return polarity_operator623 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor625 = null;


        CommonTree string_literal617_tree=null;
        CommonTree LPAREN618_tree=null;
        CommonTree RPAREN620_tree=null;
        CommonTree LPAREN621_tree=null;
        CommonTree PPATH624_tree=null;
        CommonTree RPAREN626_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:797:43: ( 'if' LPAREN expression RPAREN LPAREN specify_terminal_descriptor ( polarity_operator )? PPATH specify_terminal_descriptor RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:798:9: 'if' LPAREN expression RPAREN LPAREN specify_terminal_descriptor ( polarity_operator )? PPATH specify_terminal_descriptor RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal617=(Token)match(input,142,FOLLOW_142_in_parallel_level_sensitive_path_description6229); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal617_tree = (CommonTree)adaptor.create(string_literal617);
            adaptor.addChild(root_0, string_literal617_tree);
            }
            LPAREN618=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parallel_level_sensitive_path_description6231); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN618_tree = (CommonTree)adaptor.create(LPAREN618);
            adaptor.addChild(root_0, LPAREN618_tree);
            }
            pushFollow(FOLLOW_expression_in_parallel_level_sensitive_path_description6233);
            expression619=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression619.getTree());
            RPAREN620=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parallel_level_sensitive_path_description6235); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN620_tree = (CommonTree)adaptor.create(RPAREN620);
            adaptor.addChild(root_0, RPAREN620_tree);
            }
            LPAREN621=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parallel_level_sensitive_path_description6241); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN621_tree = (CommonTree)adaptor.create(LPAREN621);
            adaptor.addChild(root_0, LPAREN621_tree);
            }
            pushFollow(FOLLOW_specify_terminal_descriptor_in_parallel_level_sensitive_path_description6243);
            specify_terminal_descriptor622=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor622.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:799:40: ( polarity_operator )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( ((LA126_0>=PLUS && LA126_0<=MINUS)) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:799:41: polarity_operator
                    {
                    pushFollow(FOLLOW_polarity_operator_in_parallel_level_sensitive_path_description6246);
                    polarity_operator623=polarity_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, polarity_operator623.getTree());

                    }
                    break;

            }

            PPATH624=(Token)match(input,PPATH,FOLLOW_PPATH_in_parallel_level_sensitive_path_description6261); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            PPATH624_tree = (CommonTree)adaptor.create(PPATH624);
            adaptor.addChild(root_0, PPATH624_tree);
            }
            pushFollow(FOLLOW_specify_terminal_descriptor_in_parallel_level_sensitive_path_description6263);
            specify_terminal_descriptor625=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor625.getTree());
            RPAREN626=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parallel_level_sensitive_path_description6265); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN626_tree = (CommonTree)adaptor.create(RPAREN626);
            adaptor.addChild(root_0, RPAREN626_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "parallel_level_sensitive_path_description"

    public static class full_level_sensitive_path_description_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "full_level_sensitive_path_description"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:803:1: full_level_sensitive_path_description : 'if' LPAREN expression RPAREN LPAREN list_of_path_terminals ( polarity_operator )? FPATH list_of_path_terminals RPAREN ;
    public final VerilogAParser.full_level_sensitive_path_description_return full_level_sensitive_path_description() throws RecognitionException {
        VerilogAParser.full_level_sensitive_path_description_return retval = new VerilogAParser.full_level_sensitive_path_description_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal627=null;
        Token LPAREN628=null;
        Token RPAREN630=null;
        Token LPAREN631=null;
        Token FPATH634=null;
        Token RPAREN636=null;
        VerilogAParser.expression_return expression629 = null;

        VerilogAParser.list_of_path_terminals_return list_of_path_terminals632 = null;

        VerilogAParser.polarity_operator_return polarity_operator633 = null;

        VerilogAParser.list_of_path_terminals_return list_of_path_terminals635 = null;


        CommonTree string_literal627_tree=null;
        CommonTree LPAREN628_tree=null;
        CommonTree RPAREN630_tree=null;
        CommonTree LPAREN631_tree=null;
        CommonTree FPATH634_tree=null;
        CommonTree RPAREN636_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:803:39: ( 'if' LPAREN expression RPAREN LPAREN list_of_path_terminals ( polarity_operator )? FPATH list_of_path_terminals RPAREN )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:804:9: 'if' LPAREN expression RPAREN LPAREN list_of_path_terminals ( polarity_operator )? FPATH list_of_path_terminals RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal627=(Token)match(input,142,FOLLOW_142_in_full_level_sensitive_path_description6283); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal627_tree = (CommonTree)adaptor.create(string_literal627);
            adaptor.addChild(root_0, string_literal627_tree);
            }
            LPAREN628=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_full_level_sensitive_path_description6285); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN628_tree = (CommonTree)adaptor.create(LPAREN628);
            adaptor.addChild(root_0, LPAREN628_tree);
            }
            pushFollow(FOLLOW_expression_in_full_level_sensitive_path_description6287);
            expression629=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression629.getTree());
            RPAREN630=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_full_level_sensitive_path_description6289); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN630_tree = (CommonTree)adaptor.create(RPAREN630);
            adaptor.addChild(root_0, RPAREN630_tree);
            }
            LPAREN631=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_full_level_sensitive_path_description6295); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN631_tree = (CommonTree)adaptor.create(LPAREN631);
            adaptor.addChild(root_0, LPAREN631_tree);
            }
            pushFollow(FOLLOW_list_of_path_terminals_in_full_level_sensitive_path_description6297);
            list_of_path_terminals632=list_of_path_terminals();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_path_terminals632.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:805:35: ( polarity_operator )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( ((LA127_0>=PLUS && LA127_0<=MINUS)) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:805:36: polarity_operator
                    {
                    pushFollow(FOLLOW_polarity_operator_in_full_level_sensitive_path_description6300);
                    polarity_operator633=polarity_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, polarity_operator633.getTree());

                    }
                    break;

            }

            FPATH634=(Token)match(input,FPATH,FOLLOW_FPATH_in_full_level_sensitive_path_description6315); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            FPATH634_tree = (CommonTree)adaptor.create(FPATH634);
            adaptor.addChild(root_0, FPATH634_tree);
            }
            pushFollow(FOLLOW_list_of_path_terminals_in_full_level_sensitive_path_description6317);
            list_of_path_terminals635=list_of_path_terminals();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_path_terminals635.getTree());
            RPAREN636=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_full_level_sensitive_path_description6319); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN636_tree = (CommonTree)adaptor.create(RPAREN636);
            adaptor.addChild(root_0, RPAREN636_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "full_level_sensitive_path_description"

    public static class polarity_operator_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "polarity_operator"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:809:1: polarity_operator : ( PLUS | MINUS );
    public final VerilogAParser.polarity_operator_return polarity_operator() throws RecognitionException {
        VerilogAParser.polarity_operator_return retval = new VerilogAParser.polarity_operator_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set637=null;

        CommonTree set637_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:809:19: ( PLUS | MINUS )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set637=(Token)input.LT(1);
            if ( (input.LA(1)>=PLUS && input.LA(1)<=MINUS) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set637));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "polarity_operator"

    public static class edge_sensitive_path_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "edge_sensitive_path_declaration"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:814:1: edge_sensitive_path_declaration : ( 'if' LPAREN expression RPAREN )? LPAREN ( edge_identifier )? specify_terminal_descriptor ( PPATH | FPATH ) LPAREN ( ( list_of_path_terminals )=> list_of_path_terminals | specify_terminal_descriptor ) ( polarity_operator )? COLON data_source_expression RPAREN RPAREN ASSIGN path_delay_value SEMI ;
    public final VerilogAParser.edge_sensitive_path_declaration_return edge_sensitive_path_declaration() throws RecognitionException {
        VerilogAParser.edge_sensitive_path_declaration_return retval = new VerilogAParser.edge_sensitive_path_declaration_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal638=null;
        Token LPAREN639=null;
        Token RPAREN641=null;
        Token LPAREN642=null;
        Token set645=null;
        Token LPAREN646=null;
        Token COLON650=null;
        Token RPAREN652=null;
        Token RPAREN653=null;
        Token ASSIGN654=null;
        Token SEMI656=null;
        VerilogAParser.expression_return expression640 = null;

        VerilogAParser.edge_identifier_return edge_identifier643 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor644 = null;

        VerilogAParser.list_of_path_terminals_return list_of_path_terminals647 = null;

        VerilogAParser.specify_terminal_descriptor_return specify_terminal_descriptor648 = null;

        VerilogAParser.polarity_operator_return polarity_operator649 = null;

        VerilogAParser.data_source_expression_return data_source_expression651 = null;

        VerilogAParser.path_delay_value_return path_delay_value655 = null;


        CommonTree string_literal638_tree=null;
        CommonTree LPAREN639_tree=null;
        CommonTree RPAREN641_tree=null;
        CommonTree LPAREN642_tree=null;
        CommonTree set645_tree=null;
        CommonTree LPAREN646_tree=null;
        CommonTree COLON650_tree=null;
        CommonTree RPAREN652_tree=null;
        CommonTree RPAREN653_tree=null;
        CommonTree ASSIGN654_tree=null;
        CommonTree SEMI656_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:814:33: ( ( 'if' LPAREN expression RPAREN )? LPAREN ( edge_identifier )? specify_terminal_descriptor ( PPATH | FPATH ) LPAREN ( ( list_of_path_terminals )=> list_of_path_terminals | specify_terminal_descriptor ) ( polarity_operator )? COLON data_source_expression RPAREN RPAREN ASSIGN path_delay_value SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:815:2: ( 'if' LPAREN expression RPAREN )? LPAREN ( edge_identifier )? specify_terminal_descriptor ( PPATH | FPATH ) LPAREN ( ( list_of_path_terminals )=> list_of_path_terminals | specify_terminal_descriptor ) ( polarity_operator )? COLON data_source_expression RPAREN RPAREN ASSIGN path_delay_value SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:815:2: ( 'if' LPAREN expression RPAREN )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==142) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:815:4: 'if' LPAREN expression RPAREN
                    {
                    string_literal638=(Token)match(input,142,FOLLOW_142_in_edge_sensitive_path_declaration6348); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal638_tree = (CommonTree)adaptor.create(string_literal638);
                    adaptor.addChild(root_0, string_literal638_tree);
                    }
                    LPAREN639=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_edge_sensitive_path_declaration6350); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN639_tree = (CommonTree)adaptor.create(LPAREN639);
                    adaptor.addChild(root_0, LPAREN639_tree);
                    }
                    pushFollow(FOLLOW_expression_in_edge_sensitive_path_declaration6352);
                    expression640=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression640.getTree());
                    RPAREN641=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_edge_sensitive_path_declaration6354); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN641_tree = (CommonTree)adaptor.create(RPAREN641);
                    adaptor.addChild(root_0, RPAREN641_tree);
                    }

                    }
                    break;

            }

            LPAREN642=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_edge_sensitive_path_declaration6367); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN642_tree = (CommonTree)adaptor.create(LPAREN642);
            adaptor.addChild(root_0, LPAREN642_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:816:16: ( edge_identifier )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( ((LA129_0>=173 && LA129_0<=174)) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:816:17: edge_identifier
                    {
                    pushFollow(FOLLOW_edge_identifier_in_edge_sensitive_path_declaration6370);
                    edge_identifier643=edge_identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, edge_identifier643.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_specify_terminal_descriptor_in_edge_sensitive_path_declaration6374);
            specify_terminal_descriptor644=specify_terminal_descriptor();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor644.getTree());
            set645=(Token)input.LT(1);
            if ( (input.LA(1)>=PPATH && input.LA(1)<=FPATH) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set645));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            LPAREN646=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_edge_sensitive_path_declaration6394); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN646_tree = (CommonTree)adaptor.create(LPAREN646);
            adaptor.addChild(root_0, LPAREN646_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:818:12: ( ( list_of_path_terminals )=> list_of_path_terminals | specify_terminal_descriptor )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==IDENTIFIER||LA130_0==ESCAPED_IDENTIFIER) ) {
                int LA130_1 = input.LA(2);

                if ( (synpred17_VerilogA()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:818:14: ( list_of_path_terminals )=> list_of_path_terminals
                    {
                    pushFollow(FOLLOW_list_of_path_terminals_in_edge_sensitive_path_declaration6404);
                    list_of_path_terminals647=list_of_path_terminals();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list_of_path_terminals647.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:819:14: specify_terminal_descriptor
                    {
                    pushFollow(FOLLOW_specify_terminal_descriptor_in_edge_sensitive_path_declaration6421);
                    specify_terminal_descriptor648=specify_terminal_descriptor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, specify_terminal_descriptor648.getTree());

                    }
                    break;

            }

            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:820:8: ( polarity_operator )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( ((LA131_0>=PLUS && LA131_0<=MINUS)) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:820:9: polarity_operator
                    {
                    pushFollow(FOLLOW_polarity_operator_in_edge_sensitive_path_declaration6433);
                    polarity_operator649=polarity_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, polarity_operator649.getTree());

                    }
                    break;

            }

            COLON650=(Token)match(input,COLON,FOLLOW_COLON_in_edge_sensitive_path_declaration6437); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON650_tree = (CommonTree)adaptor.create(COLON650);
            adaptor.addChild(root_0, COLON650_tree);
            }
            pushFollow(FOLLOW_data_source_expression_in_edge_sensitive_path_declaration6439);
            data_source_expression651=data_source_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, data_source_expression651.getTree());
            RPAREN652=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_edge_sensitive_path_declaration6445); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN652_tree = (CommonTree)adaptor.create(RPAREN652);
            adaptor.addChild(root_0, RPAREN652_tree);
            }
            RPAREN653=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_edge_sensitive_path_declaration6448); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN653_tree = (CommonTree)adaptor.create(RPAREN653);
            adaptor.addChild(root_0, RPAREN653_tree);
            }
            ASSIGN654=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_edge_sensitive_path_declaration6451); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGN654_tree = (CommonTree)adaptor.create(ASSIGN654);
            adaptor.addChild(root_0, ASSIGN654_tree);
            }
            pushFollow(FOLLOW_path_delay_value_in_edge_sensitive_path_declaration6453);
            path_delay_value655=path_delay_value();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, path_delay_value655.getTree());
            SEMI656=(Token)match(input,SEMI,FOLLOW_SEMI_in_edge_sensitive_path_declaration6455); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI656_tree = (CommonTree)adaptor.create(SEMI656);
            adaptor.addChild(root_0, SEMI656_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "edge_sensitive_path_declaration"

    public static class data_source_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "data_source_expression"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:826:1: data_source_expression : expression ;
    public final VerilogAParser.data_source_expression_return data_source_expression() throws RecognitionException {
        VerilogAParser.data_source_expression_return retval = new VerilogAParser.data_source_expression_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.expression_return expression657 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:826:24: ( expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:827:9: expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_data_source_expression6480);
            expression657=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression657.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "data_source_expression"

    public static class edge_identifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "edge_identifier"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:830:1: edge_identifier : ( 'posedge' | 'negedge' );
    public final VerilogAParser.edge_identifier_return edge_identifier() throws RecognitionException {
        VerilogAParser.edge_identifier_return retval = new VerilogAParser.edge_identifier_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set658=null;

        CommonTree set658_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:830:17: ( 'posedge' | 'negedge' )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set658=(Token)input.LT(1);
            if ( (input.LA(1)>=173 && input.LA(1)<=174) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set658));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "edge_identifier"

    public static class sdpd_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "sdpd"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:835:1: sdpd : 'if' LPAREN expression RPAREN simple_path_declaration SEMI ;
    public final VerilogAParser.sdpd_return sdpd() throws RecognitionException {
        VerilogAParser.sdpd_return retval = new VerilogAParser.sdpd_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal659=null;
        Token LPAREN660=null;
        Token RPAREN662=null;
        Token SEMI664=null;
        VerilogAParser.expression_return expression661 = null;

        VerilogAParser.simple_path_declaration_return simple_path_declaration663 = null;


        CommonTree string_literal659_tree=null;
        CommonTree LPAREN660_tree=null;
        CommonTree RPAREN662_tree=null;
        CommonTree SEMI664_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:835:6: ( 'if' LPAREN expression RPAREN simple_path_declaration SEMI )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:836:2: 'if' LPAREN expression RPAREN simple_path_declaration SEMI
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal659=(Token)match(input,142,FOLLOW_142_in_sdpd6535); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal659_tree = (CommonTree)adaptor.create(string_literal659);
            adaptor.addChild(root_0, string_literal659_tree);
            }
            LPAREN660=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_sdpd6537); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN660_tree = (CommonTree)adaptor.create(LPAREN660);
            adaptor.addChild(root_0, LPAREN660_tree);
            }
            pushFollow(FOLLOW_expression_in_sdpd6539);
            expression661=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression661.getTree());
            RPAREN662=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_sdpd6541); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN662_tree = (CommonTree)adaptor.create(RPAREN662);
            adaptor.addChild(root_0, RPAREN662_tree);
            }
            pushFollow(FOLLOW_simple_path_declaration_in_sdpd6544);
            simple_path_declaration663=simple_path_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_path_declaration663.getTree());
            SEMI664=(Token)match(input,SEMI,FOLLOW_SEMI_in_sdpd6547); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMI664_tree = (CommonTree)adaptor.create(SEMI664);
            adaptor.addChild(root_0, SEMI664_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "sdpd"

    public static class lvalue_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lvalue"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:845:1: lvalue : ( ( identifier range )=> identifier range | identifier | concatenation );
    public final VerilogAParser.lvalue_return lvalue() throws RecognitionException {
        VerilogAParser.lvalue_return retval = new VerilogAParser.lvalue_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.identifier_return identifier665 = null;

        VerilogAParser.range_return range666 = null;

        VerilogAParser.identifier_return identifier667 = null;

        VerilogAParser.concatenation_return concatenation668 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:845:8: ( ( identifier range )=> identifier range | identifier | concatenation )
            int alt132=3;
            alt132 = dfa132.predict(input);
            switch (alt132) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:846:2: ( identifier range )=> identifier range
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_lvalue6578);
                    identifier665=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier665.getTree());
                    pushFollow(FOLLOW_range_in_lvalue6580);
                    range666=range();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, range666.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:848:9: identifier
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_lvalue6592);
                    identifier667=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier667.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:849:9: concatenation
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_concatenation_in_lvalue6604);
                    concatenation668=concatenation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, concatenation668.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "lvalue"

    public static class concatenation_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "concatenation"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:852:1: concatenation : ( ( LCURLY expression LCURLY )=> LCURLY expression LCURLY expression ( COMMA expression )* RCURLY RCURLY | LCURLY expression ( COMMA expression )* RCURLY );
    public final VerilogAParser.concatenation_return concatenation() throws RecognitionException {
        VerilogAParser.concatenation_return retval = new VerilogAParser.concatenation_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LCURLY669=null;
        Token LCURLY671=null;
        Token COMMA673=null;
        Token RCURLY675=null;
        Token RCURLY676=null;
        Token LCURLY677=null;
        Token COMMA679=null;
        Token RCURLY681=null;
        VerilogAParser.expression_return expression670 = null;

        VerilogAParser.expression_return expression672 = null;

        VerilogAParser.expression_return expression674 = null;

        VerilogAParser.expression_return expression678 = null;

        VerilogAParser.expression_return expression680 = null;


        CommonTree LCURLY669_tree=null;
        CommonTree LCURLY671_tree=null;
        CommonTree COMMA673_tree=null;
        CommonTree RCURLY675_tree=null;
        CommonTree RCURLY676_tree=null;
        CommonTree LCURLY677_tree=null;
        CommonTree COMMA679_tree=null;
        CommonTree RCURLY681_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:852:15: ( ( LCURLY expression LCURLY )=> LCURLY expression LCURLY expression ( COMMA expression )* RCURLY RCURLY | LCURLY expression ( COMMA expression )* RCURLY )
            int alt135=2;
            alt135 = dfa135.predict(input);
            switch (alt135) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:853:2: ( LCURLY expression LCURLY )=> LCURLY expression LCURLY expression ( COMMA expression )* RCURLY RCURLY
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LCURLY669=(Token)match(input,LCURLY,FOLLOW_LCURLY_in_concatenation6640); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LCURLY669_tree = (CommonTree)adaptor.create(LCURLY669);
                    adaptor.addChild(root_0, LCURLY669_tree);
                    }
                    pushFollow(FOLLOW_expression_in_concatenation6642);
                    expression670=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression670.getTree());
                    LCURLY671=(Token)match(input,LCURLY,FOLLOW_LCURLY_in_concatenation6652); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LCURLY671_tree = (CommonTree)adaptor.create(LCURLY671);
                    adaptor.addChild(root_0, LCURLY671_tree);
                    }
                    pushFollow(FOLLOW_expression_in_concatenation6654);
                    expression672=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression672.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:855:27: ( COMMA expression )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==COMMA) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:855:29: COMMA expression
                    	    {
                    	    COMMA673=(Token)match(input,COMMA,FOLLOW_COMMA_in_concatenation6658); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA673_tree = (CommonTree)adaptor.create(COMMA673);
                    	    adaptor.addChild(root_0, COMMA673_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_concatenation6660);
                    	    expression674=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression674.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);

                    RCURLY675=(Token)match(input,RCURLY,FOLLOW_RCURLY_in_concatenation6665); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RCURLY675_tree = (CommonTree)adaptor.create(RCURLY675);
                    adaptor.addChild(root_0, RCURLY675_tree);
                    }
                    RCURLY676=(Token)match(input,RCURLY,FOLLOW_RCURLY_in_concatenation6667); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RCURLY676_tree = (CommonTree)adaptor.create(RCURLY676);
                    adaptor.addChild(root_0, RCURLY676_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:856:9: LCURLY expression ( COMMA expression )* RCURLY
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LCURLY677=(Token)match(input,LCURLY,FOLLOW_LCURLY_in_concatenation6679); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LCURLY677_tree = (CommonTree)adaptor.create(LCURLY677);
                    adaptor.addChild(root_0, LCURLY677_tree);
                    }
                    pushFollow(FOLLOW_expression_in_concatenation6681);
                    expression678=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression678.getTree());
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:856:27: ( COMMA expression )*
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==COMMA) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:856:29: COMMA expression
                    	    {
                    	    COMMA679=(Token)match(input,COMMA,FOLLOW_COMMA_in_concatenation6685); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA679_tree = (CommonTree)adaptor.create(COMMA679);
                    	    adaptor.addChild(root_0, COMMA679_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_concatenation6687);
                    	    expression680=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression680.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);

                    RCURLY681=(Token)match(input,RCURLY,FOLLOW_RCURLY_in_concatenation6692); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RCURLY681_tree = (CommonTree)adaptor.create(RCURLY681);
                    adaptor.addChild(root_0, RCURLY681_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "concatenation"

    public static class mintypmax_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "mintypmax_expression"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:859:1: mintypmax_expression : expression ( COLON expression COLON expression )? ;
    public final VerilogAParser.mintypmax_expression_return mintypmax_expression() throws RecognitionException {
        VerilogAParser.mintypmax_expression_return retval = new VerilogAParser.mintypmax_expression_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COLON683=null;
        Token COLON685=null;
        VerilogAParser.expression_return expression682 = null;

        VerilogAParser.expression_return expression684 = null;

        VerilogAParser.expression_return expression686 = null;


        CommonTree COLON683_tree=null;
        CommonTree COLON685_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:859:22: ( expression ( COLON expression COLON expression )? )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:860:9: expression ( COLON expression COLON expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_mintypmax_expression6717);
            expression682=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression682.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:860:20: ( COLON expression COLON expression )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==COLON) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:860:22: COLON expression COLON expression
                    {
                    COLON683=(Token)match(input,COLON,FOLLOW_COLON_in_mintypmax_expression6721); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON683_tree = (CommonTree)adaptor.create(COLON683);
                    adaptor.addChild(root_0, COLON683_tree);
                    }
                    pushFollow(FOLLOW_expression_in_mintypmax_expression6723);
                    expression684=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression684.getTree());
                    COLON685=(Token)match(input,COLON,FOLLOW_COLON_in_mintypmax_expression6725); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON685_tree = (CommonTree)adaptor.create(COLON685);
                    adaptor.addChild(root_0, COLON685_tree);
                    }
                    pushFollow(FOLLOW_expression_in_mintypmax_expression6727);
                    expression686=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression686.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "mintypmax_expression"

    public static class exp11_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exp11"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:864:1: exp11 : ( STRING | NUMBER | ( function_call )=> function_call | lvalue | DEFINE );
    public final VerilogAParser.exp11_return exp11() throws RecognitionException {
        VerilogAParser.exp11_return retval = new VerilogAParser.exp11_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token STRING687=null;
        Token NUMBER688=null;
        Token DEFINE691=null;
        VerilogAParser.function_call_return function_call689 = null;

        VerilogAParser.lvalue_return lvalue690 = null;


        CommonTree STRING687_tree=null;
        CommonTree NUMBER688_tree=null;
        CommonTree DEFINE691_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:864:7: ( STRING | NUMBER | ( function_call )=> function_call | lvalue | DEFINE )
            int alt137=5;
            alt137 = dfa137.predict(input);
            switch (alt137) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:865:9: STRING
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    STRING687=(Token)match(input,STRING,FOLLOW_STRING_in_exp116756); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING687_tree = (CommonTree)adaptor.create(STRING687);
                    adaptor.addChild(root_0, STRING687_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:866:2: NUMBER
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    NUMBER688=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_exp116761); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NUMBER688_tree = (CommonTree)adaptor.create(NUMBER688);
                    adaptor.addChild(root_0, NUMBER688_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:867:2: ( function_call )=> function_call
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_function_call_in_exp116772);
                    function_call689=function_call();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, function_call689.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:868:2: lvalue
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_lvalue_in_exp116777);
                    lvalue690=lvalue();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lvalue690.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:869:2: DEFINE
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    DEFINE691=(Token)match(input,DEFINE,FOLLOW_DEFINE_in_exp116782); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DEFINE691_tree = (CommonTree)adaptor.create(DEFINE691);
                    adaptor.addChild(root_0, DEFINE691_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exp11"

    public static class exp10_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exp10"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:872:1: exp10 : ( exp11 | LPAREN expression RPAREN );
    public final VerilogAParser.exp10_return exp10() throws RecognitionException {
        VerilogAParser.exp10_return retval = new VerilogAParser.exp10_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN693=null;
        Token RPAREN695=null;
        VerilogAParser.exp11_return exp11692 = null;

        VerilogAParser.expression_return expression694 = null;


        CommonTree LPAREN693_tree=null;
        CommonTree RPAREN695_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:872:7: ( exp11 | LPAREN expression RPAREN )
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==LCURLY||LA138_0==NUMBER||LA138_0==IDENTIFIER||LA138_0==SYSTEM_TASK_NAME||(LA138_0>=STRING && LA138_0<=DEFINE)||LA138_0==ESCAPED_IDENTIFIER) ) {
                alt138=1;
            }
            else if ( (LA138_0==LPAREN) ) {
                alt138=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }
            switch (alt138) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:873:9: exp11
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_exp11_in_exp106807);
                    exp11692=exp11();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exp11692.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:873:17: LPAREN expression RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN693=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_exp106811); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN693_tree = (CommonTree)adaptor.create(LPAREN693);
                    adaptor.addChild(root_0, LPAREN693_tree);
                    }
                    pushFollow(FOLLOW_expression_in_exp106813);
                    expression694=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression694.getTree());
                    RPAREN695=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_exp106815); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN695_tree = (CommonTree)adaptor.create(RPAREN695);
                    adaptor.addChild(root_0, RPAREN695_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exp10"

    public static class exp9_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exp9"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:876:1: exp9 : ( exp10 | unary_operator exp9 );
    public final VerilogAParser.exp9_return exp9() throws RecognitionException {
        VerilogAParser.exp9_return retval = new VerilogAParser.exp9_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.exp10_return exp10696 = null;

        VerilogAParser.unary_operator_return unary_operator697 = null;

        VerilogAParser.exp9_return exp9698 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:876:6: ( exp10 | unary_operator exp9 )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==LPAREN||LA139_0==LCURLY||LA139_0==NUMBER||LA139_0==IDENTIFIER||LA139_0==SYSTEM_TASK_NAME||(LA139_0>=STRING && LA139_0<=DEFINE)||LA139_0==ESCAPED_IDENTIFIER) ) {
                alt139=1;
            }
            else if ( ((LA139_0>=PLUS && LA139_0<=MINUS)||(LA139_0>=LNOT && LA139_0<=BXNOR)) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:877:9: exp10
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_exp10_in_exp96840);
                    exp10696=exp10();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exp10696.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:877:17: unary_operator exp9
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_unary_operator_in_exp96844);
                    unary_operator697=unary_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) root_0 = (CommonTree)adaptor.becomeRoot(unary_operator697.getTree(), root_0);
                    pushFollow(FOLLOW_exp9_in_exp96847);
                    exp9698=exp9();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exp9698.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exp9"

    public static class exp8_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exp8"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:880:1: exp8 : exp9 ( binary_operator exp9 )* ;
    public final VerilogAParser.exp8_return exp8() throws RecognitionException {
        VerilogAParser.exp8_return retval = new VerilogAParser.exp8_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.exp9_return exp9699 = null;

        VerilogAParser.binary_operator_return binary_operator700 = null;

        VerilogAParser.exp9_return exp9701 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:880:6: ( exp9 ( binary_operator exp9 )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:881:9: exp9 ( binary_operator exp9 )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_exp9_in_exp86872);
            exp9699=exp9();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exp9699.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:881:14: ( binary_operator exp9 )*
            loop140:
            do {
                int alt140=2;
                alt140 = dfa140.predict(input);
                switch (alt140) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:881:15: binary_operator exp9
            	    {
            	    pushFollow(FOLLOW_binary_operator_in_exp86875);
            	    binary_operator700=binary_operator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) root_0 = (CommonTree)adaptor.becomeRoot(binary_operator700.getTree(), root_0);
            	    pushFollow(FOLLOW_exp9_in_exp86878);
            	    exp9701=exp9();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exp9701.getTree());

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exp8"

    public static class exp7_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exp7"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:884:1: exp7 : exp8 ( QUESTION exp7 COLON exp7 )? ;
    public final VerilogAParser.exp7_return exp7() throws RecognitionException {
        VerilogAParser.exp7_return retval = new VerilogAParser.exp7_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token QUESTION703=null;
        Token COLON705=null;
        VerilogAParser.exp8_return exp8702 = null;

        VerilogAParser.exp7_return exp7704 = null;

        VerilogAParser.exp7_return exp7706 = null;


        CommonTree QUESTION703_tree=null;
        CommonTree COLON705_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:884:6: ( exp8 ( QUESTION exp7 COLON exp7 )? )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:885:9: exp8 ( QUESTION exp7 COLON exp7 )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_exp8_in_exp76906);
            exp8702=exp8();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exp8702.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:885:14: ( QUESTION exp7 COLON exp7 )?
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:885:16: QUESTION exp7 COLON exp7
                    {
                    QUESTION703=(Token)match(input,QUESTION,FOLLOW_QUESTION_in_exp76910); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    QUESTION703_tree = (CommonTree)adaptor.create(QUESTION703);
                    adaptor.addChild(root_0, QUESTION703_tree);
                    }
                    pushFollow(FOLLOW_exp7_in_exp76912);
                    exp7704=exp7();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exp7704.getTree());
                    COLON705=(Token)match(input,COLON,FOLLOW_COLON_in_exp76914); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON705_tree = (CommonTree)adaptor.create(COLON705);
                    adaptor.addChild(root_0, COLON705_tree);
                    }
                    pushFollow(FOLLOW_exp7_in_exp76916);
                    exp7706=exp7();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exp7706.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exp7"

    public static class exp0_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exp0"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:888:1: exp0 : exp7 ;
    public final VerilogAParser.exp0_return exp0() throws RecognitionException {
        VerilogAParser.exp0_return retval = new VerilogAParser.exp0_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.exp7_return exp7707 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:888:6: ( exp7 )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:889:9: exp7
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_exp7_in_exp06944);
            exp7707=exp7();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exp7707.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exp0"

    public static class expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:892:1: expression : exp0 ;
    public final VerilogAParser.expression_return expression() throws RecognitionException {
        VerilogAParser.expression_return retval = new VerilogAParser.expression_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.exp0_return exp0708 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:892:12: ( exp0 )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:893:9: exp0
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_exp0_in_expression6969);
            exp0708=exp0();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exp0708.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "expression"

    public static class function_call_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "function_call"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:898:1: function_call : ( name_of_function LPAREN expression_list RPAREN | SYSTEM_TASK_NAME ( LPAREN expression_list RPAREN )? );
    public final VerilogAParser.function_call_return function_call() throws RecognitionException {
        VerilogAParser.function_call_return retval = new VerilogAParser.function_call_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token LPAREN710=null;
        Token RPAREN712=null;
        Token SYSTEM_TASK_NAME713=null;
        Token LPAREN714=null;
        Token RPAREN716=null;
        VerilogAParser.name_of_function_return name_of_function709 = null;

        VerilogAParser.expression_list_return expression_list711 = null;

        VerilogAParser.expression_list_return expression_list715 = null;


        CommonTree LPAREN710_tree=null;
        CommonTree RPAREN712_tree=null;
        CommonTree SYSTEM_TASK_NAME713_tree=null;
        CommonTree LPAREN714_tree=null;
        CommonTree RPAREN716_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:898:15: ( name_of_function LPAREN expression_list RPAREN | SYSTEM_TASK_NAME ( LPAREN expression_list RPAREN )? )
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==IDENTIFIER||LA143_0==ESCAPED_IDENTIFIER) ) {
                alt143=1;
            }
            else if ( (LA143_0==SYSTEM_TASK_NAME) ) {
                alt143=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:899:9: name_of_function LPAREN expression_list RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_name_of_function_in_function_call7004);
                    name_of_function709=name_of_function();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name_of_function709.getTree());
                    LPAREN710=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_function_call7006); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN710_tree = (CommonTree)adaptor.create(LPAREN710);
                    adaptor.addChild(root_0, LPAREN710_tree);
                    }
                    pushFollow(FOLLOW_expression_list_in_function_call7008);
                    expression_list711=expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list711.getTree());
                    RPAREN712=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_function_call7010); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN712_tree = (CommonTree)adaptor.create(RPAREN712);
                    adaptor.addChild(root_0, RPAREN712_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:900:9: SYSTEM_TASK_NAME ( LPAREN expression_list RPAREN )?
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    SYSTEM_TASK_NAME713=(Token)match(input,SYSTEM_TASK_NAME,FOLLOW_SYSTEM_TASK_NAME_in_function_call7022); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SYSTEM_TASK_NAME713_tree = (CommonTree)adaptor.create(SYSTEM_TASK_NAME713);
                    adaptor.addChild(root_0, SYSTEM_TASK_NAME713_tree);
                    }
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:900:26: ( LPAREN expression_list RPAREN )?
                    int alt142=2;
                    alt142 = dfa142.predict(input);
                    switch (alt142) {
                        case 1 :
                            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:900:28: LPAREN expression_list RPAREN
                            {
                            LPAREN714=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_function_call7026); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            LPAREN714_tree = (CommonTree)adaptor.create(LPAREN714);
                            adaptor.addChild(root_0, LPAREN714_tree);
                            }
                            pushFollow(FOLLOW_expression_list_in_function_call7028);
                            expression_list715=expression_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list715.getTree());
                            RPAREN716=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_function_call7030); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            RPAREN716_tree = (CommonTree)adaptor.create(RPAREN716);
                            adaptor.addChild(root_0, RPAREN716_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "function_call"

    public static class expression_list_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression_list"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:903:1: expression_list : expression ( COMMA expression )* ;
    public final VerilogAParser.expression_list_return expression_list() throws RecognitionException {
        VerilogAParser.expression_list_return retval = new VerilogAParser.expression_list_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token COMMA718=null;
        VerilogAParser.expression_return expression717 = null;

        VerilogAParser.expression_return expression719 = null;


        CommonTree COMMA718_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:903:17: ( expression ( COMMA expression )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:904:9: expression ( COMMA expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_expression_list7058);
            expression717=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression717.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:904:20: ( COMMA expression )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==COMMA) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:904:22: COMMA expression
            	    {
            	    COMMA718=(Token)match(input,COMMA,FOLLOW_COMMA_in_expression_list7062); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA718_tree = (CommonTree)adaptor.create(COMMA718);
            	    adaptor.addChild(root_0, COMMA718_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_expression_list7064);
            	    expression719=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression719.getTree());

            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "expression_list"

    public static class unary_operator_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unary_operator"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:907:1: unary_operator : ( PLUS | MINUS | LNOT | BNOT | BAND | RNAND | BOR | RNOR | BXOR | BXNOR );
    public final VerilogAParser.unary_operator_return unary_operator() throws RecognitionException {
        VerilogAParser.unary_operator_return retval = new VerilogAParser.unary_operator_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set720=null;

        CommonTree set720_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:907:16: ( PLUS | MINUS | LNOT | BNOT | BAND | RNAND | BOR | RNOR | BXOR | BXNOR )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set720=(Token)input.LT(1);
            if ( (input.LA(1)>=PLUS && input.LA(1)<=MINUS)||(input.LA(1)>=LNOT && input.LA(1)<=BXNOR) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set720));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "unary_operator"

    public static class binary_operator_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "binary_operator"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:920:1: binary_operator : ( PLUS | MINUS | STAR | DIV | MOD | EQUAL | NOT_EQ | EQ_CASE | NOT_EQ_CASE | LAND | LOR | LT_ | LE | GT | GE | BAND | BOR | BXOR | BXNOR | SR | SL );
    public final VerilogAParser.binary_operator_return binary_operator() throws RecognitionException {
        VerilogAParser.binary_operator_return retval = new VerilogAParser.binary_operator_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set721=null;

        CommonTree set721_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:920:17: ( PLUS | MINUS | STAR | DIV | MOD | EQUAL | NOT_EQ | EQ_CASE | NOT_EQ_CASE | LAND | LOR | LT_ | LE | GT | GE | BAND | BOR | BXOR | BXNOR | SR | SL )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set721=(Token)input.LT(1);
            if ( input.LA(1)==LE||(input.LA(1)>=PLUS && input.LA(1)<=MINUS)||input.LA(1)==BAND||input.LA(1)==BOR||(input.LA(1)>=BXOR && input.LA(1)<=SL) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set721));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "binary_operator"

    public static class name_of_module_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_module"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:952:1: name_of_module : local_identifier ;
    public final VerilogAParser.name_of_module_return name_of_module() throws RecognitionException {
        VerilogAParser.name_of_module_return retval = new VerilogAParser.name_of_module_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier722 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:952:16: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:952:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_module7684);
            local_identifier722=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier722.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_module"

    public static class name_of_port_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_port"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:953:1: name_of_port : local_identifier ;
    public final VerilogAParser.name_of_port_return name_of_port() throws RecognitionException {
        VerilogAParser.name_of_port_return retval = new VerilogAParser.name_of_port_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier723 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:953:14: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:953:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_port7705);
            local_identifier723=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier723.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_port"

    public static class name_of_variable_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_variable"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:954:1: name_of_variable : local_identifier ;
    public final VerilogAParser.name_of_variable_return name_of_variable() throws RecognitionException {
        VerilogAParser.name_of_variable_return retval = new VerilogAParser.name_of_variable_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier724 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:954:18: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:954:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_variable7722);
            local_identifier724=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier724.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_variable"

    public static class name_of_UDP_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_UDP"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:955:1: name_of_UDP : local_identifier ;
    public final VerilogAParser.name_of_UDP_return name_of_UDP() throws RecognitionException {
        VerilogAParser.name_of_UDP_return retval = new VerilogAParser.name_of_UDP_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier725 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:955:13: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:955:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_UDP7744);
            local_identifier725=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier725.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_UDP"

    public static class name_of_UDP_instance_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_UDP_instance"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:956:1: name_of_UDP_instance : local_identifier ;
    public final VerilogAParser.name_of_UDP_instance_return name_of_UDP_instance() throws RecognitionException {
        VerilogAParser.name_of_UDP_instance_return retval = new VerilogAParser.name_of_UDP_instance_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier726 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:956:22: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:956:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_UDP_instance7757);
            local_identifier726=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier726.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_UDP_instance"

    public static class name_of_event_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_event"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:957:1: name_of_event : local_identifier ;
    public final VerilogAParser.name_of_event_return name_of_event() throws RecognitionException {
        VerilogAParser.name_of_event_return retval = new VerilogAParser.name_of_event_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier727 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:957:15: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:957:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_event7777);
            local_identifier727=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier727.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_event"

    public static class name_of_task_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_task"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:958:1: name_of_task : local_identifier ;
    public final VerilogAParser.name_of_task_return name_of_task() throws RecognitionException {
        VerilogAParser.name_of_task_return retval = new VerilogAParser.name_of_task_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier728 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:958:14: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:958:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_task7798);
            local_identifier728=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier728.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_task"

    public static class real_identifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "real_identifier"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:959:1: real_identifier : identifier ;
    public final VerilogAParser.real_identifier_return real_identifier() throws RecognitionException {
        VerilogAParser.real_identifier_return retval = new VerilogAParser.real_identifier_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.identifier_return identifier729 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:959:17: ( identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:959:29: identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_real_identifier7816);
            identifier729=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier729.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "real_identifier"

    public static class name_of_memory_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_memory"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:960:1: name_of_memory : local_identifier ;
    public final VerilogAParser.name_of_memory_return name_of_memory() throws RecognitionException {
        VerilogAParser.name_of_memory_return retval = new VerilogAParser.name_of_memory_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier730 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:960:16: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:960:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_memory7835);
            local_identifier730=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier730.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_memory"

    public static class net_identifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "net_identifier"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:961:1: net_identifier : identifier ;
    public final VerilogAParser.net_identifier_return net_identifier() throws RecognitionException {
        VerilogAParser.net_identifier_return retval = new VerilogAParser.net_identifier_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.identifier_return identifier731 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:961:16: ( identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:961:29: identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_net_identifier7854);
            identifier731=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier731.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "net_identifier"

    public static class name_of_function_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_function"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:962:1: name_of_function : local_identifier ;
    public final VerilogAParser.name_of_function_return name_of_function() throws RecognitionException {
        VerilogAParser.name_of_function_return retval = new VerilogAParser.name_of_function_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier732 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:962:18: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:962:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_function7871);
            local_identifier732=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier732.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_function"

    public static class specparam_identifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "specparam_identifier"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:963:1: specparam_identifier : identifier ;
    public final VerilogAParser.specparam_identifier_return specparam_identifier() throws RecognitionException {
        VerilogAParser.specparam_identifier_return retval = new VerilogAParser.specparam_identifier_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.identifier_return identifier733 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:963:22: ( identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:963:29: identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_specparam_identifier7884);
            identifier733=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier733.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "specparam_identifier"

    public static class udp_name_of_port_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "udp_name_of_port"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:964:1: udp_name_of_port : identifier ;
    public final VerilogAParser.udp_name_of_port_return udp_name_of_port() throws RecognitionException {
        VerilogAParser.udp_name_of_port_return retval = new VerilogAParser.udp_name_of_port_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.identifier_return identifier734 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:964:18: ( identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:964:29: identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_udp_name_of_port7901);
            identifier734=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier734.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "udp_name_of_port"

    public static class name_of_register_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_register"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:965:1: name_of_register : local_identifier ;
    public final VerilogAParser.name_of_register_return name_of_register() throws RecognitionException {
        VerilogAParser.name_of_register_return retval = new VerilogAParser.name_of_register_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier735 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:965:18: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:965:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_register7918);
            local_identifier735=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier735.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_register"

    public static class name_of_gate_instance_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_gate_instance"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:966:1: name_of_gate_instance : local_identifier ;
    public final VerilogAParser.name_of_gate_instance_return name_of_gate_instance() throws RecognitionException {
        VerilogAParser.name_of_gate_instance_return retval = new VerilogAParser.name_of_gate_instance_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier736 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:966:23: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:966:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_gate_instance7930);
            local_identifier736=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier736.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_gate_instance"

    public static class name_of_instance_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_instance"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:967:1: name_of_instance : local_identifier ;
    public final VerilogAParser.name_of_instance_return name_of_instance() throws RecognitionException {
        VerilogAParser.name_of_instance_return retval = new VerilogAParser.name_of_instance_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier737 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:967:18: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:967:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_instance7947);
            local_identifier737=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier737.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_instance"

    public static class name_of_block_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "name_of_block"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:968:1: name_of_block : local_identifier ;
    public final VerilogAParser.name_of_block_return name_of_block() throws RecognitionException {
        VerilogAParser.name_of_block_return retval = new VerilogAParser.name_of_block_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier738 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:968:15: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:968:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_name_of_block7967);
            local_identifier738=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier738.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "name_of_block"

    public static class output_terminal_name_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "output_terminal_name"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:969:1: output_terminal_name : local_identifier ;
    public final VerilogAParser.output_terminal_name_return output_terminal_name() throws RecognitionException {
        VerilogAParser.output_terminal_name_return retval = new VerilogAParser.output_terminal_name_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.local_identifier_return local_identifier739 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:969:22: ( local_identifier )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:969:29: local_identifier
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_output_terminal_name7980);
            local_identifier739=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier739.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "output_terminal_name"

    public static class identifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "identifier"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:976:1: identifier : identifier_path ;
    public final VerilogAParser.identifier_return identifier() throws RecognitionException {
        VerilogAParser.identifier_return retval = new VerilogAParser.identifier_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.identifier_path_return identifier_path740 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:976:12: ( identifier_path )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:977:9: identifier_path
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_path_in_identifier8002);
            identifier_path740=identifier_path();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier_path740.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "identifier"

    public static class identifier_path_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "identifier_path"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:980:1: identifier_path : local_identifier ( DOT local_identifier )* ;
    public final VerilogAParser.identifier_path_return identifier_path() throws RecognitionException {
        VerilogAParser.identifier_path_return retval = new VerilogAParser.identifier_path_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token DOT742=null;
        VerilogAParser.local_identifier_return local_identifier741 = null;

        VerilogAParser.local_identifier_return local_identifier743 = null;


        CommonTree DOT742_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:980:17: ( local_identifier ( DOT local_identifier )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:981:9: local_identifier ( DOT local_identifier )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_local_identifier_in_identifier_path8027);
            local_identifier741=local_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier741.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:981:26: ( DOT local_identifier )*
            loop145:
            do {
                int alt145=2;
                alt145 = dfa145.predict(input);
                switch (alt145) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:981:28: DOT local_identifier
            	    {
            	    DOT742=(Token)match(input,DOT,FOLLOW_DOT_in_identifier_path8031); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    DOT742_tree = (CommonTree)adaptor.create(DOT742);
            	    adaptor.addChild(root_0, DOT742_tree);
            	    }
            	    pushFollow(FOLLOW_local_identifier_in_identifier_path8033);
            	    local_identifier743=local_identifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_identifier743.getTree());

            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "identifier_path"

    public static class local_identifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_identifier"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:984:1: local_identifier : ( IDENTIFIER | ESCAPED_IDENTIFIER );
    public final VerilogAParser.local_identifier_return local_identifier() throws RecognitionException {
        VerilogAParser.local_identifier_return retval = new VerilogAParser.local_identifier_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set744=null;

        CommonTree set744_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:984:18: ( IDENTIFIER | ESCAPED_IDENTIFIER )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set744=(Token)input.LT(1);
            if ( input.LA(1)==IDENTIFIER||input.LA(1)==ESCAPED_IDENTIFIER ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set744));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "local_identifier"

    public static class delay_control_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delay_control"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:989:1: delay_control : ( POUND NUMBER | POUND identifier | POUND LPAREN mintypmax_expression RPAREN );
    public final VerilogAParser.delay_control_return delay_control() throws RecognitionException {
        VerilogAParser.delay_control_return retval = new VerilogAParser.delay_control_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token POUND745=null;
        Token NUMBER746=null;
        Token POUND747=null;
        Token POUND749=null;
        Token LPAREN750=null;
        Token RPAREN752=null;
        VerilogAParser.identifier_return identifier748 = null;

        VerilogAParser.mintypmax_expression_return mintypmax_expression751 = null;


        CommonTree POUND745_tree=null;
        CommonTree NUMBER746_tree=null;
        CommonTree POUND747_tree=null;
        CommonTree POUND749_tree=null;
        CommonTree LPAREN750_tree=null;
        CommonTree RPAREN752_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:989:15: ( POUND NUMBER | POUND identifier | POUND LPAREN mintypmax_expression RPAREN )
            int alt146=3;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==POUND) ) {
                switch ( input.LA(2) ) {
                case NUMBER:
                    {
                    alt146=1;
                    }
                    break;
                case LPAREN:
                    {
                    alt146=3;
                    }
                    break;
                case IDENTIFIER:
                case ESCAPED_IDENTIFIER:
                    {
                    alt146=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 146, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:990:9: POUND NUMBER
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    POUND745=(Token)match(input,POUND,FOLLOW_POUND_in_delay_control8098); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    POUND745_tree = (CommonTree)adaptor.create(POUND745);
                    adaptor.addChild(root_0, POUND745_tree);
                    }
                    NUMBER746=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_delay_control8100); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NUMBER746_tree = (CommonTree)adaptor.create(NUMBER746);
                    adaptor.addChild(root_0, NUMBER746_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:991:9: POUND identifier
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    POUND747=(Token)match(input,POUND,FOLLOW_POUND_in_delay_control8112); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    POUND747_tree = (CommonTree)adaptor.create(POUND747);
                    adaptor.addChild(root_0, POUND747_tree);
                    }
                    pushFollow(FOLLOW_identifier_in_delay_control8114);
                    identifier748=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier748.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:992:9: POUND LPAREN mintypmax_expression RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    POUND749=(Token)match(input,POUND,FOLLOW_POUND_in_delay_control8126); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    POUND749_tree = (CommonTree)adaptor.create(POUND749);
                    adaptor.addChild(root_0, POUND749_tree);
                    }
                    LPAREN750=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_delay_control8128); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN750_tree = (CommonTree)adaptor.create(LPAREN750);
                    adaptor.addChild(root_0, LPAREN750_tree);
                    }
                    pushFollow(FOLLOW_mintypmax_expression_in_delay_control8130);
                    mintypmax_expression751=mintypmax_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mintypmax_expression751.getTree());
                    RPAREN752=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delay_control8132); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN752_tree = (CommonTree)adaptor.create(RPAREN752);
                    adaptor.addChild(root_0, RPAREN752_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "delay_control"

    public static class event_control_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "event_control"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:995:1: event_control : ( AT identifier | AT LPAREN event_expression RPAREN );
    public final VerilogAParser.event_control_return event_control() throws RecognitionException {
        VerilogAParser.event_control_return retval = new VerilogAParser.event_control_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token AT753=null;
        Token AT755=null;
        Token LPAREN756=null;
        Token RPAREN758=null;
        VerilogAParser.identifier_return identifier754 = null;

        VerilogAParser.event_expression_return event_expression757 = null;


        CommonTree AT753_tree=null;
        CommonTree AT755_tree=null;
        CommonTree LPAREN756_tree=null;
        CommonTree RPAREN758_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:995:15: ( AT identifier | AT LPAREN event_expression RPAREN )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==AT) ) {
                int LA147_1 = input.LA(2);

                if ( (LA147_1==LPAREN) ) {
                    alt147=2;
                }
                else if ( (LA147_1==IDENTIFIER||LA147_1==ESCAPED_IDENTIFIER) ) {
                    alt147=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 147, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:996:9: AT identifier
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    AT753=(Token)match(input,AT,FOLLOW_AT_in_event_control8157); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    AT753_tree = (CommonTree)adaptor.create(AT753);
                    adaptor.addChild(root_0, AT753_tree);
                    }
                    pushFollow(FOLLOW_identifier_in_event_control8159);
                    identifier754=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier754.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:997:9: AT LPAREN event_expression RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    AT755=(Token)match(input,AT,FOLLOW_AT_in_event_control8171); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    AT755_tree = (CommonTree)adaptor.create(AT755);
                    adaptor.addChild(root_0, AT755_tree);
                    }
                    LPAREN756=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_event_control8173); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN756_tree = (CommonTree)adaptor.create(LPAREN756);
                    adaptor.addChild(root_0, LPAREN756_tree);
                    }
                    pushFollow(FOLLOW_event_expression_in_event_control8175);
                    event_expression757=event_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_expression757.getTree());
                    RPAREN758=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_event_control8177); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN758_tree = (CommonTree)adaptor.create(RPAREN758);
                    adaptor.addChild(root_0, RPAREN758_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "event_control"

    public static class event_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "event_expression"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1000:1: event_expression : sub_event_expression ( 'or' sub_event_expression )* ;
    public final VerilogAParser.event_expression_return event_expression() throws RecognitionException {
        VerilogAParser.event_expression_return retval = new VerilogAParser.event_expression_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal760=null;
        VerilogAParser.sub_event_expression_return sub_event_expression759 = null;

        VerilogAParser.sub_event_expression_return sub_event_expression761 = null;


        CommonTree string_literal760_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1000:18: ( sub_event_expression ( 'or' sub_event_expression )* )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1001:9: sub_event_expression ( 'or' sub_event_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_sub_event_expression_in_event_expression8202);
            sub_event_expression759=sub_event_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, sub_event_expression759.getTree());
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1001:30: ( 'or' sub_event_expression )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==117) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1001:32: 'or' sub_event_expression
            	    {
            	    string_literal760=(Token)match(input,117,FOLLOW_117_in_event_expression8206); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal760_tree = (CommonTree)adaptor.create(string_literal760);
            	    adaptor.addChild(root_0, string_literal760_tree);
            	    }
            	    pushFollow(FOLLOW_sub_event_expression_in_event_expression8208);
            	    sub_event_expression761=sub_event_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, sub_event_expression761.getTree());

            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "event_expression"

    public static class sub_event_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "sub_event_expression"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1004:1: sub_event_expression : ( expression | 'posedge' expression | 'negedge' expression );
    public final VerilogAParser.sub_event_expression_return sub_event_expression() throws RecognitionException {
        VerilogAParser.sub_event_expression_return retval = new VerilogAParser.sub_event_expression_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal763=null;
        Token string_literal765=null;
        VerilogAParser.expression_return expression762 = null;

        VerilogAParser.expression_return expression764 = null;

        VerilogAParser.expression_return expression766 = null;


        CommonTree string_literal763_tree=null;
        CommonTree string_literal765_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1004:22: ( expression | 'posedge' expression | 'negedge' expression )
            int alt149=3;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1005:9: expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_sub_event_expression8236);
                    expression762=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression762.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1006:9: 'posedge' expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal763=(Token)match(input,173,FOLLOW_173_in_sub_event_expression8248); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal763_tree = (CommonTree)adaptor.create(string_literal763);
                    adaptor.addChild(root_0, string_literal763_tree);
                    }
                    pushFollow(FOLLOW_expression_in_sub_event_expression8250);
                    expression764=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression764.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1007:9: 'negedge' expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    string_literal765=(Token)match(input,174,FOLLOW_174_in_sub_event_expression8262); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal765_tree = (CommonTree)adaptor.create(string_literal765);
                    adaptor.addChild(root_0, string_literal765_tree);
                    }
                    pushFollow(FOLLOW_expression_in_sub_event_expression8264);
                    expression766=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression766.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "sub_event_expression"

    public static class directive_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "directive"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1014:1: directive : ( define_directive | include_directive );
    public final VerilogAParser.directive_return directive() throws RecognitionException {
        VerilogAParser.directive_return retval = new VerilogAParser.directive_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        VerilogAParser.define_directive_return define_directive767 = null;

        VerilogAParser.include_directive_return include_directive768 = null;



        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1014:10: ( define_directive | include_directive )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==178) ) {
                alt150=1;
            }
            else if ( (LA150_0==179) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1015:2: define_directive
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_define_directive_in_directive8285);
                    define_directive767=define_directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, define_directive767.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1016:2: include_directive
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_include_directive_in_directive8290);
                    include_directive768=include_directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, include_directive768.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "directive"

    public static class define_directive_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "define_directive"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1019:1: define_directive : '`define' IDENTIFIER expression ;
    public final VerilogAParser.define_directive_return define_directive() throws RecognitionException {
        VerilogAParser.define_directive_return retval = new VerilogAParser.define_directive_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal769=null;
        Token IDENTIFIER770=null;
        VerilogAParser.expression_return expression771 = null;


        CommonTree string_literal769_tree=null;
        CommonTree IDENTIFIER770_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1019:18: ( '`define' IDENTIFIER expression )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1020:2: '`define' IDENTIFIER expression
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal769=(Token)match(input,178,FOLLOW_178_in_define_directive8301); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal769_tree = (CommonTree)adaptor.create(string_literal769);
            adaptor.addChild(root_0, string_literal769_tree);
            }
            IDENTIFIER770=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_define_directive8303); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER770_tree = (CommonTree)adaptor.create(IDENTIFIER770);
            adaptor.addChild(root_0, IDENTIFIER770_tree);
            }
            pushFollow(FOLLOW_expression_in_define_directive8305);
            expression771=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression771.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "define_directive"

    public static class include_directive_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "include_directive"
    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1023:1: include_directive : '`include' ( identifier | STRING ) ;
    public final VerilogAParser.include_directive_return include_directive() throws RecognitionException {
        VerilogAParser.include_directive_return retval = new VerilogAParser.include_directive_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token string_literal772=null;
        Token STRING774=null;
        VerilogAParser.identifier_return identifier773 = null;


        CommonTree string_literal772_tree=null;
        CommonTree STRING774_tree=null;

        try {
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1023:19: ( '`include' ( identifier | STRING ) )
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1024:2: '`include' ( identifier | STRING )
            {
            root_0 = (CommonTree)adaptor.nil();

            string_literal772=(Token)match(input,179,FOLLOW_179_in_include_directive8316); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal772_tree = (CommonTree)adaptor.create(string_literal772);
            adaptor.addChild(root_0, string_literal772_tree);
            }
            // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1024:13: ( identifier | STRING )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==IDENTIFIER||LA151_0==ESCAPED_IDENTIFIER) ) {
                alt151=1;
            }
            else if ( (LA151_0==STRING) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1024:15: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_include_directive8320);
                    identifier773=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier773.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:1024:28: STRING
                    {
                    STRING774=(Token)match(input,STRING,FOLLOW_STRING_in_include_directive8324); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING774_tree = (CommonTree)adaptor.create(STRING774);
                    adaptor.addChild(root_0, STRING774_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "include_directive"

    // $ANTLR start synpred1_VerilogA
    public final void synpred1_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:53:9: ( name_of_variable LBRACK expression COLON )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:53:11: name_of_variable LBRACK expression COLON
        {
        pushFollow(FOLLOW_name_of_variable_in_synpred1_VerilogA342);
        name_of_variable();

        state._fsp--;
        if (state.failed) return ;
        match(input,LBRACK,FOLLOW_LBRACK_in_synpred1_VerilogA344); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred1_VerilogA346);
        expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,COLON,FOLLOW_COLON_in_synpred1_VerilogA348); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_VerilogA

    // $ANTLR start synpred2_VerilogA
    public final void synpred2_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:55:9: ( name_of_variable LBRACK )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:55:11: name_of_variable LBRACK
        {
        pushFollow(FOLLOW_name_of_variable_in_synpred2_VerilogA386);
        name_of_variable();

        state._fsp--;
        if (state.failed) return ;
        match(input,LBRACK,FOLLOW_LBRACK_in_synpred2_VerilogA388); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_VerilogA

    // $ANTLR start synpred3_VerilogA
    public final void synpred3_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:86:2: ( module_instantiation )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:86:3: module_instantiation
        {
        pushFollow(FOLLOW_module_instantiation_in_synpred3_VerilogA683);
        module_instantiation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_VerilogA

    // $ANTLR start synpred4_VerilogA
    public final void synpred4_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:289:9: ( net_type ( expandrange )? )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:289:11: net_type ( expandrange )?
        {
        pushFollow(FOLLOW_net_type_in_synpred4_VerilogA1572);
        net_type();

        state._fsp--;
        if (state.failed) return ;
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:289:20: ( expandrange )?
        int alt152=2;
        int LA152_0 = input.LA(1);

        if ( (LA152_0==LBRACK||(LA152_0>=98 && LA152_0<=99)) ) {
            alt152=1;
        }
        switch (alt152) {
            case 1 :
                // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:289:21: expandrange
                {
                pushFollow(FOLLOW_expandrange_in_synpred4_VerilogA1575);
                expandrange();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred4_VerilogA

    // $ANTLR start synpred5_VerilogA
    public final void synpred5_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:392:2: ( LBRACK expression COLON )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:392:3: LBRACK expression COLON
        {
        match(input,LBRACK,FOLLOW_LBRACK_in_synpred5_VerilogA2545); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred5_VerilogA2547);
        expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,COLON,FOLLOW_COLON_in_synpred5_VerilogA2549); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_VerilogA

    // $ANTLR start synpred6_VerilogA
    public final void synpred6_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:516:9: ( statement )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:516:10: statement
        {
        pushFollow(FOLLOW_statement_in_synpred6_VerilogA3582);
        statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_VerilogA

    // $ANTLR start synpred7_VerilogA
    public final void synpred7_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:521:9: ( lvalue ASSIGN )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:521:10: lvalue ASSIGN
        {
        pushFollow(FOLLOW_lvalue_in_synpred7_VerilogA3618);
        lvalue();

        state._fsp--;
        if (state.failed) return ;
        match(input,ASSIGN,FOLLOW_ASSIGN_in_synpred7_VerilogA3620); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_VerilogA

    // $ANTLR start synpred8_VerilogA
    public final void synpred8_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:522:9: ( lvalue LE )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:522:10: lvalue LE
        {
        pushFollow(FOLLOW_lvalue_in_synpred8_VerilogA3640);
        lvalue();

        state._fsp--;
        if (state.failed) return ;
        match(input,LE,FOLLOW_LE_in_synpred8_VerilogA3642); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_VerilogA

    // $ANTLR start synpred9_VerilogA
    public final void synpred9_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:652:9: ( path_declaration )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:652:10: path_declaration
        {
        pushFollow(FOLLOW_path_declaration_in_synpred9_VerilogA4813);
        path_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_VerilogA

    // $ANTLR start synpred10_VerilogA
    public final void synpred10_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:670:9: ( simple_path_declaration )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:670:10: simple_path_declaration
        {
        pushFollow(FOLLOW_simple_path_declaration_in_synpred10_VerilogA4960);
        simple_path_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred10_VerilogA

    // $ANTLR start synpred11_VerilogA
    public final void synpred11_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:672:9: ( level_sensitive_path_declaration )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:672:10: level_sensitive_path_declaration
        {
        pushFollow(FOLLOW_level_sensitive_path_declaration_in_synpred11_VerilogA4984);
        level_sensitive_path_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_VerilogA

    // $ANTLR start synpred12_VerilogA
    public final void synpred12_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:678:9: ( parallel_path_description )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:678:10: parallel_path_description
        {
        pushFollow(FOLLOW_parallel_path_description_in_synpred12_VerilogA5035);
        parallel_path_description();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_VerilogA

    // $ANTLR start synpred13_VerilogA
    public final void synpred13_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:696:2: ( identifier LBRACK expression COLON )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:696:3: identifier LBRACK expression COLON
        {
        pushFollow(FOLLOW_identifier_in_synpred13_VerilogA5184);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,LBRACK,FOLLOW_LBRACK_in_synpred13_VerilogA5186); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred13_VerilogA5188);
        expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,COLON,FOLLOW_COLON_in_synpred13_VerilogA5190); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_VerilogA

    // $ANTLR start synpred14_VerilogA
    public final void synpred14_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:698:9: ( identifier LBRACK )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:698:10: identifier LBRACK
        {
        pushFollow(FOLLOW_identifier_in_synpred14_VerilogA5229);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,LBRACK,FOLLOW_LBRACK_in_synpred14_VerilogA5231); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_VerilogA

    // $ANTLR start synpred15_VerilogA
    public final void synpred15_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:704:9: ( path_delay_expression )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:704:10: path_delay_expression
        {
        pushFollow(FOLLOW_path_delay_expression_in_synpred15_VerilogA5291);
        path_delay_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_VerilogA

    // $ANTLR start synpred16_VerilogA
    public final void synpred16_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:789:2: ( parallel_level_sensitive_path_description )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:789:3: parallel_level_sensitive_path_description
        {
        pushFollow(FOLLOW_parallel_level_sensitive_path_description_in_synpred16_VerilogA6163);
        parallel_level_sensitive_path_description();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_VerilogA

    // $ANTLR start synpred17_VerilogA
    public final void synpred17_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:818:14: ( list_of_path_terminals )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:818:15: list_of_path_terminals
        {
        pushFollow(FOLLOW_list_of_path_terminals_in_synpred17_VerilogA6399);
        list_of_path_terminals();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred17_VerilogA

    // $ANTLR start synpred18_VerilogA
    public final void synpred18_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:846:2: ( identifier range )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:846:3: identifier range
        {
        pushFollow(FOLLOW_identifier_in_synpred18_VerilogA6563);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_range_in_synpred18_VerilogA6565);
        range();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_VerilogA

    // $ANTLR start synpred19_VerilogA
    public final void synpred19_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:853:2: ( LCURLY expression LCURLY )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:853:3: LCURLY expression LCURLY
        {
        match(input,LCURLY,FOLLOW_LCURLY_in_synpred19_VerilogA6623); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred19_VerilogA6625);
        expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,LCURLY,FOLLOW_LCURLY_in_synpred19_VerilogA6627); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred19_VerilogA

    // $ANTLR start synpred20_VerilogA
    public final void synpred20_VerilogA_fragment() throws RecognitionException {   
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:867:2: ( function_call )
        // C:\\Users\\rozagh\\Documents\\NetBeansProjects\\Clotho\\ClothoDevelopment\\Cello\\ANTLRVerilog\\VerilogA.g:867:3: function_call
        {
        pushFollow(FOLLOW_function_call_in_synpred20_VerilogA6767);
        function_call();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred20_VerilogA

    // Delegated rules

    public final boolean synpred6_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_VerilogA() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_VerilogA_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA107 dfa107 = new DFA107(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA149 dfa149 = new DFA149(this);
    static final String DFA4_eotS =
        "\27\uffff";
    static final String DFA4_eofS =
        "\27\uffff";
    static final String DFA4_minS =
        "\1\20\26\uffff";
    static final String DFA4_maxS =
        "\1\u00b3\26\uffff";
    static final String DFA4_acceptS =
        "\1\uffff\1\2\1\1\24\uffff";
    static final String DFA4_specialS =
        "\27\uffff}>";
    static final String[] DFA4_transitionS = {
            "\2\2\1\uffff\1\2\40\uffff\1\2\20\uffff\1\1\2\uffff\1\2\5\uffff"+
            "\1\2\1\uffff\1\2\1\uffff\20\2\2\uffff\4\2\13\uffff\33\2\24\uffff"+
            "\1\2\17\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA4_eot = DFA.unpackEncodedString(DFA4_eotS);
    static final short[] DFA4_eof = DFA.unpackEncodedString(DFA4_eofS);
    static final char[] DFA4_min = DFA.unpackEncodedStringToUnsignedChars(DFA4_minS);
    static final char[] DFA4_max = DFA.unpackEncodedStringToUnsignedChars(DFA4_maxS);
    static final short[] DFA4_accept = DFA.unpackEncodedString(DFA4_acceptS);
    static final short[] DFA4_special = DFA.unpackEncodedString(DFA4_specialS);
    static final short[][] DFA4_transition;

    static {
        int numStates = DFA4_transitionS.length;
        DFA4_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA4_transition[i] = DFA.unpackEncodedString(DFA4_transitionS[i]);
        }
    }

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = DFA4_eot;
            this.eof = DFA4_eof;
            this.min = DFA4_min;
            this.max = DFA4_max;
            this.accept = DFA4_accept;
            this.special = DFA4_special;
            this.transition = DFA4_transition;
        }
        public String getDescription() {
            return "()* loopback of 34:2: ( module_item )*";
        }
    }
    static final String DFA11_eotS =
        "\20\uffff";
    static final String DFA11_eofS =
        "\20\uffff";
    static final String DFA11_minS =
        "\1\23\1\6\1\5\3\uffff\10\0\2\uffff";
    static final String DFA11_maxS =
        "\1\64\1\13\1\64\3\uffff\10\0\2\uffff";
    static final String DFA11_acceptS =
        "\3\uffff\1\3\12\uffff\1\1\1\2";
    static final String DFA11_specialS =
        "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\2\uffff}>";
    static final String[] DFA11_transitionS = {
            "\1\1\40\uffff\1\1",
            "\2\3\2\uffff\1\3\1\2",
            "\1\14\3\uffff\1\12\5\uffff\1\7\3\uffff\1\10\2\uffff\1\11\2"+
            "\uffff\2\15\1\6\1\13\1\uffff\10\15\16\uffff\1\10",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA11_eot = DFA.unpackEncodedString(DFA11_eotS);
    static final short[] DFA11_eof = DFA.unpackEncodedString(DFA11_eofS);
    static final char[] DFA11_min = DFA.unpackEncodedStringToUnsignedChars(DFA11_minS);
    static final char[] DFA11_max = DFA.unpackEncodedStringToUnsignedChars(DFA11_maxS);
    static final short[] DFA11_accept = DFA.unpackEncodedString(DFA11_acceptS);
    static final short[] DFA11_special = DFA.unpackEncodedString(DFA11_specialS);
    static final short[][] DFA11_transition;

    static {
        int numStates = DFA11_transitionS.length;
        DFA11_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA11_transition[i] = DFA.unpackEncodedString(DFA11_transitionS[i]);
        }
    }

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = DFA11_eot;
            this.eof = DFA11_eof;
            this.min = DFA11_min;
            this.max = DFA11_max;
            this.accept = DFA11_accept;
            this.special = DFA11_special;
            this.transition = DFA11_transition;
        }
        public String getDescription() {
            return "52:1: port_reference : ( ( name_of_variable LBRACK expression COLON )=> name_of_variable LBRACK expression COLON expression RBRACK | ( name_of_variable LBRACK )=> name_of_variable LBRACK expression RBRACK | name_of_variable );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_9 = input.LA(1);

                         
                        int index11_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_10 = input.LA(1);

                         
                        int index11_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_11 = input.LA(1);

                         
                        int index11_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_12 = input.LA(1);

                         
                        int index11_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_13 = input.LA(1);

                         
                        int index11_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_VerilogA()) ) {s = 14;}

                        else if ( (synpred2_VerilogA()) ) {s = 15;}

                         
                        input.seek(index11_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA12_eotS =
        "\26\uffff";
    static final String DFA12_eofS =
        "\26\uffff";
    static final String DFA12_minS =
        "\1\20\25\uffff";
    static final String DFA12_maxS =
        "\1\u00b3\25\uffff";
    static final String DFA12_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1"+
        "\15\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff";
    static final String DFA12_specialS =
        "\26\uffff}>";
    static final String[] DFA12_transitionS = {
            "\2\15\1\uffff\1\13\40\uffff\1\13\23\uffff\1\20\5\uffff\1\22"+
            "\1\uffff\1\23\1\uffff\1\7\1\10\1\1\1\2\1\3\1\4\12\15\2\uffff"+
            "\1\5\1\6\1\11\1\14\13\uffff\32\12\1\21\24\uffff\1\17\17\uffff"+
            "\2\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA12_eot = DFA.unpackEncodedString(DFA12_eotS);
    static final short[] DFA12_eof = DFA.unpackEncodedString(DFA12_eofS);
    static final char[] DFA12_min = DFA.unpackEncodedStringToUnsignedChars(DFA12_minS);
    static final char[] DFA12_max = DFA.unpackEncodedStringToUnsignedChars(DFA12_maxS);
    static final short[] DFA12_accept = DFA.unpackEncodedString(DFA12_acceptS);
    static final short[] DFA12_special = DFA.unpackEncodedString(DFA12_specialS);
    static final short[][] DFA12_transition;

    static {
        int numStates = DFA12_transitionS.length;
        DFA12_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA12_transition[i] = DFA.unpackEncodedString(DFA12_transitionS[i]);
        }
    }

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = DFA12_eot;
            this.eof = DFA12_eof;
            this.min = DFA12_min;
            this.max = DFA12_max;
            this.accept = DFA12_accept;
            this.special = DFA12_special;
            this.transition = DFA12_transition;
        }
        public String getDescription() {
            return "60:1: module_item : ( parameter_declaration | input_declaration | output_declaration | inout_declaration | reg_declaration | time_declaration | integer_declaration | real_declaration | event_declaration | gate_declaration | instantiation | parameter_override | continuous_assign | specify_block | initial_statement | always_statement | task | function | directive );";
        }
    }
    static final String DFA13_eotS =
        "\12\uffff";
    static final String DFA13_eofS =
        "\12\uffff";
    static final String DFA13_minS =
        "\1\23\3\5\1\uffff\1\0\2\uffff\1\0\1\uffff";
    static final String DFA13_maxS =
        "\3\64\1\5\1\uffff\1\0\2\uffff\1\0\1\uffff";
    static final String DFA13_acceptS =
        "\4\uffff\1\2\4\uffff\1\1";
    static final String DFA13_specialS =
        "\5\uffff\1\0\2\uffff\1\1\1\uffff}>";
    static final String[] DFA13_transitionS = {
            "\1\1\40\uffff\1\1",
            "\1\4\14\uffff\1\2\1\3\40\uffff\1\3",
            "\1\5\11\uffff\1\4\3\uffff\1\4\40\uffff\1\4",
            "\1\10",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] DFA13_eot = DFA.unpackEncodedString(DFA13_eotS);
    static final short[] DFA13_eof = DFA.unpackEncodedString(DFA13_eofS);
    static final char[] DFA13_min = DFA.unpackEncodedStringToUnsignedChars(DFA13_minS);
    static final char[] DFA13_max = DFA.unpackEncodedStringToUnsignedChars(DFA13_maxS);
    static final short[] DFA13_accept = DFA.unpackEncodedString(DFA13_acceptS);
    static final short[] DFA13_special = DFA.unpackEncodedString(DFA13_specialS);
    static final short[][] DFA13_transition;

    static {
        int numStates = DFA13_transitionS.length;
        DFA13_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA13_transition[i] = DFA.unpackEncodedString(DFA13_transitionS[i]);
        }
    }

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = DFA13_eot;
            this.eof = DFA13_eof;
            this.min = DFA13_min;
            this.max = DFA13_max;
            this.accept = DFA13_accept;
            this.special = DFA13_special;
            this.transition = DFA13_transition;
        }
        public String getDescription() {
            return "85:1: instantiation : ( ( module_instantiation )=> module_instantiation | udp_instantiation );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA13_5 = input.LA(1);

                         
                        int index13_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_VerilogA()) ) {s = 9;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index13_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA13_8 = input.LA(1);

                         
                        int index13_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_VerilogA()) ) {s = 9;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index13_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 13, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA22_eotS =
        "\37\uffff";
    static final String DFA22_eofS =
        "\37\uffff";
    static final String DFA22_minS =
        "\1\4\36\uffff";
    static final String DFA22_maxS =
        "\1\u00a1\36\uffff";
    static final String DFA22_acceptS =
        "\1\uffff\1\2\24\uffff\1\1\10\uffff";
    static final String DFA22_specialS =
        "\37\uffff}>";
    static final String[] DFA22_transitionS = {
            "\1\1\4\uffff\1\1\7\uffff\3\1\1\uffff\2\1\35\uffff\2\1\34\uffff"+
            "\6\26\14\uffff\3\26\47\uffff\1\1\2\uffff\3\1\1\uffff\7\1\1\uffff"+
            "\1\1\1\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA22_eot = DFA.unpackEncodedString(DFA22_eotS);
    static final short[] DFA22_eof = DFA.unpackEncodedString(DFA22_eofS);
    static final char[] DFA22_min = DFA.unpackEncodedStringToUnsignedChars(DFA22_minS);
    static final char[] DFA22_max = DFA.unpackEncodedStringToUnsignedChars(DFA22_maxS);
    static final short[] DFA22_accept = DFA.unpackEncodedString(DFA22_acceptS);
    static final short[] DFA22_special = DFA.unpackEncodedString(DFA22_specialS);
    static final short[][] DFA22_transition;

    static {
        int numStates = DFA22_transitionS.length;
        DFA22_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA22_transition[i] = DFA.unpackEncodedString(DFA22_transitionS[i]);
        }
    }

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = DFA22_eot;
            this.eof = DFA22_eof;
            this.min = DFA22_min;
            this.max = DFA22_max;
            this.accept = DFA22_accept;
            this.special = DFA22_special;
            this.transition = DFA22_transition;
        }
        public String getDescription() {
            return "()* loopback of 225:9: ( tf_declaration )*";
        }
    }
    static final String DFA24_eotS =
        "\36\uffff";
    static final String DFA24_eofS =
        "\36\uffff";
    static final String DFA24_minS =
        "\1\11\35\uffff";
    static final String DFA24_maxS =
        "\1\u00a1\35\uffff";
    static final String DFA24_acceptS =
        "\1\uffff\1\2\23\uffff\1\1\10\uffff";
    static final String DFA24_specialS =
        "\36\uffff}>";
    static final String[] DFA24_transitionS = {
            "\1\1\7\uffff\3\1\1\uffff\2\1\35\uffff\2\1\34\uffff\6\25\14"+
            "\uffff\3\25\47\uffff\1\1\2\uffff\3\1\1\uffff\7\1\1\uffff\1\1"+
            "\1\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA24_eot = DFA.unpackEncodedString(DFA24_eotS);
    static final short[] DFA24_eof = DFA.unpackEncodedString(DFA24_eofS);
    static final char[] DFA24_min = DFA.unpackEncodedStringToUnsignedChars(DFA24_minS);
    static final char[] DFA24_max = DFA.unpackEncodedStringToUnsignedChars(DFA24_maxS);
    static final short[] DFA24_accept = DFA.unpackEncodedString(DFA24_acceptS);
    static final short[] DFA24_special = DFA.unpackEncodedString(DFA24_specialS);
    static final short[][] DFA24_transition;

    static {
        int numStates = DFA24_transitionS.length;
        DFA24_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA24_transition[i] = DFA.unpackEncodedString(DFA24_transitionS[i]);
        }
    }

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = DFA24_eot;
            this.eof = DFA24_eof;
            this.min = DFA24_min;
            this.max = DFA24_max;
            this.accept = DFA24_accept;
            this.special = DFA24_special;
            this.transition = DFA24_transition;
        }
        public String getDescription() {
            return "()+ loopback of 232:9: ( tf_declaration )+";
        }
    }
    static final String DFA26_eotS =
        "\12\uffff";
    static final String DFA26_eofS =
        "\12\uffff";
    static final String DFA26_minS =
        "\1\122\11\uffff";
    static final String DFA26_maxS =
        "\1\146\11\uffff";
    static final String DFA26_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String DFA26_specialS =
        "\12\uffff}>";
    static final String[] DFA26_transitionS = {
            "\1\7\1\10\1\1\1\3\1\2\1\4\14\uffff\1\5\1\6\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA26_eot = DFA.unpackEncodedString(DFA26_eotS);
    static final short[] DFA26_eof = DFA.unpackEncodedString(DFA26_eofS);
    static final char[] DFA26_min = DFA.unpackEncodedStringToUnsignedChars(DFA26_minS);
    static final char[] DFA26_max = DFA.unpackEncodedStringToUnsignedChars(DFA26_maxS);
    static final short[] DFA26_accept = DFA.unpackEncodedString(DFA26_acceptS);
    static final short[] DFA26_special = DFA.unpackEncodedString(DFA26_specialS);
    static final short[][] DFA26_transition;

    static {
        int numStates = DFA26_transitionS.length;
        DFA26_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA26_transition[i] = DFA.unpackEncodedString(DFA26_transitionS[i]);
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = DFA26_eot;
            this.eof = DFA26_eof;
            this.min = DFA26_min;
            this.max = DFA26_max;
            this.accept = DFA26_accept;
            this.special = DFA26_special;
            this.transition = DFA26_transition;
        }
        public String getDescription() {
            return "243:1: tf_declaration : ( parameter_declaration | output_declaration | input_declaration | inout_declaration | reg_declaration | time_declaration | integer_declaration | real_declaration | event_declaration );";
        }
    }
    static final String DFA35_eotS =
        "\31\uffff";
    static final String DFA35_eofS =
        "\31\uffff";
    static final String DFA35_minS =
        "\1\20\1\5\1\uffff\2\13\2\5\1\4\1\uffff\15\0\1\uffff\2\0";
    static final String DFA35_maxS =
        "\1\141\1\143\1\uffff\2\13\2\64\1\16\1\uffff\15\0\1\uffff\2\0";
    static final String DFA35_acceptS =
        "\2\uffff\1\1\5\uffff\1\2\15\uffff\1\1\2\uffff";
    static final String DFA35_specialS =
        "\1\0\6\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\16\1\uffff\1\17\1\20}>";
    static final String[] DFA35_transitionS = {
            "\1\1\107\uffff\12\2",
            "\1\10\5\uffff\1\5\6\uffff\1\6\1\7\40\uffff\1\7\55\uffff\1"+
            "\3\1\4",
            "",
            "\1\11",
            "\1\12",
            "\1\21\3\uffff\1\17\5\uffff\1\14\3\uffff\1\15\2\uffff\1\16"+
            "\2\uffff\2\22\1\13\1\20\1\uffff\10\22\16\uffff\1\15",
            "\1\24\11\uffff\1\23\3\uffff\1\25\40\uffff\1\25",
            "\1\30\1\uffff\1\27\7\uffff\1\26",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA35_eot = DFA.unpackEncodedString(DFA35_eotS);
    static final short[] DFA35_eof = DFA.unpackEncodedString(DFA35_eofS);
    static final char[] DFA35_min = DFA.unpackEncodedStringToUnsignedChars(DFA35_minS);
    static final char[] DFA35_max = DFA.unpackEncodedStringToUnsignedChars(DFA35_maxS);
    static final short[] DFA35_accept = DFA.unpackEncodedString(DFA35_acceptS);
    static final short[] DFA35_special = DFA.unpackEncodedString(DFA35_specialS);
    static final short[][] DFA35_transition;

    static {
        int numStates = DFA35_transitionS.length;
        DFA35_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA35_transition[i] = DFA.unpackEncodedString(DFA35_transitionS[i]);
        }
    }

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = DFA35_eot;
            this.eof = DFA35_eof;
            this.min = DFA35_min;
            this.max = DFA35_max;
            this.accept = DFA35_accept;
            this.special = DFA35_special;
            this.transition = DFA35_transition;
        }
        public String getDescription() {
            return "288:1: net_declaration : ( ( net_type ( expandrange )? )=> net_type ( expandrange )? ( delay )? list_of_assigned_variables SEMI | KW_TRIREG ( charge_strength )? ( expandrange )? ( delay )? list_of_variables SEMI );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_0 = input.LA(1);

                         
                        int index35_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_0==KW_TRIREG) ) {s = 1;}

                        else if ( ((LA35_0>=88 && LA35_0<=97)) && (synpred4_VerilogA())) {s = 2;}

                         
                        input.seek(index35_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_7 = input.LA(1);

                         
                        int index35_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_7==ASSIGN) && (synpred4_VerilogA())) {s = 22;}

                        else if ( (LA35_7==COMMA) ) {s = 23;}

                        else if ( (LA35_7==SEMI) ) {s = 24;}

                         
                        input.seek(index35_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA35_9 = input.LA(1);

                         
                        int index35_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA35_10 = input.LA(1);

                         
                        int index35_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA35_11 = input.LA(1);

                         
                        int index35_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA35_12 = input.LA(1);

                         
                        int index35_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA35_13 = input.LA(1);

                         
                        int index35_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA35_14 = input.LA(1);

                         
                        int index35_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA35_15 = input.LA(1);

                         
                        int index35_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA35_16 = input.LA(1);

                         
                        int index35_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA35_17 = input.LA(1);

                         
                        int index35_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA35_18 = input.LA(1);

                         
                        int index35_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA35_19 = input.LA(1);

                         
                        int index35_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA35_20 = input.LA(1);

                         
                        int index35_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA35_21 = input.LA(1);

                         
                        int index35_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA35_23 = input.LA(1);

                         
                        int index35_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_23);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA35_24 = input.LA(1);

                         
                        int index35_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index35_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA53_eotS =
        "\72\uffff";
    static final String DFA53_eofS =
        "\72\uffff";
    static final String DFA53_minS =
        "\1\13\1\5\2\14\3\5\1\14\2\5\2\0\2\uffff\2\0\2\uffff\5\0\2\uffff"+
        "\3\0\2\uffff\12\0\2\uffff\20\0";
    static final String DFA53_maxS =
        "\1\13\1\64\4\63\1\64\1\63\2\64\2\0\2\uffff\2\0\2\uffff\5\0\2\uffff"+
        "\3\0\2\uffff\12\0\2\uffff\20\0";
    static final String DFA53_acceptS =
        "\14\uffff\1\1\1\2\2\uffff\1\1\6\uffff\1\1\4\uffff\1\1\13\uffff"+
        "\1\1\21\uffff";
    static final String DFA53_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\uffff\1\4\2\uffff\1\5\1\6\2\uffff\1"+
        "\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\2\uffff\1\16\1\17\1\20"+
        "\2\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\2\uffff"+
        "\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47"+
        "\1\50\1\51\1\52}>";
    static final String[] DFA53_transitionS = {
            "\1\1",
            "\1\10\3\uffff\1\6\5\uffff\1\3\3\uffff\1\4\2\uffff\1\5\2\uffff"+
            "\2\11\1\2\1\7\1\uffff\10\11\16\uffff\1\4",
            "\1\14\1\15\6\uffff\1\12\4\uffff\2\12\2\uffff\1\13\2\uffff"+
            "\1\12\1\uffff\1\12\1\uffff\20\12",
            "\1\20\1\15\6\uffff\1\16\4\uffff\2\16\2\uffff\1\17\2\uffff"+
            "\1\16\1\uffff\1\16\1\uffff\20\16",
            "\1\22\2\uffff\1\23\2\uffff\1\24\1\27\1\15\6\uffff\1\25\4\uffff"+
            "\2\25\2\uffff\1\26\2\uffff\1\25\1\uffff\1\25\1\uffff\20\25",
            "\1\31\6\uffff\1\34\1\15\6\uffff\1\32\4\uffff\2\32\2\uffff"+
            "\1\33\2\uffff\1\32\1\uffff\1\32\1\uffff\20\32",
            "\1\44\3\uffff\1\42\5\uffff\1\37\3\uffff\1\40\2\uffff\1\41"+
            "\2\uffff\2\45\1\36\1\43\1\uffff\10\45\16\uffff\1\40",
            "\1\50\1\15\6\uffff\1\46\4\uffff\2\46\2\uffff\1\47\2\uffff"+
            "\1\46\1\uffff\1\46\1\uffff\20\46",
            "\1\60\3\uffff\1\56\5\uffff\1\53\3\uffff\1\54\2\uffff\1\55"+
            "\2\uffff\2\61\1\52\1\57\1\uffff\10\61\16\uffff\1\54",
            "\1\70\3\uffff\1\66\5\uffff\1\63\3\uffff\1\64\2\uffff\1\65"+
            "\2\uffff\2\71\1\62\1\67\1\uffff\10\71\16\uffff\1\64",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA53_eot = DFA.unpackEncodedString(DFA53_eotS);
    static final short[] DFA53_eof = DFA.unpackEncodedString(DFA53_eofS);
    static final char[] DFA53_min = DFA.unpackEncodedStringToUnsignedChars(DFA53_minS);
    static final char[] DFA53_max = DFA.unpackEncodedStringToUnsignedChars(DFA53_maxS);
    static final short[] DFA53_accept = DFA.unpackEncodedString(DFA53_acceptS);
    static final short[] DFA53_special = DFA.unpackEncodedString(DFA53_specialS);
    static final short[][] DFA53_transition;

    static {
        int numStates = DFA53_transitionS.length;
        DFA53_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA53_transition[i] = DFA.unpackEncodedString(DFA53_transitionS[i]);
        }
    }

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = DFA53_eot;
            this.eof = DFA53_eof;
            this.min = DFA53_min;
            this.max = DFA53_max;
            this.accept = DFA53_accept;
            this.special = DFA53_special;
            this.transition = DFA53_transition;
        }
        public String getDescription() {
            return "391:1: range : ( ( LBRACK expression COLON )=> LBRACK expression COLON expression RBRACK | LBRACK expression RBRACK );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_2 = input.LA(1);

                         
                        int index53_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_2==LE||(LA53_2>=PLUS && LA53_2<=MINUS)||LA53_2==BAND||LA53_2==BOR||(LA53_2>=BXOR && LA53_2<=SL)) ) {s = 10;}

                        else if ( (LA53_2==QUESTION) ) {s = 11;}

                        else if ( (LA53_2==COLON) && (synpred5_VerilogA())) {s = 12;}

                        else if ( (LA53_2==RBRACK) ) {s = 13;}

                         
                        input.seek(index53_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_3 = input.LA(1);

                         
                        int index53_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_3==LE||(LA53_3>=PLUS && LA53_3<=MINUS)||LA53_3==BAND||LA53_3==BOR||(LA53_3>=BXOR && LA53_3<=SL)) ) {s = 14;}

                        else if ( (LA53_3==QUESTION) ) {s = 15;}

                        else if ( (LA53_3==COLON) && (synpred5_VerilogA())) {s = 16;}

                        else if ( (LA53_3==RBRACK) ) {s = 13;}

                         
                        input.seek(index53_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA53_4 = input.LA(1);

                         
                        int index53_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_4==LPAREN) ) {s = 18;}

                        else if ( (LA53_4==DOT) ) {s = 19;}

                        else if ( (LA53_4==LBRACK) ) {s = 20;}

                        else if ( (LA53_4==LE||(LA53_4>=PLUS && LA53_4<=MINUS)||LA53_4==BAND||LA53_4==BOR||(LA53_4>=BXOR && LA53_4<=SL)) ) {s = 21;}

                        else if ( (LA53_4==QUESTION) ) {s = 22;}

                        else if ( (LA53_4==COLON) && (synpred5_VerilogA())) {s = 23;}

                        else if ( (LA53_4==RBRACK) ) {s = 13;}

                         
                        input.seek(index53_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA53_5 = input.LA(1);

                         
                        int index53_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_5==LPAREN) ) {s = 25;}

                        else if ( (LA53_5==LE||(LA53_5>=PLUS && LA53_5<=MINUS)||LA53_5==BAND||LA53_5==BOR||(LA53_5>=BXOR && LA53_5<=SL)) ) {s = 26;}

                        else if ( (LA53_5==QUESTION) ) {s = 27;}

                        else if ( (LA53_5==COLON) && (synpred5_VerilogA())) {s = 28;}

                        else if ( (LA53_5==RBRACK) ) {s = 13;}

                         
                        input.seek(index53_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA53_7 = input.LA(1);

                         
                        int index53_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_7==LE||(LA53_7>=PLUS && LA53_7<=MINUS)||LA53_7==BAND||LA53_7==BOR||(LA53_7>=BXOR && LA53_7<=SL)) ) {s = 38;}

                        else if ( (LA53_7==QUESTION) ) {s = 39;}

                        else if ( (LA53_7==COLON) && (synpred5_VerilogA())) {s = 40;}

                        else if ( (LA53_7==RBRACK) ) {s = 13;}

                         
                        input.seek(index53_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA53_10 = input.LA(1);

                         
                        int index53_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA53_11 = input.LA(1);

                         
                        int index53_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA53_14 = input.LA(1);

                         
                        int index53_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA53_15 = input.LA(1);

                         
                        int index53_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA53_18 = input.LA(1);

                         
                        int index53_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_18);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA53_19 = input.LA(1);

                         
                        int index53_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_19);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA53_20 = input.LA(1);

                         
                        int index53_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_20);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA53_21 = input.LA(1);

                         
                        int index53_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_21);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA53_22 = input.LA(1);

                         
                        int index53_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_22);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA53_25 = input.LA(1);

                         
                        int index53_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_25);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA53_26 = input.LA(1);

                         
                        int index53_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_26);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA53_27 = input.LA(1);

                         
                        int index53_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_27);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA53_30 = input.LA(1);

                         
                        int index53_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_30);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA53_31 = input.LA(1);

                         
                        int index53_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_31);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA53_32 = input.LA(1);

                         
                        int index53_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_32);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA53_33 = input.LA(1);

                         
                        int index53_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_33);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA53_34 = input.LA(1);

                         
                        int index53_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_34);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA53_35 = input.LA(1);

                         
                        int index53_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_35);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA53_36 = input.LA(1);

                         
                        int index53_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_36);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA53_37 = input.LA(1);

                         
                        int index53_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_37);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA53_38 = input.LA(1);

                         
                        int index53_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_38);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA53_39 = input.LA(1);

                         
                        int index53_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_39);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA53_42 = input.LA(1);

                         
                        int index53_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_42);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA53_43 = input.LA(1);

                         
                        int index53_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_43);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA53_44 = input.LA(1);

                         
                        int index53_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_44);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA53_45 = input.LA(1);

                         
                        int index53_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_45);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA53_46 = input.LA(1);

                         
                        int index53_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_46);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA53_47 = input.LA(1);

                         
                        int index53_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_47);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA53_48 = input.LA(1);

                         
                        int index53_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_48);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA53_49 = input.LA(1);

                         
                        int index53_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_49);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA53_50 = input.LA(1);

                         
                        int index53_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_50);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA53_51 = input.LA(1);

                         
                        int index53_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_51);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA53_52 = input.LA(1);

                         
                        int index53_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_52);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA53_53 = input.LA(1);

                         
                        int index53_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_53);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA53_54 = input.LA(1);

                         
                        int index53_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_54);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA53_55 = input.LA(1);

                         
                        int index53_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_55);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA53_56 = input.LA(1);

                         
                        int index53_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_56);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA53_57 = input.LA(1);

                         
                        int index53_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_VerilogA()) ) {s = 40;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index53_57);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA55_eotS =
        "\16\uffff";
    static final String DFA55_eofS =
        "\16\uffff";
    static final String DFA55_minS =
        "\2\5\14\uffff";
    static final String DFA55_maxS =
        "\1\64\1\162\14\uffff";
    static final String DFA55_acceptS =
        "\2\uffff\1\2\1\uffff\1\1\11\uffff";
    static final String DFA55_specialS =
        "\16\uffff}>";
    static final String[] DFA55_transitionS = {
            "\1\1\14\uffff\2\2\40\uffff\1\2",
            "\1\2\3\uffff\1\2\5\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff"+
            "\4\2\1\uffff\10\2\16\uffff\1\2\46\uffff\1\4\3\uffff\1\4\13\uffff"+
            "\10\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
    static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
    static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
    static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
    static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
    static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
    static final short[][] DFA55_transition;

    static {
        int numStates = DFA55_transitionS.length;
        DFA55_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = DFA55_eot;
            this.eof = DFA55_eof;
            this.min = DFA55_min;
            this.max = DFA55_max;
            this.accept = DFA55_accept;
            this.special = DFA55_special;
            this.transition = DFA55_transition;
        }
        public String getDescription() {
            return "407:12: ( drive_strength )?";
        }
    }
    static final String DFA63_eotS =
        "\16\uffff";
    static final String DFA63_eofS =
        "\16\uffff";
    static final String DFA63_minS =
        "\2\5\14\uffff";
    static final String DFA63_maxS =
        "\1\64\1\162\14\uffff";
    static final String DFA63_acceptS =
        "\2\uffff\1\2\1\uffff\1\1\11\uffff";
    static final String DFA63_specialS =
        "\16\uffff}>";
    static final String[] DFA63_transitionS = {
            "\1\1\14\uffff\2\2\40\uffff\1\2",
            "\1\2\3\uffff\1\2\5\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff"+
            "\4\2\1\uffff\10\2\16\uffff\1\2\46\uffff\1\4\3\uffff\1\4\13\uffff"+
            "\10\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA63_eot = DFA.unpackEncodedString(DFA63_eotS);
    static final short[] DFA63_eof = DFA.unpackEncodedString(DFA63_eofS);
    static final char[] DFA63_min = DFA.unpackEncodedStringToUnsignedChars(DFA63_minS);
    static final char[] DFA63_max = DFA.unpackEncodedStringToUnsignedChars(DFA63_maxS);
    static final short[] DFA63_accept = DFA.unpackEncodedString(DFA63_acceptS);
    static final short[] DFA63_special = DFA.unpackEncodedString(DFA63_specialS);
    static final short[][] DFA63_transition;

    static {
        int numStates = DFA63_transitionS.length;
        DFA63_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA63_transition[i] = DFA.unpackEncodedString(DFA63_transitionS[i]);
        }
    }

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = DFA63_eot;
            this.eof = DFA63_eof;
            this.min = DFA63_min;
            this.max = DFA63_max;
            this.accept = DFA63_accept;
            this.special = DFA63_special;
            this.transition = DFA63_transition;
        }
        public String getDescription() {
            return "456:14: ( drive_strength )?";
        }
    }
    static final String DFA73_eotS =
        "\14\uffff";
    static final String DFA73_eofS =
        "\14\uffff";
    static final String DFA73_minS =
        "\1\5\13\uffff";
    static final String DFA73_maxS =
        "\1\64\13\uffff";
    static final String DFA73_acceptS =
        "\1\uffff\1\1\11\uffff\1\2";
    static final String DFA73_specialS =
        "\14\uffff}>";
    static final String[] DFA73_transitionS = {
            "\3\1\1\13\1\1\5\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff\4"+
            "\1\1\uffff\10\1\16\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA73_eot = DFA.unpackEncodedString(DFA73_eotS);
    static final short[] DFA73_eof = DFA.unpackEncodedString(DFA73_eofS);
    static final char[] DFA73_min = DFA.unpackEncodedStringToUnsignedChars(DFA73_minS);
    static final char[] DFA73_max = DFA.unpackEncodedStringToUnsignedChars(DFA73_maxS);
    static final short[] DFA73_accept = DFA.unpackEncodedString(DFA73_acceptS);
    static final short[] DFA73_special = DFA.unpackEncodedString(DFA73_specialS);
    static final short[][] DFA73_transition;

    static {
        int numStates = DFA73_transitionS.length;
        DFA73_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA73_transition[i] = DFA.unpackEncodedString(DFA73_transitionS[i]);
        }
    }

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = DFA73_eot;
            this.eof = DFA73_eof;
            this.min = DFA73_min;
            this.max = DFA73_max;
            this.accept = DFA73_accept;
            this.special = DFA73_special;
            this.transition = DFA73_transition;
        }
        public String getDescription() {
            return "487:1: list_of_module_connections : ( module_port_connection ( COMMA module_port_connection )* | named_port_connection ( COMMA named_port_connection )* );";
        }
    }
    static final String DFA74_eotS =
        "\13\uffff";
    static final String DFA74_eofS =
        "\13\uffff";
    static final String DFA74_minS =
        "\1\5\12\uffff";
    static final String DFA74_maxS =
        "\1\64\12\uffff";
    static final String DFA74_acceptS =
        "\1\uffff\1\1\7\uffff\1\2\1\uffff";
    static final String DFA74_specialS =
        "\13\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\1\2\11\1\uffff\1\1\5\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2"+
            "\uffff\4\1\1\uffff\10\1\16\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "492:1: module_port_connection : ( expression | );";
        }
    }
    static final String DFA75_eotS =
        "\12\uffff";
    static final String DFA75_eofS =
        "\12\uffff";
    static final String DFA75_minS =
        "\1\5\11\uffff";
    static final String DFA75_maxS =
        "\1\64\11\uffff";
    static final String DFA75_acceptS =
        "\1\uffff\1\1\7\uffff\1\2";
    static final String DFA75_specialS =
        "\12\uffff}>";
    static final String[] DFA75_transitionS = {
            "\1\1\1\uffff\1\11\1\uffff\1\1\5\uffff\1\1\3\uffff\1\1\2\uffff"+
            "\1\1\2\uffff\4\1\1\uffff\10\1\16\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
    static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
    static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
    static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
    static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
    static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
    static final short[][] DFA75_transition;

    static {
        int numStates = DFA75_transitionS.length;
        DFA75_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = DFA75_eot;
            this.eof = DFA75_eof;
            this.min = DFA75_min;
            this.max = DFA75_max;
            this.accept = DFA75_accept;
            this.special = DFA75_special;
            this.transition = DFA75_transition;
        }
        public String getDescription() {
            return "500:31: ( expression )?";
        }
    }
    static final String DFA76_eotS =
        "\26\uffff";
    static final String DFA76_eofS =
        "\26\uffff";
    static final String DFA76_minS =
        "\1\4\25\uffff";
    static final String DFA76_maxS =
        "\1\u00a1\25\uffff";
    static final String DFA76_acceptS =
        "\1\uffff\24\1\1\2";
    static final String DFA76_specialS =
        "\1\0\25\uffff}>";
    static final String[] DFA76_transitionS = {
            "\1\25\4\uffff\1\2\7\uffff\1\21\1\11\1\1\1\uffff\1\14\1\17\35"+
            "\uffff\1\1\1\12\130\uffff\1\3\2\uffff\3\4\1\uffff\1\5\1\6\1"+
            "\7\1\10\1\13\1\20\1\15\1\uffff\1\16\1\uffff\1\22\1\23\1\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
    static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
    static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
    static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
    static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
    static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
    static final short[][] DFA76_transition;

    static {
        int numStates = DFA76_transitionS.length;
        DFA76_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = DFA76_eot;
            this.eof = DFA76_eof;
            this.min = DFA76_min;
            this.max = DFA76_max;
            this.accept = DFA76_accept;
            this.special = DFA76_special;
            this.transition = DFA76_transition;
        }
        public String getDescription() {
            return "515:1: statement_or_null : ( ( statement )=> statement | SEMI );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_0 = input.LA(1);

                         
                        int index76_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA76_0==IDENTIFIER||LA76_0==ESCAPED_IDENTIFIER) && (synpred6_VerilogA())) {s = 1;}

                        else if ( (LA76_0==LCURLY) && (synpred6_VerilogA())) {s = 2;}

                        else if ( (LA76_0==142) && (synpred6_VerilogA())) {s = 3;}

                        else if ( ((LA76_0>=145 && LA76_0<=147)) && (synpred6_VerilogA())) {s = 4;}

                        else if ( (LA76_0==149) && (synpred6_VerilogA())) {s = 5;}

                        else if ( (LA76_0==150) && (synpred6_VerilogA())) {s = 6;}

                        else if ( (LA76_0==151) && (synpred6_VerilogA())) {s = 7;}

                        else if ( (LA76_0==152) && (synpred6_VerilogA())) {s = 8;}

                        else if ( (LA76_0==POUND) && (synpred6_VerilogA())) {s = 9;}

                        else if ( (LA76_0==AT) && (synpred6_VerilogA())) {s = 10;}

                        else if ( (LA76_0==153) && (synpred6_VerilogA())) {s = 11;}

                        else if ( (LA76_0==TRIGGER) && (synpred6_VerilogA())) {s = 12;}

                        else if ( (LA76_0==155) && (synpred6_VerilogA())) {s = 13;}

                        else if ( (LA76_0==157) && (synpred6_VerilogA())) {s = 14;}

                        else if ( (LA76_0==SYSTEM_TASK_NAME) && (synpred6_VerilogA())) {s = 15;}

                        else if ( (LA76_0==154) && (synpred6_VerilogA())) {s = 16;}

                        else if ( (LA76_0==KW_ASSIGN) && (synpred6_VerilogA())) {s = 17;}

                        else if ( (LA76_0==159) && (synpred6_VerilogA())) {s = 18;}

                        else if ( (LA76_0==160) && (synpred6_VerilogA())) {s = 19;}

                        else if ( (LA76_0==161) && (synpred6_VerilogA())) {s = 20;}

                        else if ( (LA76_0==SEMI) ) {s = 21;}

                         
                        input.seek(index76_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA77_eotS =
        "\141\uffff";
    static final String DFA77_eofS =
        "\141\uffff";
    static final String DFA77_minS =
        "\1\11\1\4\1\5\22\uffff\1\23\1\5\4\uffff\2\6\3\5\1\6\2\5\76\0";
    static final String DFA77_maxS =
        "\1\u00a1\1\24\1\64\22\uffff\2\64\4\uffff\4\63\1\64\1\63\2\64\76"+
        "\0";
    static final String DFA77_acceptS =
        "\3\uffff\1\3\1\4\1\5\3\uffff\1\6\1\uffff\1\7\1\10\1\11\1\12\1\14"+
        "\1\15\1\16\5\uffff\1\1\1\2\1\13\107\uffff";
    static final String DFA77_specialS =
        "\1\uffff\1\0\41\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
        "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44"+
        "\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61"+
        "\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76}>";
    static final String[] DFA77_transitionS = {
            "\1\2\7\uffff\1\21\1\11\1\1\1\uffff\1\14\1\17\35\uffff\1\1\1"+
            "\11\130\uffff\1\3\2\uffff\3\4\1\uffff\4\5\1\13\1\20\1\15\1\uffff"+
            "\1\16\1\uffff\3\21",
            "\2\31\2\uffff\1\25\2\uffff\1\26\2\uffff\1\27\5\uffff\1\30",
            "\1\41\3\uffff\1\37\5\uffff\1\34\3\uffff\1\35\2\uffff\1\36"+
            "\2\uffff\2\42\1\33\1\40\1\uffff\10\42\16\uffff\1\35",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\43\40\uffff\1\43",
            "\1\52\3\uffff\1\50\5\uffff\1\45\3\uffff\1\46\2\uffff\1\47"+
            "\2\uffff\2\53\1\44\1\51\1\uffff\10\53\16\uffff\1\46",
            "",
            "",
            "",
            "",
            "\1\57\2\uffff\1\56\1\60\11\uffff\1\54\4\uffff\2\54\2\uffff"+
            "\1\55\2\uffff\1\54\1\uffff\1\54\1\uffff\20\54",
            "\1\64\2\uffff\1\63\1\65\11\uffff\1\61\4\uffff\2\61\2\uffff"+
            "\1\62\2\uffff\1\61\1\uffff\1\61\1\uffff\20\61",
            "\1\66\1\74\1\uffff\1\67\1\73\1\75\1\70\10\uffff\1\71\4\uffff"+
            "\2\71\2\uffff\1\72\2\uffff\1\71\1\uffff\1\71\1\uffff\20\71",
            "\1\76\1\102\2\uffff\1\101\1\103\11\uffff\1\77\4\uffff\2\77"+
            "\2\uffff\1\100\2\uffff\1\77\1\uffff\1\77\1\uffff\20\77",
            "\1\112\3\uffff\1\110\5\uffff\1\105\3\uffff\1\106\2\uffff\1"+
            "\107\2\uffff\2\113\1\104\1\111\1\uffff\10\113\16\uffff\1\106",
            "\1\117\2\uffff\1\116\1\120\11\uffff\1\114\4\uffff\2\114\2"+
            "\uffff\1\115\2\uffff\1\114\1\uffff\1\114\1\uffff\20\114",
            "\1\127\3\uffff\1\125\5\uffff\1\122\3\uffff\1\123\2\uffff\1"+
            "\124\2\uffff\2\130\1\121\1\126\1\uffff\10\130\16\uffff\1\123",
            "\1\137\3\uffff\1\135\5\uffff\1\132\3\uffff\1\133\2\uffff\1"+
            "\134\2\uffff\2\140\1\131\1\136\1\uffff\10\140\16\uffff\1\133",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA77_eot = DFA.unpackEncodedString(DFA77_eotS);
    static final short[] DFA77_eof = DFA.unpackEncodedString(DFA77_eofS);
    static final char[] DFA77_min = DFA.unpackEncodedStringToUnsignedChars(DFA77_minS);
    static final char[] DFA77_max = DFA.unpackEncodedStringToUnsignedChars(DFA77_maxS);
    static final short[] DFA77_accept = DFA.unpackEncodedString(DFA77_acceptS);
    static final short[] DFA77_special = DFA.unpackEncodedString(DFA77_specialS);
    static final short[][] DFA77_transition;

    static {
        int numStates = DFA77_transitionS.length;
        DFA77_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA77_transition[i] = DFA.unpackEncodedString(DFA77_transitionS[i]);
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = DFA77_eot;
            this.eof = DFA77_eof;
            this.min = DFA77_min;
            this.max = DFA77_max;
            this.accept = DFA77_accept;
            this.special = DFA77_special;
            this.transition = DFA77_transition;
        }
        public String getDescription() {
            return "520:1: statement : ( ( lvalue ASSIGN )=> blocking_assignment SEMI | ( lvalue LE )=> non_blocking_assignment SEMI | conditional_statement | case_statement | loop_statement | procedural_timing_control_statement | wait_statement | event_trigger | seq_block | par_block | task_enable | system_task_enable | disable_statement | procedural_continuous_assignment );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA77_1==DOT) ) {s = 21;}

                        else if ( (LA77_1==LBRACK) ) {s = 22;}

                        else if ( (LA77_1==ASSIGN) && (synpred7_VerilogA())) {s = 23;}

                        else if ( (LA77_1==LE) && (synpred8_VerilogA())) {s = 24;}

                        else if ( ((LA77_1>=SEMI && LA77_1<=LPAREN)) ) {s = 25;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_35 = input.LA(1);

                         
                        int index77_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_35);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_36 = input.LA(1);

                         
                        int index77_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_36);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_37 = input.LA(1);

                         
                        int index77_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_37);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_38 = input.LA(1);

                         
                        int index77_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_38);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_39 = input.LA(1);

                         
                        int index77_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_39);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA77_40 = input.LA(1);

                         
                        int index77_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_40);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA77_41 = input.LA(1);

                         
                        int index77_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_41);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA77_42 = input.LA(1);

                         
                        int index77_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_42);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA77_43 = input.LA(1);

                         
                        int index77_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_43);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA77_44 = input.LA(1);

                         
                        int index77_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_44);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA77_45 = input.LA(1);

                         
                        int index77_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_45);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA77_46 = input.LA(1);

                         
                        int index77_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_46);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA77_47 = input.LA(1);

                         
                        int index77_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_47);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA77_48 = input.LA(1);

                         
                        int index77_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_48);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA77_49 = input.LA(1);

                         
                        int index77_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_49);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA77_50 = input.LA(1);

                         
                        int index77_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_50);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA77_51 = input.LA(1);

                         
                        int index77_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_51);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA77_52 = input.LA(1);

                         
                        int index77_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_52);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA77_53 = input.LA(1);

                         
                        int index77_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_53);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA77_54 = input.LA(1);

                         
                        int index77_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_54);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA77_55 = input.LA(1);

                         
                        int index77_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_55);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA77_56 = input.LA(1);

                         
                        int index77_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_56);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA77_57 = input.LA(1);

                         
                        int index77_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_57);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA77_58 = input.LA(1);

                         
                        int index77_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_58);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA77_59 = input.LA(1);

                         
                        int index77_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_59);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA77_60 = input.LA(1);

                         
                        int index77_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_60);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA77_61 = input.LA(1);

                         
                        int index77_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_61);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA77_62 = input.LA(1);

                         
                        int index77_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_62);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA77_63 = input.LA(1);

                         
                        int index77_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_63);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA77_64 = input.LA(1);

                         
                        int index77_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_64);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA77_65 = input.LA(1);

                         
                        int index77_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_65);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA77_66 = input.LA(1);

                         
                        int index77_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_66);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA77_67 = input.LA(1);

                         
                        int index77_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_67);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA77_68 = input.LA(1);

                         
                        int index77_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_68);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA77_69 = input.LA(1);

                         
                        int index77_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_69);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA77_70 = input.LA(1);

                         
                        int index77_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_70);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA77_71 = input.LA(1);

                         
                        int index77_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_71);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA77_72 = input.LA(1);

                         
                        int index77_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_72);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA77_73 = input.LA(1);

                         
                        int index77_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_73);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA77_74 = input.LA(1);

                         
                        int index77_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_74);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA77_75 = input.LA(1);

                         
                        int index77_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_75);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA77_76 = input.LA(1);

                         
                        int index77_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_76);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA77_77 = input.LA(1);

                         
                        int index77_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_77);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA77_78 = input.LA(1);

                         
                        int index77_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_78);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA77_79 = input.LA(1);

                         
                        int index77_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_79);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA77_80 = input.LA(1);

                         
                        int index77_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_80);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA77_81 = input.LA(1);

                         
                        int index77_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_81);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA77_82 = input.LA(1);

                         
                        int index77_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_82);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA77_83 = input.LA(1);

                         
                        int index77_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_83);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA77_84 = input.LA(1);

                         
                        int index77_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_84);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA77_85 = input.LA(1);

                         
                        int index77_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_85);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA77_86 = input.LA(1);

                         
                        int index77_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_86);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA77_87 = input.LA(1);

                         
                        int index77_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_87);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA77_88 = input.LA(1);

                         
                        int index77_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_88);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA77_89 = input.LA(1);

                         
                        int index77_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_89);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA77_90 = input.LA(1);

                         
                        int index77_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_90);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA77_91 = input.LA(1);

                         
                        int index77_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_91);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA77_92 = input.LA(1);

                         
                        int index77_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_92);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA77_93 = input.LA(1);

                         
                        int index77_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_93);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA77_94 = input.LA(1);

                         
                        int index77_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_94);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA77_95 = input.LA(1);

                         
                        int index77_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_95);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA77_96 = input.LA(1);

                         
                        int index77_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_VerilogA()) ) {s = 23;}

                        else if ( (synpred8_VerilogA()) ) {s = 24;}

                         
                        input.seek(index77_96);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA78_eotS =
        "\13\uffff";
    static final String DFA78_eofS =
        "\13\uffff";
    static final String DFA78_minS =
        "\1\5\12\uffff";
    static final String DFA78_maxS =
        "\1\65\12\uffff";
    static final String DFA78_acceptS =
        "\1\uffff\1\1\1\uffff\1\2\7\uffff";
    static final String DFA78_specialS =
        "\13\uffff}>";
    static final String[] DFA78_transitionS = {
            "\1\3\3\uffff\1\3\5\uffff\1\3\2\uffff\1\1\1\3\2\uffff\1\3\2"+
            "\uffff\4\3\1\uffff\10\3\16\uffff\1\3\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA78_eot = DFA.unpackEncodedString(DFA78_eotS);
    static final short[] DFA78_eof = DFA.unpackEncodedString(DFA78_eofS);
    static final char[] DFA78_min = DFA.unpackEncodedStringToUnsignedChars(DFA78_minS);
    static final char[] DFA78_max = DFA.unpackEncodedStringToUnsignedChars(DFA78_maxS);
    static final short[] DFA78_accept = DFA.unpackEncodedString(DFA78_acceptS);
    static final short[] DFA78_special = DFA.unpackEncodedString(DFA78_specialS);
    static final short[][] DFA78_transition;

    static {
        int numStates = DFA78_transitionS.length;
        DFA78_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA78_transition[i] = DFA.unpackEncodedString(DFA78_transitionS[i]);
        }
    }

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = DFA78_eot;
            this.eof = DFA78_eof;
            this.min = DFA78_min;
            this.max = DFA78_max;
            this.accept = DFA78_accept;
            this.special = DFA78_special;
            this.transition = DFA78_transition;
        }
        public String getDescription() {
            return "547:23: ( delay_or_event_control )?";
        }
    }
    static final String DFA79_eotS =
        "\13\uffff";
    static final String DFA79_eofS =
        "\13\uffff";
    static final String DFA79_minS =
        "\1\5\12\uffff";
    static final String DFA79_maxS =
        "\1\65\12\uffff";
    static final String DFA79_acceptS =
        "\1\uffff\1\1\1\uffff\1\2\7\uffff";
    static final String DFA79_specialS =
        "\13\uffff}>";
    static final String[] DFA79_transitionS = {
            "\1\3\3\uffff\1\3\5\uffff\1\3\2\uffff\1\1\1\3\2\uffff\1\3\2"+
            "\uffff\4\3\1\uffff\10\3\16\uffff\1\3\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA79_eot = DFA.unpackEncodedString(DFA79_eotS);
    static final short[] DFA79_eof = DFA.unpackEncodedString(DFA79_eofS);
    static final char[] DFA79_min = DFA.unpackEncodedStringToUnsignedChars(DFA79_minS);
    static final char[] DFA79_max = DFA.unpackEncodedStringToUnsignedChars(DFA79_maxS);
    static final short[] DFA79_accept = DFA.unpackEncodedString(DFA79_acceptS);
    static final short[] DFA79_special = DFA.unpackEncodedString(DFA79_specialS);
    static final short[][] DFA79_transition;

    static {
        int numStates = DFA79_transitionS.length;
        DFA79_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA79_transition[i] = DFA.unpackEncodedString(DFA79_transitionS[i]);
        }
    }

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = DFA79_eot;
            this.eof = DFA79_eof;
            this.min = DFA79_min;
            this.max = DFA79_max;
            this.accept = DFA79_accept;
            this.special = DFA79_special;
            this.transition = DFA79_transition;
        }
        public String getDescription() {
            return "551:19: ( delay_or_event_control )?";
        }
    }
    static final String DFA80_eotS =
        "\66\uffff";
    static final String DFA80_eofS =
        "\1\2\65\uffff";
    static final String DFA80_minS =
        "\1\5\65\uffff";
    static final String DFA80_maxS =
        "\1\u00b3\65\uffff";
    static final String DFA80_acceptS =
        "\1\uffff\1\1\1\2\63\uffff";
    static final String DFA80_specialS =
        "\66\uffff}>";
    static final String[] DFA80_transitionS = {
            "\1\2\3\uffff\1\2\5\uffff\5\2\1\uffff\2\2\2\uffff\4\2\1\uffff"+
            "\10\2\16\uffff\2\2\17\uffff\1\2\2\uffff\1\2\5\uffff\24\2\2\uffff"+
            "\4\2\13\uffff\34\2\1\1\23\2\17\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA80_eot = DFA.unpackEncodedString(DFA80_eotS);
    static final short[] DFA80_eof = DFA.unpackEncodedString(DFA80_eofS);
    static final char[] DFA80_min = DFA.unpackEncodedStringToUnsignedChars(DFA80_minS);
    static final char[] DFA80_max = DFA.unpackEncodedStringToUnsignedChars(DFA80_maxS);
    static final short[] DFA80_accept = DFA.unpackEncodedString(DFA80_acceptS);
    static final short[] DFA80_special = DFA.unpackEncodedString(DFA80_specialS);
    static final short[][] DFA80_transition;

    static {
        int numStates = DFA80_transitionS.length;
        DFA80_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA80_transition[i] = DFA.unpackEncodedString(DFA80_transitionS[i]);
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = DFA80_eot;
            this.eof = DFA80_eof;
            this.min = DFA80_min;
            this.max = DFA80_max;
            this.accept = DFA80_accept;
            this.special = DFA80_special;
            this.transition = DFA80_transition;
        }
        public String getDescription() {
            return "558:9: ( 'else' statement_or_null )?";
        }
    }
    static final String DFA81_eotS =
        "\13\uffff";
    static final String DFA81_eofS =
        "\13\uffff";
    static final String DFA81_minS =
        "\1\5\12\uffff";
    static final String DFA81_maxS =
        "\1\u0094\12\uffff";
    static final String DFA81_acceptS =
        "\1\uffff\1\2\1\1\10\uffff";
    static final String DFA81_specialS =
        "\13\uffff}>";
    static final String[] DFA81_transitionS = {
            "\1\2\3\uffff\1\2\5\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff"+
            "\4\2\1\uffff\10\2\16\uffff\1\2\133\uffff\1\1\3\uffff\1\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
    static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
    static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
    static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
    static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
    static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
    static final short[][] DFA81_transition;

    static {
        int numStates = DFA81_transitionS.length;
        DFA81_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = DFA81_eot;
            this.eof = DFA81_eof;
            this.min = DFA81_min;
            this.max = DFA81_max;
            this.accept = DFA81_accept;
            this.special = DFA81_special;
            this.transition = DFA81_transition;
        }
        public String getDescription() {
            return "()+ loopback of 562:47: ( case_item )+";
        }
    }
    static final String DFA84_eotS =
        "\12\uffff";
    static final String DFA84_eofS =
        "\12\uffff";
    static final String DFA84_minS =
        "\1\5\11\uffff";
    static final String DFA84_maxS =
        "\1\u0094\11\uffff";
    static final String DFA84_acceptS =
        "\1\uffff\1\1\7\uffff\1\2";
    static final String DFA84_specialS =
        "\12\uffff}>";
    static final String[] DFA84_transitionS = {
            "\1\1\3\uffff\1\1\5\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff"+
            "\4\1\1\uffff\10\1\16\uffff\1\1\137\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA84_eot = DFA.unpackEncodedString(DFA84_eotS);
    static final short[] DFA84_eof = DFA.unpackEncodedString(DFA84_eofS);
    static final char[] DFA84_min = DFA.unpackEncodedStringToUnsignedChars(DFA84_minS);
    static final char[] DFA84_max = DFA.unpackEncodedStringToUnsignedChars(DFA84_maxS);
    static final short[] DFA84_accept = DFA.unpackEncodedString(DFA84_acceptS);
    static final short[] DFA84_special = DFA.unpackEncodedString(DFA84_specialS);
    static final short[][] DFA84_transition;

    static {
        int numStates = DFA84_transitionS.length;
        DFA84_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA84_transition[i] = DFA.unpackEncodedString(DFA84_transitionS[i]);
        }
    }

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = DFA84_eot;
            this.eof = DFA84_eof;
            this.min = DFA84_min;
            this.max = DFA84_max;
            this.accept = DFA84_accept;
            this.special = DFA84_special;
            this.transition = DFA84_transition;
        }
        public String getDescription() {
            return "569:1: case_item : ( expression ( COMMA expression )* COLON statement_or_null | 'default' ( COLON )? statement_or_null );";
        }
    }
    static final String DFA83_eotS =
        "\27\uffff";
    static final String DFA83_eofS =
        "\27\uffff";
    static final String DFA83_minS =
        "\1\4\26\uffff";
    static final String DFA83_maxS =
        "\1\u00a1\26\uffff";
    static final String DFA83_acceptS =
        "\1\uffff\1\1\1\2\24\uffff";
    static final String DFA83_specialS =
        "\27\uffff}>";
    static final String[] DFA83_transitionS = {
            "\1\2\4\uffff\1\2\2\uffff\1\1\4\uffff\3\2\1\uffff\2\2\35\uffff"+
            "\2\2\130\uffff\1\2\2\uffff\3\2\1\uffff\7\2\1\uffff\1\2\1\uffff"+
            "\3\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA.unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA.unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA.unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = DFA83_eot;
            this.eof = DFA83_eof;
            this.min = DFA83_min;
            this.max = DFA83_max;
            this.accept = DFA83_accept;
            this.special = DFA83_special;
            this.transition = DFA83_transition;
        }
        public String getDescription() {
            return "571:19: ( COLON )?";
        }
    }
    static final String DFA87_eotS =
        "\27\uffff";
    static final String DFA87_eofS =
        "\27\uffff";
    static final String DFA87_minS =
        "\1\11\26\uffff";
    static final String DFA87_maxS =
        "\1\u00a1\26\uffff";
    static final String DFA87_acceptS =
        "\1\uffff\1\1\1\2\24\uffff";
    static final String DFA87_specialS =
        "\27\uffff}>";
    static final String[] DFA87_transitionS = {
            "\1\2\2\uffff\1\1\4\uffff\3\2\1\uffff\2\2\35\uffff\2\2\130\uffff"+
            "\1\2\2\uffff\3\2\1\uffff\11\2\1\uffff\3\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
    static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
    static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
    static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
    static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
    static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
    static final short[][] DFA87_transition;

    static {
        int numStates = DFA87_transitionS.length;
        DFA87_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = DFA87_eot;
            this.eof = DFA87_eof;
            this.min = DFA87_min;
            this.max = DFA87_max;
            this.accept = DFA87_accept;
            this.special = DFA87_special;
            this.transition = DFA87_transition;
        }
        public String getDescription() {
            return "599:9: ( COLON name_of_block ( block_declaration )* )?";
        }
    }
    static final String DFA86_eotS =
        "\34\uffff";
    static final String DFA86_eofS =
        "\34\uffff";
    static final String DFA86_minS =
        "\1\11\33\uffff";
    static final String DFA86_maxS =
        "\1\u00a1\33\uffff";
    static final String DFA86_acceptS =
        "\1\uffff\1\2\24\uffff\1\1\5\uffff";
    static final String DFA86_specialS =
        "\34\uffff}>";
    static final String[] DFA86_transitionS = {
            "\1\1\7\uffff\3\1\1\uffff\2\1\35\uffff\2\1\34\uffff\3\26\17"+
            "\uffff\3\26\47\uffff\1\1\2\uffff\3\1\1\uffff\11\1\1\uffff\3"+
            "\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA86_eot = DFA.unpackEncodedString(DFA86_eotS);
    static final short[] DFA86_eof = DFA.unpackEncodedString(DFA86_eofS);
    static final char[] DFA86_min = DFA.unpackEncodedStringToUnsignedChars(DFA86_minS);
    static final char[] DFA86_max = DFA.unpackEncodedStringToUnsignedChars(DFA86_maxS);
    static final short[] DFA86_accept = DFA.unpackEncodedString(DFA86_acceptS);
    static final short[] DFA86_special = DFA.unpackEncodedString(DFA86_specialS);
    static final short[][] DFA86_transition;

    static {
        int numStates = DFA86_transitionS.length;
        DFA86_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA86_transition[i] = DFA.unpackEncodedString(DFA86_transitionS[i]);
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = DFA86_eot;
            this.eof = DFA86_eof;
            this.min = DFA86_min;
            this.max = DFA86_max;
            this.accept = DFA86_accept;
            this.special = DFA86_special;
            this.transition = DFA86_transition;
        }
        public String getDescription() {
            return "()* loopback of 599:31: ( block_declaration )*";
        }
    }
    static final String DFA88_eotS =
        "\26\uffff";
    static final String DFA88_eofS =
        "\26\uffff";
    static final String DFA88_minS =
        "\1\11\25\uffff";
    static final String DFA88_maxS =
        "\1\u00a1\25\uffff";
    static final String DFA88_acceptS =
        "\1\uffff\1\2\1\1\23\uffff";
    static final String DFA88_specialS =
        "\26\uffff}>";
    static final String[] DFA88_transitionS = {
            "\1\2\7\uffff\3\2\1\uffff\2\2\35\uffff\2\2\130\uffff\1\2\2\uffff"+
            "\3\2\1\uffff\7\2\1\1\1\2\1\uffff\3\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA88_eot = DFA.unpackEncodedString(DFA88_eotS);
    static final short[] DFA88_eof = DFA.unpackEncodedString(DFA88_eofS);
    static final char[] DFA88_min = DFA.unpackEncodedStringToUnsignedChars(DFA88_minS);
    static final char[] DFA88_max = DFA.unpackEncodedStringToUnsignedChars(DFA88_maxS);
    static final short[] DFA88_accept = DFA.unpackEncodedString(DFA88_acceptS);
    static final short[] DFA88_special = DFA.unpackEncodedString(DFA88_specialS);
    static final short[][] DFA88_transition;

    static {
        int numStates = DFA88_transitionS.length;
        DFA88_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA88_transition[i] = DFA.unpackEncodedString(DFA88_transitionS[i]);
        }
    }

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = DFA88_eot;
            this.eof = DFA88_eof;
            this.min = DFA88_min;
            this.max = DFA88_max;
            this.accept = DFA88_accept;
            this.special = DFA88_special;
            this.transition = DFA88_transition;
        }
        public String getDescription() {
            return "()* loopback of 600:9: ( statement )*";
        }
    }
    static final String DFA90_eotS =
        "\27\uffff";
    static final String DFA90_eofS =
        "\27\uffff";
    static final String DFA90_minS =
        "\1\11\26\uffff";
    static final String DFA90_maxS =
        "\1\u00a1\26\uffff";
    static final String DFA90_acceptS =
        "\1\uffff\1\1\1\2\24\uffff";
    static final String DFA90_specialS =
        "\27\uffff}>";
    static final String[] DFA90_transitionS = {
            "\1\2\2\uffff\1\1\4\uffff\3\2\1\uffff\2\2\35\uffff\2\2\130\uffff"+
            "\1\2\2\uffff\3\2\1\uffff\7\2\1\uffff\5\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA90_eot = DFA.unpackEncodedString(DFA90_eotS);
    static final short[] DFA90_eof = DFA.unpackEncodedString(DFA90_eofS);
    static final char[] DFA90_min = DFA.unpackEncodedStringToUnsignedChars(DFA90_minS);
    static final char[] DFA90_max = DFA.unpackEncodedStringToUnsignedChars(DFA90_maxS);
    static final short[] DFA90_accept = DFA.unpackEncodedString(DFA90_acceptS);
    static final short[] DFA90_special = DFA.unpackEncodedString(DFA90_specialS);
    static final short[][] DFA90_transition;

    static {
        int numStates = DFA90_transitionS.length;
        DFA90_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA90_transition[i] = DFA.unpackEncodedString(DFA90_transitionS[i]);
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = DFA90_eot;
            this.eof = DFA90_eof;
            this.min = DFA90_min;
            this.max = DFA90_max;
            this.accept = DFA90_accept;
            this.special = DFA90_special;
            this.transition = DFA90_transition;
        }
        public String getDescription() {
            return "606:9: ( COLON name_of_block ( block_declaration )* )?";
        }
    }
    static final String DFA89_eotS =
        "\34\uffff";
    static final String DFA89_eofS =
        "\34\uffff";
    static final String DFA89_minS =
        "\1\11\33\uffff";
    static final String DFA89_maxS =
        "\1\u00a1\33\uffff";
    static final String DFA89_acceptS =
        "\1\uffff\1\2\24\uffff\1\1\5\uffff";
    static final String DFA89_specialS =
        "\34\uffff}>";
    static final String[] DFA89_transitionS = {
            "\1\1\7\uffff\3\1\1\uffff\2\1\35\uffff\2\1\34\uffff\3\26\17"+
            "\uffff\3\26\47\uffff\1\1\2\uffff\3\1\1\uffff\7\1\1\uffff\5\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA89_eot = DFA.unpackEncodedString(DFA89_eotS);
    static final short[] DFA89_eof = DFA.unpackEncodedString(DFA89_eofS);
    static final char[] DFA89_min = DFA.unpackEncodedStringToUnsignedChars(DFA89_minS);
    static final char[] DFA89_max = DFA.unpackEncodedStringToUnsignedChars(DFA89_maxS);
    static final short[] DFA89_accept = DFA.unpackEncodedString(DFA89_acceptS);
    static final short[] DFA89_special = DFA.unpackEncodedString(DFA89_specialS);
    static final short[][] DFA89_transition;

    static {
        int numStates = DFA89_transitionS.length;
        DFA89_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA89_transition[i] = DFA.unpackEncodedString(DFA89_transitionS[i]);
        }
    }

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = DFA89_eot;
            this.eof = DFA89_eof;
            this.min = DFA89_min;
            this.max = DFA89_max;
            this.accept = DFA89_accept;
            this.special = DFA89_special;
            this.transition = DFA89_transition;
        }
        public String getDescription() {
            return "()* loopback of 606:31: ( block_declaration )*";
        }
    }
    static final String DFA91_eotS =
        "\26\uffff";
    static final String DFA91_eofS =
        "\26\uffff";
    static final String DFA91_minS =
        "\1\11\25\uffff";
    static final String DFA91_maxS =
        "\1\u00a1\25\uffff";
    static final String DFA91_acceptS =
        "\1\uffff\1\2\1\1\23\uffff";
    static final String DFA91_specialS =
        "\26\uffff}>";
    static final String[] DFA91_transitionS = {
            "\1\2\7\uffff\3\2\1\uffff\2\2\35\uffff\2\2\130\uffff\1\2\2\uffff"+
            "\3\2\1\uffff\7\2\1\uffff\1\2\1\1\3\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA91_eot = DFA.unpackEncodedString(DFA91_eotS);
    static final short[] DFA91_eof = DFA.unpackEncodedString(DFA91_eofS);
    static final char[] DFA91_min = DFA.unpackEncodedStringToUnsignedChars(DFA91_minS);
    static final char[] DFA91_max = DFA.unpackEncodedStringToUnsignedChars(DFA91_maxS);
    static final short[] DFA91_accept = DFA.unpackEncodedString(DFA91_acceptS);
    static final short[] DFA91_special = DFA.unpackEncodedString(DFA91_specialS);
    static final short[][] DFA91_transition;

    static {
        int numStates = DFA91_transitionS.length;
        DFA91_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA91_transition[i] = DFA.unpackEncodedString(DFA91_transitionS[i]);
        }
    }

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = DFA91_eot;
            this.eof = DFA91_eof;
            this.min = DFA91_min;
            this.max = DFA91_max;
            this.accept = DFA91_accept;
            this.special = DFA91_special;
            this.transition = DFA91_transition;
        }
        public String getDescription() {
            return "()* loopback of 607:9: ( statement )*";
        }
    }
    static final String DFA93_eotS =
        "\13\uffff";
    static final String DFA93_eofS =
        "\13\uffff";
    static final String DFA93_minS =
        "\1\5\12\uffff";
    static final String DFA93_maxS =
        "\1\64\12\uffff";
    static final String DFA93_acceptS =
        "\1\uffff\1\1\7\uffff\1\2\1\uffff";
    static final String DFA93_specialS =
        "\13\uffff}>";
    static final String[] DFA93_transitionS = {
            "\1\1\2\11\1\uffff\1\1\5\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2"+
            "\uffff\4\1\1\uffff\10\1\16\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA93_eot = DFA.unpackEncodedString(DFA93_eotS);
    static final short[] DFA93_eof = DFA.unpackEncodedString(DFA93_eofS);
    static final char[] DFA93_min = DFA.unpackEncodedStringToUnsignedChars(DFA93_minS);
    static final char[] DFA93_max = DFA.unpackEncodedStringToUnsignedChars(DFA93_maxS);
    static final short[] DFA93_accept = DFA.unpackEncodedString(DFA93_acceptS);
    static final short[] DFA93_special = DFA.unpackEncodedString(DFA93_specialS);
    static final short[][] DFA93_transition;

    static {
        int numStates = DFA93_transitionS.length;
        DFA93_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA93_transition[i] = DFA.unpackEncodedString(DFA93_transitionS[i]);
        }
    }

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = DFA93_eot;
            this.eof = DFA93_eof;
            this.min = DFA93_min;
            this.max = DFA93_max;
            this.accept = DFA93_accept;
            this.special = DFA93_special;
            this.transition = DFA93_transition;
        }
        public String getDescription() {
            return "621:49: ( expression )?";
        }
    }
    static final String DFA96_eotS =
        "\13\uffff";
    static final String DFA96_eofS =
        "\13\uffff";
    static final String DFA96_minS =
        "\1\5\12\uffff";
    static final String DFA96_maxS =
        "\1\64\12\uffff";
    static final String DFA96_acceptS =
        "\1\uffff\1\1\7\uffff\1\2\1\uffff";
    static final String DFA96_specialS =
        "\13\uffff}>";
    static final String[] DFA96_transitionS = {
            "\1\1\2\11\1\uffff\1\1\5\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2"+
            "\uffff\4\1\1\uffff\10\1\16\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA96_eot = DFA.unpackEncodedString(DFA96_eotS);
    static final short[] DFA96_eof = DFA.unpackEncodedString(DFA96_eofS);
    static final char[] DFA96_min = DFA.unpackEncodedStringToUnsignedChars(DFA96_minS);
    static final char[] DFA96_max = DFA.unpackEncodedStringToUnsignedChars(DFA96_maxS);
    static final short[] DFA96_accept = DFA.unpackEncodedString(DFA96_acceptS);
    static final short[] DFA96_special = DFA.unpackEncodedString(DFA96_specialS);
    static final short[][] DFA96_transition;

    static {
        int numStates = DFA96_transitionS.length;
        DFA96_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA96_transition[i] = DFA.unpackEncodedString(DFA96_transitionS[i]);
        }
    }

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = DFA96_eot;
            this.eof = DFA96_eof;
            this.min = DFA96_min;
            this.max = DFA96_max;
            this.accept = DFA96_accept;
            this.special = DFA96_special;
            this.transition = DFA96_transition;
        }
        public String getDescription() {
            return "626:53: ( expression )?";
        }
    }
    static final String DFA101_eotS =
        "\14\uffff";
    static final String DFA101_eofS =
        "\14\uffff";
    static final String DFA101_minS =
        "\1\5\13\uffff";
    static final String DFA101_maxS =
        "\1\u00ab\13\uffff";
    static final String DFA101_acceptS =
        "\1\uffff\1\2\1\1\11\uffff";
    static final String DFA101_specialS =
        "\14\uffff}>";
    static final String[] DFA101_transitionS = {
            "\1\2\u0088\uffff\1\2\24\uffff\1\1\10\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA101_eot = DFA.unpackEncodedString(DFA101_eotS);
    static final short[] DFA101_eof = DFA.unpackEncodedString(DFA101_eofS);
    static final char[] DFA101_min = DFA.unpackEncodedStringToUnsignedChars(DFA101_minS);
    static final char[] DFA101_max = DFA.unpackEncodedStringToUnsignedChars(DFA101_maxS);
    static final short[] DFA101_accept = DFA.unpackEncodedString(DFA101_acceptS);
    static final short[] DFA101_special = DFA.unpackEncodedString(DFA101_specialS);
    static final short[][] DFA101_transition;

    static {
        int numStates = DFA101_transitionS.length;
        DFA101_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA101_transition[i] = DFA.unpackEncodedString(DFA101_transitionS[i]);
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = DFA101_eot;
            this.eof = DFA101_eof;
            this.min = DFA101_min;
            this.max = DFA101_max;
            this.accept = DFA101_accept;
            this.special = DFA101_special;
            this.transition = DFA101_transition;
        }
        public String getDescription() {
            return "()* loopback of 647:19: ( specify_item )*";
        }
    }
    static final String DFA102_eotS =
        "\25\uffff";
    static final String DFA102_eofS =
        "\25\uffff";
    static final String DFA102_minS =
        "\1\5\2\uffff\1\5\7\uffff\1\5\10\0\1\uffff";
    static final String DFA102_maxS =
        "\1\u00ab\2\uffff\1\5\7\uffff\1\64\10\0\1\uffff";
    static final String DFA102_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\3\17\uffff\1\4";
    static final String DFA102_specialS =
        "\1\0\13\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff}>";
    static final String[] DFA102_transitionS = {
            "\1\2\u0088\uffff\1\3\25\uffff\1\1\7\4",
            "",
            "",
            "\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\3\uffff\1\20\5\uffff\1\15\3\uffff\1\16\2\uffff\1\17"+
            "\2\uffff\2\23\1\14\1\21\1\uffff\10\23\16\uffff\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA102_eot = DFA.unpackEncodedString(DFA102_eotS);
    static final short[] DFA102_eof = DFA.unpackEncodedString(DFA102_eofS);
    static final char[] DFA102_min = DFA.unpackEncodedStringToUnsignedChars(DFA102_minS);
    static final char[] DFA102_max = DFA.unpackEncodedStringToUnsignedChars(DFA102_maxS);
    static final short[] DFA102_accept = DFA.unpackEncodedString(DFA102_acceptS);
    static final short[] DFA102_special = DFA.unpackEncodedString(DFA102_specialS);
    static final short[][] DFA102_transition;

    static {
        int numStates = DFA102_transitionS.length;
        DFA102_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA102_transition[i] = DFA.unpackEncodedString(DFA102_transitionS[i]);
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = DFA102_eot;
            this.eof = DFA102_eof;
            this.min = DFA102_min;
            this.max = DFA102_max;
            this.accept = DFA102_accept;
            this.special = DFA102_special;
            this.transition = DFA102_transition;
        }
        public String getDescription() {
            return "650:1: specify_item : ( spec_param_declaration | ( path_declaration )=> path_declaration | system_timing_check | sdpd );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_0==164) ) {s = 1;}

                        else if ( (LA102_0==LPAREN) && (synpred9_VerilogA())) {s = 2;}

                        else if ( (LA102_0==142) ) {s = 3;}

                        else if ( ((LA102_0>=165 && LA102_0<=171)) ) {s = 4;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_12 = input.LA(1);

                         
                        int index102_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_13 = input.LA(1);

                         
                        int index102_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA102_14 = input.LA(1);

                         
                        int index102_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA102_15 = input.LA(1);

                         
                        int index102_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA102_16 = input.LA(1);

                         
                        int index102_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA102_17 = input.LA(1);

                         
                        int index102_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA102_18 = input.LA(1);

                         
                        int index102_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA102_19 = input.LA(1);

                         
                        int index102_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_VerilogA()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index102_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA104_eotS =
        "\24\uffff";
    static final String DFA104_eofS =
        "\24\uffff";
    static final String DFA104_minS =
        "\1\5\1\23\1\5\1\6\1\uffff\1\5\3\0\1\uffff\11\0\1\uffff";
    static final String DFA104_maxS =
        "\1\u008e\1\u00ae\1\5\1\30\1\uffff\1\64\3\0\1\uffff\11\0\1\uffff";
    static final String DFA104_acceptS =
        "\4\uffff\1\3\4\uffff\1\1\11\uffff\1\2";
    static final String DFA104_specialS =
        "\3\uffff\1\0\2\uffff\1\1\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1"+
        "\11\1\12\1\13\1\14\1\uffff}>";
    static final String[] DFA104_transitionS = {
            "\1\1\u0088\uffff\1\2",
            "\1\3\40\uffff\1\3\170\uffff\2\4",
            "\1\5",
            "\1\11\1\uffff\1\6\2\uffff\1\7\13\uffff\1\10\1\12",
            "",
            "\1\21\3\uffff\1\17\5\uffff\1\14\3\uffff\1\15\2\uffff\1\16"+
            "\2\uffff\2\22\1\13\1\20\1\uffff\10\22\16\uffff\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
    static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
    static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
    static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
    static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
    static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
    static final short[][] DFA104_transition;

    static {
        int numStates = DFA104_transitionS.length;
        DFA104_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
        }
    }

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = DFA104_eot;
            this.eof = DFA104_eof;
            this.min = DFA104_min;
            this.max = DFA104_max;
            this.accept = DFA104_accept;
            this.special = DFA104_special;
            this.transition = DFA104_transition;
        }
        public String getDescription() {
            return "669:1: path_declaration : ( ( simple_path_declaration )=> simple_path_declaration SEMI | ( level_sensitive_path_declaration )=> level_sensitive_path_declaration SEMI | edge_sensitive_path_declaration SEMI );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_3 = input.LA(1);

                         
                        int index104_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA104_3==DOT) ) {s = 6;}

                        else if ( (LA104_3==LBRACK) ) {s = 7;}

                        else if ( (LA104_3==PPATH) ) {s = 8;}

                        else if ( (LA104_3==COMMA) && (synpred10_VerilogA())) {s = 9;}

                        else if ( (LA104_3==FPATH) ) {s = 10;}

                         
                        input.seek(index104_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA104_6 = input.LA(1);

                         
                        int index104_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_VerilogA()) ) {s = 9;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA104_7 = input.LA(1);

                         
                        int index104_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_VerilogA()) ) {s = 9;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA104_8 = input.LA(1);

                         
                        int index104_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_VerilogA()) ) {s = 9;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA104_10 = input.LA(1);

                         
                        int index104_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_VerilogA()) ) {s = 9;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA104_11 = input.LA(1);

                         
                        int index104_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA104_12 = input.LA(1);

                         
                        int index104_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA104_13 = input.LA(1);

                         
                        int index104_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA104_14 = input.LA(1);

                         
                        int index104_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA104_15 = input.LA(1);

                         
                        int index104_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA104_16 = input.LA(1);

                         
                        int index104_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_16);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA104_17 = input.LA(1);

                         
                        int index104_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_17);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA104_18 = input.LA(1);

                         
                        int index104_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_VerilogA()) ) {s = 19;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA107_eotS =
        "\27\uffff";
    static final String DFA107_eofS =
        "\1\uffff\1\4\25\uffff";
    static final String DFA107_minS =
        "\1\23\1\6\1\23\1\5\10\uffff\11\0\2\uffff";
    static final String DFA107_maxS =
        "\1\64\1\u00ac\2\64\10\uffff\11\0\2\uffff";
    static final String DFA107_acceptS =
        "\4\uffff\1\3\20\uffff\1\1\1\2";
    static final String DFA107_specialS =
        "\14\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\2\uffff}>";
    static final String[] DFA107_transitionS = {
            "\1\1\40\uffff\1\1",
            "\2\4\1\2\2\uffff\1\3\1\4\12\uffff\4\4\u0091\uffff\1\4",
            "\1\14\40\uffff\1\14",
            "\1\23\3\uffff\1\21\5\uffff\1\16\3\uffff\1\17\2\uffff\1\20"+
            "\2\uffff\2\24\1\15\1\22\1\uffff\10\24\16\uffff\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA107_eot = DFA.unpackEncodedString(DFA107_eotS);
    static final short[] DFA107_eof = DFA.unpackEncodedString(DFA107_eofS);
    static final char[] DFA107_min = DFA.unpackEncodedStringToUnsignedChars(DFA107_minS);
    static final char[] DFA107_max = DFA.unpackEncodedStringToUnsignedChars(DFA107_maxS);
    static final short[] DFA107_accept = DFA.unpackEncodedString(DFA107_acceptS);
    static final short[] DFA107_special = DFA.unpackEncodedString(DFA107_specialS);
    static final short[][] DFA107_transition;

    static {
        int numStates = DFA107_transitionS.length;
        DFA107_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA107_transition[i] = DFA.unpackEncodedString(DFA107_transitionS[i]);
        }
    }

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = DFA107_eot;
            this.eof = DFA107_eof;
            this.min = DFA107_min;
            this.max = DFA107_max;
            this.accept = DFA107_accept;
            this.special = DFA107_special;
            this.transition = DFA107_transition;
        }
        public String getDescription() {
            return "695:1: specify_terminal_descriptor : ( ( identifier LBRACK expression COLON )=> identifier LBRACK expression COLON expression RBRACK | ( identifier LBRACK )=> identifier LBRACK expression RBRACK | identifier );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA107_12 = input.LA(1);

                         
                        int index107_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index107_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA107_13 = input.LA(1);

                         
                        int index107_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA107_14 = input.LA(1);

                         
                        int index107_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA107_15 = input.LA(1);

                         
                        int index107_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA107_16 = input.LA(1);

                         
                        int index107_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA107_17 = input.LA(1);

                         
                        int index107_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA107_18 = input.LA(1);

                         
                        int index107_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA107_19 = input.LA(1);

                         
                        int index107_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA107_20 = input.LA(1);

                         
                        int index107_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_VerilogA()) ) {s = 21;}

                        else if ( (synpred14_VerilogA()) ) {s = 22;}

                         
                        input.seek(index107_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 107, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA108_eotS =
        "\106\uffff";
    static final String DFA108_eofS =
        "\106\uffff";
    static final String DFA108_minS =
        "\1\5\6\uffff\1\5\1\uffff\2\6\3\5\1\6\2\5\2\0\3\uffff\2\0\3\uffff"+
        "\5\0\3\uffff\3\0\3\uffff\12\0\3\uffff\20\0";
    static final String DFA108_maxS =
        "\1\64\6\uffff\1\64\1\uffff\4\63\1\64\1\63\2\64\2\0\3\uffff\2\0"+
        "\3\uffff\5\0\3\uffff\3\0\3\uffff\12\0\3\uffff\20\0";
    static final String DFA108_acceptS =
        "\1\uffff\6\1\1\uffff\1\1\12\uffff\1\1\1\2\3\uffff\1\1\7\uffff\1"+
        "\1\5\uffff\1\1\14\uffff\1\1\22\uffff";
    static final String DFA108_specialS =
        "\1\0\10\uffff\1\1\1\2\1\3\1\4\1\uffff\1\5\2\uffff\1\6\1\7\3\uffff"+
        "\1\10\1\11\3\uffff\1\12\1\13\1\14\1\15\1\16\3\uffff\1\17\1\20\1"+
        "\21\3\uffff\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\3"+
        "\uffff\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1"+
        "\47\1\50\1\51\1\52\1\53}>";
    static final String[] DFA108_transitionS = {
            "\1\7\3\uffff\1\5\5\uffff\1\2\3\uffff\1\3\2\uffff\1\4\2\uffff"+
            "\2\10\1\1\1\6\1\uffff\10\10\16\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\17\3\uffff\1\15\5\uffff\1\12\3\uffff\1\13\2\uffff\1\14"+
            "\2\uffff\2\20\1\11\1\16\1\uffff\10\20\16\uffff\1\13",
            "",
            "\1\24\1\23\4\uffff\1\24\7\uffff\1\21\4\uffff\2\21\2\uffff"+
            "\1\22\2\uffff\1\21\1\uffff\1\21\1\uffff\20\21",
            "\1\24\1\30\4\uffff\1\24\7\uffff\1\26\4\uffff\2\26\2\uffff"+
            "\1\27\2\uffff\1\26\1\uffff\1\26\1\uffff\20\26",
            "\1\33\1\24\1\40\1\34\2\uffff\1\35\1\24\7\uffff\1\36\4\uffff"+
            "\2\36\2\uffff\1\37\2\uffff\1\36\1\uffff\1\36\1\uffff\20\36",
            "\1\43\1\24\1\46\4\uffff\1\24\7\uffff\1\44\4\uffff\2\44\2\uffff"+
            "\1\45\2\uffff\1\44\1\uffff\1\44\1\uffff\20\44",
            "\1\57\3\uffff\1\55\5\uffff\1\52\3\uffff\1\53\2\uffff\1\54"+
            "\2\uffff\2\60\1\51\1\56\1\uffff\10\60\16\uffff\1\53",
            "\1\24\1\63\4\uffff\1\24\7\uffff\1\61\4\uffff\2\61\2\uffff"+
            "\1\62\2\uffff\1\61\1\uffff\1\61\1\uffff\20\61",
            "\1\74\3\uffff\1\72\5\uffff\1\67\3\uffff\1\70\2\uffff\1\71"+
            "\2\uffff\2\75\1\66\1\73\1\uffff\10\75\16\uffff\1\70",
            "\1\104\3\uffff\1\102\5\uffff\1\77\3\uffff\1\100\2\uffff\1"+
            "\101\2\uffff\2\105\1\76\1\103\1\uffff\10\105\16\uffff\1\100",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA108_eot = DFA.unpackEncodedString(DFA108_eotS);
    static final short[] DFA108_eof = DFA.unpackEncodedString(DFA108_eofS);
    static final char[] DFA108_min = DFA.unpackEncodedStringToUnsignedChars(DFA108_minS);
    static final char[] DFA108_max = DFA.unpackEncodedStringToUnsignedChars(DFA108_maxS);
    static final short[] DFA108_accept = DFA.unpackEncodedString(DFA108_acceptS);
    static final short[] DFA108_special = DFA.unpackEncodedString(DFA108_specialS);
    static final short[][] DFA108_transition;

    static {
        int numStates = DFA108_transitionS.length;
        DFA108_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA108_transition[i] = DFA.unpackEncodedString(DFA108_transitionS[i]);
        }
    }

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = DFA108_eot;
            this.eof = DFA108_eof;
            this.min = DFA108_min;
            this.max = DFA108_max;
            this.accept = DFA108_accept;
            this.special = DFA108_special;
            this.transition = DFA108_transition;
        }
        public String getDescription() {
            return "703:1: path_delay_value : ( ( path_delay_expression )=> path_delay_expression | LPAREN list_of_path_delay_expressions RPAREN );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_0 = input.LA(1);

                         
                        int index108_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_0==STRING) && (synpred15_VerilogA())) {s = 1;}

                        else if ( (LA108_0==NUMBER) && (synpred15_VerilogA())) {s = 2;}

                        else if ( (LA108_0==IDENTIFIER||LA108_0==ESCAPED_IDENTIFIER) && (synpred15_VerilogA())) {s = 3;}

                        else if ( (LA108_0==SYSTEM_TASK_NAME) && (synpred15_VerilogA())) {s = 4;}

                        else if ( (LA108_0==LCURLY) && (synpred15_VerilogA())) {s = 5;}

                        else if ( (LA108_0==DEFINE) && (synpred15_VerilogA())) {s = 6;}

                        else if ( (LA108_0==LPAREN) ) {s = 7;}

                        else if ( ((LA108_0>=PLUS && LA108_0<=MINUS)||(LA108_0>=LNOT && LA108_0<=BXNOR)) && (synpred15_VerilogA())) {s = 8;}

                         
                        input.seek(index108_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA108_9 = input.LA(1);

                         
                        int index108_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_9==LE||(LA108_9>=PLUS && LA108_9<=MINUS)||LA108_9==BAND||LA108_9==BOR||(LA108_9>=BXOR && LA108_9<=SL)) ) {s = 17;}

                        else if ( (LA108_9==QUESTION) ) {s = 18;}

                        else if ( (LA108_9==RPAREN) && (synpred15_VerilogA())) {s = 19;}

                        else if ( (LA108_9==COMMA||LA108_9==COLON) ) {s = 20;}

                         
                        input.seek(index108_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA108_10 = input.LA(1);

                         
                        int index108_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_10==LE||(LA108_10>=PLUS && LA108_10<=MINUS)||LA108_10==BAND||LA108_10==BOR||(LA108_10>=BXOR && LA108_10<=SL)) ) {s = 22;}

                        else if ( (LA108_10==QUESTION) ) {s = 23;}

                        else if ( (LA108_10==RPAREN) && (synpred15_VerilogA())) {s = 24;}

                        else if ( (LA108_10==COMMA||LA108_10==COLON) ) {s = 20;}

                         
                        input.seek(index108_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA108_11 = input.LA(1);

                         
                        int index108_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_11==LPAREN) ) {s = 27;}

                        else if ( (LA108_11==DOT) ) {s = 28;}

                        else if ( (LA108_11==LBRACK) ) {s = 29;}

                        else if ( (LA108_11==LE||(LA108_11>=PLUS && LA108_11<=MINUS)||LA108_11==BAND||LA108_11==BOR||(LA108_11>=BXOR && LA108_11<=SL)) ) {s = 30;}

                        else if ( (LA108_11==QUESTION) ) {s = 31;}

                        else if ( (LA108_11==RPAREN) && (synpred15_VerilogA())) {s = 32;}

                        else if ( (LA108_11==COMMA||LA108_11==COLON) ) {s = 20;}

                         
                        input.seek(index108_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA108_12 = input.LA(1);

                         
                        int index108_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_12==LPAREN) ) {s = 35;}

                        else if ( (LA108_12==LE||(LA108_12>=PLUS && LA108_12<=MINUS)||LA108_12==BAND||LA108_12==BOR||(LA108_12>=BXOR && LA108_12<=SL)) ) {s = 36;}

                        else if ( (LA108_12==QUESTION) ) {s = 37;}

                        else if ( (LA108_12==RPAREN) && (synpred15_VerilogA())) {s = 38;}

                        else if ( (LA108_12==COMMA||LA108_12==COLON) ) {s = 20;}

                         
                        input.seek(index108_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA108_14 = input.LA(1);

                         
                        int index108_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_14==LE||(LA108_14>=PLUS && LA108_14<=MINUS)||LA108_14==BAND||LA108_14==BOR||(LA108_14>=BXOR && LA108_14<=SL)) ) {s = 49;}

                        else if ( (LA108_14==QUESTION) ) {s = 50;}

                        else if ( (LA108_14==RPAREN) && (synpred15_VerilogA())) {s = 51;}

                        else if ( (LA108_14==COMMA||LA108_14==COLON) ) {s = 20;}

                         
                        input.seek(index108_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA108_17 = input.LA(1);

                         
                        int index108_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA108_18 = input.LA(1);

                         
                        int index108_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA108_22 = input.LA(1);

                         
                        int index108_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_22);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA108_23 = input.LA(1);

                         
                        int index108_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_23);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA108_27 = input.LA(1);

                         
                        int index108_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_27);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA108_28 = input.LA(1);

                         
                        int index108_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_28);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA108_29 = input.LA(1);

                         
                        int index108_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_29);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA108_30 = input.LA(1);

                         
                        int index108_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_30);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA108_31 = input.LA(1);

                         
                        int index108_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_31);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA108_35 = input.LA(1);

                         
                        int index108_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_35);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA108_36 = input.LA(1);

                         
                        int index108_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_36);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA108_37 = input.LA(1);

                         
                        int index108_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_37);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA108_41 = input.LA(1);

                         
                        int index108_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_41);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA108_42 = input.LA(1);

                         
                        int index108_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_42);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA108_43 = input.LA(1);

                         
                        int index108_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_43);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA108_44 = input.LA(1);

                         
                        int index108_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_44);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA108_45 = input.LA(1);

                         
                        int index108_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_45);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA108_46 = input.LA(1);

                         
                        int index108_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_46);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA108_47 = input.LA(1);

                         
                        int index108_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_47);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA108_48 = input.LA(1);

                         
                        int index108_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_48);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA108_49 = input.LA(1);

                         
                        int index108_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_49);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA108_50 = input.LA(1);

                         
                        int index108_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_50);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA108_54 = input.LA(1);

                         
                        int index108_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_54);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA108_55 = input.LA(1);

                         
                        int index108_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_55);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA108_56 = input.LA(1);

                         
                        int index108_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_56);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA108_57 = input.LA(1);

                         
                        int index108_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_57);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA108_58 = input.LA(1);

                         
                        int index108_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_58);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA108_59 = input.LA(1);

                         
                        int index108_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_59);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA108_60 = input.LA(1);

                         
                        int index108_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_60);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA108_61 = input.LA(1);

                         
                        int index108_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_61);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA108_62 = input.LA(1);

                         
                        int index108_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_62);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA108_63 = input.LA(1);

                         
                        int index108_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_63);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA108_64 = input.LA(1);

                         
                        int index108_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_64);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA108_65 = input.LA(1);

                         
                        int index108_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_65);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA108_66 = input.LA(1);

                         
                        int index108_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_66);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA108_67 = input.LA(1);

                         
                        int index108_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_67);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA108_68 = input.LA(1);

                         
                        int index108_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_68);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA108_69 = input.LA(1);

                         
                        int index108_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_VerilogA()) ) {s = 51;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index108_69);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA125_eotS =
        "\15\uffff";
    static final String DFA125_eofS =
        "\15\uffff";
    static final String DFA125_minS =
        "\1\u008e\2\5\10\0\2\uffff";
    static final String DFA125_maxS =
        "\1\u008e\1\5\1\64\10\0\2\uffff";
    static final String DFA125_acceptS =
        "\13\uffff\1\1\1\2";
    static final String DFA125_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\2\uffff}>";
    static final String[] DFA125_transitionS = {
            "\1\1",
            "\1\2",
            "\1\11\3\uffff\1\7\5\uffff\1\4\3\uffff\1\5\2\uffff\1\6\2\uffff"+
            "\2\12\1\3\1\10\1\uffff\10\12\16\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA125_eot = DFA.unpackEncodedString(DFA125_eotS);
    static final short[] DFA125_eof = DFA.unpackEncodedString(DFA125_eofS);
    static final char[] DFA125_min = DFA.unpackEncodedStringToUnsignedChars(DFA125_minS);
    static final char[] DFA125_max = DFA.unpackEncodedStringToUnsignedChars(DFA125_maxS);
    static final short[] DFA125_accept = DFA.unpackEncodedString(DFA125_acceptS);
    static final short[] DFA125_special = DFA.unpackEncodedString(DFA125_specialS);
    static final short[][] DFA125_transition;

    static {
        int numStates = DFA125_transitionS.length;
        DFA125_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA125_transition[i] = DFA.unpackEncodedString(DFA125_transitionS[i]);
        }
    }

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = DFA125_eot;
            this.eof = DFA125_eof;
            this.min = DFA125_min;
            this.max = DFA125_max;
            this.accept = DFA125_accept;
            this.special = DFA125_special;
            this.transition = DFA125_transition;
        }
        public String getDescription() {
            return "788:1: level_sensitive_path_declaration : ( ( parallel_level_sensitive_path_description )=> parallel_level_sensitive_path_description ASSIGN path_delay_value SEMI | full_level_sensitive_path_description ASSIGN path_delay_value SEMI );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_3 = input.LA(1);

                         
                        int index125_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA125_4 = input.LA(1);

                         
                        int index125_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA125_5 = input.LA(1);

                         
                        int index125_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA125_6 = input.LA(1);

                         
                        int index125_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA125_7 = input.LA(1);

                         
                        int index125_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA125_8 = input.LA(1);

                         
                        int index125_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA125_9 = input.LA(1);

                         
                        int index125_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA125_10 = input.LA(1);

                         
                        int index125_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_VerilogA()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index125_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA132_eotS =
        "\53\uffff";
    static final String DFA132_eofS =
        "\1\uffff\1\5\51\uffff";
    static final String DFA132_minS =
        "\1\11\1\4\1\uffff\1\23\46\uffff\1\0";
    static final String DFA132_maxS =
        "\1\64\1\u00b3\1\uffff\1\64\46\uffff\1\0";
    static final String DFA132_acceptS =
        "\2\uffff\1\3\1\uffff\1\1\1\2\45\uffff";
    static final String DFA132_specialS =
        "\1\uffff\1\0\50\uffff\1\1}>";
    static final String[] DFA132_transitionS = {
            "\1\2\11\uffff\1\1\40\uffff\1\1",
            "\1\5\1\uffff\2\5\1\3\2\5\1\4\3\5\1\uffff\2\5\1\uffff\2\5\4"+
            "\uffff\2\5\2\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\21\5"+
            "\16\uffff\4\5\1\uffff\1\5\5\uffff\1\5\1\uffff\1\5\1\uffff\20"+
            "\5\2\uffff\4\5\13\uffff\33\5\24\uffff\1\5\17\uffff\2\5",
            "",
            "\1\52\40\uffff\1\52",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] DFA132_eot = DFA.unpackEncodedString(DFA132_eotS);
    static final short[] DFA132_eof = DFA.unpackEncodedString(DFA132_eofS);
    static final char[] DFA132_min = DFA.unpackEncodedStringToUnsignedChars(DFA132_minS);
    static final char[] DFA132_max = DFA.unpackEncodedStringToUnsignedChars(DFA132_maxS);
    static final short[] DFA132_accept = DFA.unpackEncodedString(DFA132_acceptS);
    static final short[] DFA132_special = DFA.unpackEncodedString(DFA132_specialS);
    static final short[][] DFA132_transition;

    static {
        int numStates = DFA132_transitionS.length;
        DFA132_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA132_transition[i] = DFA.unpackEncodedString(DFA132_transitionS[i]);
        }
    }

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = DFA132_eot;
            this.eof = DFA132_eof;
            this.min = DFA132_min;
            this.max = DFA132_max;
            this.accept = DFA132_accept;
            this.special = DFA132_special;
            this.transition = DFA132_transition;
        }
        public String getDescription() {
            return "845:1: lvalue : ( ( identifier range )=> identifier range | identifier | concatenation );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA132_1 = input.LA(1);

                         
                        int index132_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA132_1==DOT) ) {s = 3;}

                        else if ( (LA132_1==LBRACK) && (synpred18_VerilogA())) {s = 4;}

                        else if ( (LA132_1==EOF||LA132_1==SEMI||(LA132_1>=COMMA && LA132_1<=RPAREN)||(LA132_1>=LCURLY && LA132_1<=RCURLY)||(LA132_1>=COLON && LA132_1<=ASSIGN)||(LA132_1>=KW_TRIREG && LA132_1<=KW_ASSIGN)||(LA132_1>=IDENTIFIER && LA132_1<=LE)||(LA132_1>=PLUS && LA132_1<=MINUS)||LA132_1==QUESTION||LA132_1==BAND||LA132_1==BOR||(LA132_1>=BXOR && LA132_1<=ESCAPED_IDENTIFIER)||(LA132_1>=67 && LA132_1<=70)||LA132_1==72||LA132_1==78||LA132_1==80||(LA132_1>=82 && LA132_1<=97)||(LA132_1>=100 && LA132_1<=103)||(LA132_1>=115 && LA132_1<=141)||LA132_1==162||(LA132_1>=178 && LA132_1<=179)) ) {s = 5;}

                         
                        input.seek(index132_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA132_42 = input.LA(1);

                         
                        int index132_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_VerilogA()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index132_42);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 132, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA135_eotS =
        "\77\uffff";
    static final String DFA135_eofS =
        "\77\uffff";
    static final String DFA135_minS =
        "\1\11\1\5\2\6\3\5\1\6\2\5\2\0\3\uffff\2\0\3\uffff\5\0\3\uffff\3"+
        "\0\3\uffff\12\0\3\uffff\20\0";
    static final String DFA135_maxS =
        "\1\11\1\64\4\63\1\64\1\63\2\64\2\0\3\uffff\2\0\3\uffff\5\0\3\uffff"+
        "\3\0\3\uffff\12\0\3\uffff\20\0";
    static final String DFA135_acceptS =
        "\14\uffff\1\1\1\2\3\uffff\1\1\7\uffff\1\1\5\uffff\1\1\14\uffff"+
        "\1\1\22\uffff";
    static final String DFA135_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\uffff\1\4\2\uffff\1\5\1\6\3\uffff\1"+
        "\7\1\10\3\uffff\1\11\1\12\1\13\1\14\1\15\3\uffff\1\16\1\17\1\20"+
        "\3\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\3\uffff"+
        "\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47"+
        "\1\50\1\51\1\52}>";
    static final String[] DFA135_transitionS = {
            "\1\1",
            "\1\10\3\uffff\1\6\5\uffff\1\3\3\uffff\1\4\2\uffff\1\5\2\uffff"+
            "\2\11\1\2\1\7\1\uffff\10\11\16\uffff\1\4",
            "\1\15\2\uffff\1\14\1\15\11\uffff\1\12\4\uffff\2\12\2\uffff"+
            "\1\13\2\uffff\1\12\1\uffff\1\12\1\uffff\20\12",
            "\1\15\2\uffff\1\21\1\15\11\uffff\1\17\4\uffff\2\17\2\uffff"+
            "\1\20\2\uffff\1\17\1\uffff\1\17\1\uffff\20\17",
            "\1\24\1\15\1\uffff\1\25\1\31\1\15\1\26\10\uffff\1\27\4\uffff"+
            "\2\27\2\uffff\1\30\2\uffff\1\27\1\uffff\1\27\1\uffff\20\27",
            "\1\34\1\15\2\uffff\1\37\1\15\11\uffff\1\35\4\uffff\2\35\2"+
            "\uffff\1\36\2\uffff\1\35\1\uffff\1\35\1\uffff\20\35",
            "\1\50\3\uffff\1\46\5\uffff\1\43\3\uffff\1\44\2\uffff\1\45"+
            "\2\uffff\2\51\1\42\1\47\1\uffff\10\51\16\uffff\1\44",
            "\1\15\2\uffff\1\54\1\15\11\uffff\1\52\4\uffff\2\52\2\uffff"+
            "\1\53\2\uffff\1\52\1\uffff\1\52\1\uffff\20\52",
            "\1\65\3\uffff\1\63\5\uffff\1\60\3\uffff\1\61\2\uffff\1\62"+
            "\2\uffff\2\66\1\57\1\64\1\uffff\10\66\16\uffff\1\61",
            "\1\75\3\uffff\1\73\5\uffff\1\70\3\uffff\1\71\2\uffff\1\72"+
            "\2\uffff\2\76\1\67\1\74\1\uffff\10\76\16\uffff\1\71",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA135_eot = DFA.unpackEncodedString(DFA135_eotS);
    static final short[] DFA135_eof = DFA.unpackEncodedString(DFA135_eofS);
    static final char[] DFA135_min = DFA.unpackEncodedStringToUnsignedChars(DFA135_minS);
    static final char[] DFA135_max = DFA.unpackEncodedStringToUnsignedChars(DFA135_maxS);
    static final short[] DFA135_accept = DFA.unpackEncodedString(DFA135_acceptS);
    static final short[] DFA135_special = DFA.unpackEncodedString(DFA135_specialS);
    static final short[][] DFA135_transition;

    static {
        int numStates = DFA135_transitionS.length;
        DFA135_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA135_transition[i] = DFA.unpackEncodedString(DFA135_transitionS[i]);
        }
    }

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = DFA135_eot;
            this.eof = DFA135_eof;
            this.min = DFA135_min;
            this.max = DFA135_max;
            this.accept = DFA135_accept;
            this.special = DFA135_special;
            this.transition = DFA135_transition;
        }
        public String getDescription() {
            return "852:1: concatenation : ( ( LCURLY expression LCURLY )=> LCURLY expression LCURLY expression ( COMMA expression )* RCURLY RCURLY | LCURLY expression ( COMMA expression )* RCURLY );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA135_2 = input.LA(1);

                         
                        int index135_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA135_2==LE||(LA135_2>=PLUS && LA135_2<=MINUS)||LA135_2==BAND||LA135_2==BOR||(LA135_2>=BXOR && LA135_2<=SL)) ) {s = 10;}

                        else if ( (LA135_2==QUESTION) ) {s = 11;}

                        else if ( (LA135_2==LCURLY) && (synpred19_VerilogA())) {s = 12;}

                        else if ( (LA135_2==COMMA||LA135_2==RCURLY) ) {s = 13;}

                         
                        input.seek(index135_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA135_3 = input.LA(1);

                         
                        int index135_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA135_3==LE||(LA135_3>=PLUS && LA135_3<=MINUS)||LA135_3==BAND||LA135_3==BOR||(LA135_3>=BXOR && LA135_3<=SL)) ) {s = 15;}

                        else if ( (LA135_3==QUESTION) ) {s = 16;}

                        else if ( (LA135_3==LCURLY) && (synpred19_VerilogA())) {s = 17;}

                        else if ( (LA135_3==COMMA||LA135_3==RCURLY) ) {s = 13;}

                         
                        input.seek(index135_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA135_4 = input.LA(1);

                         
                        int index135_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA135_4==LPAREN) ) {s = 20;}

                        else if ( (LA135_4==DOT) ) {s = 21;}

                        else if ( (LA135_4==LBRACK) ) {s = 22;}

                        else if ( (LA135_4==LE||(LA135_4>=PLUS && LA135_4<=MINUS)||LA135_4==BAND||LA135_4==BOR||(LA135_4>=BXOR && LA135_4<=SL)) ) {s = 23;}

                        else if ( (LA135_4==QUESTION) ) {s = 24;}

                        else if ( (LA135_4==LCURLY) && (synpred19_VerilogA())) {s = 25;}

                        else if ( (LA135_4==COMMA||LA135_4==RCURLY) ) {s = 13;}

                         
                        input.seek(index135_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA135_5 = input.LA(1);

                         
                        int index135_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA135_5==LPAREN) ) {s = 28;}

                        else if ( (LA135_5==LE||(LA135_5>=PLUS && LA135_5<=MINUS)||LA135_5==BAND||LA135_5==BOR||(LA135_5>=BXOR && LA135_5<=SL)) ) {s = 29;}

                        else if ( (LA135_5==QUESTION) ) {s = 30;}

                        else if ( (LA135_5==LCURLY) && (synpred19_VerilogA())) {s = 31;}

                        else if ( (LA135_5==COMMA||LA135_5==RCURLY) ) {s = 13;}

                         
                        input.seek(index135_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA135_7 = input.LA(1);

                         
                        int index135_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA135_7==LE||(LA135_7>=PLUS && LA135_7<=MINUS)||LA135_7==BAND||LA135_7==BOR||(LA135_7>=BXOR && LA135_7<=SL)) ) {s = 42;}

                        else if ( (LA135_7==QUESTION) ) {s = 43;}

                        else if ( (LA135_7==LCURLY) && (synpred19_VerilogA())) {s = 44;}

                        else if ( (LA135_7==COMMA||LA135_7==RCURLY) ) {s = 13;}

                         
                        input.seek(index135_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA135_10 = input.LA(1);

                         
                        int index135_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA135_11 = input.LA(1);

                         
                        int index135_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA135_15 = input.LA(1);

                         
                        int index135_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA135_16 = input.LA(1);

                         
                        int index135_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_16);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA135_20 = input.LA(1);

                         
                        int index135_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_20);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA135_21 = input.LA(1);

                         
                        int index135_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_21);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA135_22 = input.LA(1);

                         
                        int index135_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_22);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA135_23 = input.LA(1);

                         
                        int index135_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_23);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA135_24 = input.LA(1);

                         
                        int index135_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_24);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA135_28 = input.LA(1);

                         
                        int index135_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_28);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA135_29 = input.LA(1);

                         
                        int index135_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_29);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA135_30 = input.LA(1);

                         
                        int index135_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_30);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA135_34 = input.LA(1);

                         
                        int index135_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_34);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA135_35 = input.LA(1);

                         
                        int index135_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_35);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA135_36 = input.LA(1);

                         
                        int index135_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_36);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA135_37 = input.LA(1);

                         
                        int index135_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_37);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA135_38 = input.LA(1);

                         
                        int index135_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_38);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA135_39 = input.LA(1);

                         
                        int index135_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_39);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA135_40 = input.LA(1);

                         
                        int index135_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_40);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA135_41 = input.LA(1);

                         
                        int index135_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_41);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA135_42 = input.LA(1);

                         
                        int index135_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_42);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA135_43 = input.LA(1);

                         
                        int index135_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_43);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA135_47 = input.LA(1);

                         
                        int index135_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_47);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA135_48 = input.LA(1);

                         
                        int index135_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_48);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA135_49 = input.LA(1);

                         
                        int index135_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_49);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA135_50 = input.LA(1);

                         
                        int index135_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_50);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA135_51 = input.LA(1);

                         
                        int index135_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_51);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA135_52 = input.LA(1);

                         
                        int index135_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_52);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA135_53 = input.LA(1);

                         
                        int index135_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_53);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA135_54 = input.LA(1);

                         
                        int index135_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_54);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA135_55 = input.LA(1);

                         
                        int index135_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_55);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA135_56 = input.LA(1);

                         
                        int index135_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_56);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA135_57 = input.LA(1);

                         
                        int index135_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_57);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA135_58 = input.LA(1);

                         
                        int index135_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_58);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA135_59 = input.LA(1);

                         
                        int index135_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_59);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA135_60 = input.LA(1);

                         
                        int index135_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_60);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA135_61 = input.LA(1);

                         
                        int index135_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_61);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA135_62 = input.LA(1);

                         
                        int index135_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_VerilogA()) ) {s = 44;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index135_62);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 135, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA137_eotS =
        "\55\uffff";
    static final String DFA137_eofS =
        "\3\uffff\1\5\51\uffff";
    static final String DFA137_minS =
        "\1\11\2\uffff\1\4\51\uffff";
    static final String DFA137_maxS =
        "\1\64\2\uffff\1\u00b3\51\uffff";
    static final String DFA137_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\3\1\4\1\5\1\3\45\uffff";
    static final String DFA137_specialS =
        "\1\0\2\uffff\1\1\51\uffff}>";
    static final String[] DFA137_transitionS = {
            "\1\5\5\uffff\1\2\3\uffff\1\3\2\uffff\1\4\4\uffff\1\1\1\6\27"+
            "\uffff\1\3",
            "",
            "",
            "\1\5\1\7\10\5\2\uffff\2\5\1\uffff\2\5\4\uffff\2\5\2\uffff"+
            "\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\21\5\16\uffff\4\5\1\uffff"+
            "\1\5\5\uffff\1\5\1\uffff\1\5\1\uffff\20\5\2\uffff\4\5\13\uffff"+
            "\33\5\24\uffff\1\5\17\uffff\2\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA137_eot = DFA.unpackEncodedString(DFA137_eotS);
    static final short[] DFA137_eof = DFA.unpackEncodedString(DFA137_eofS);
    static final char[] DFA137_min = DFA.unpackEncodedStringToUnsignedChars(DFA137_minS);
    static final char[] DFA137_max = DFA.unpackEncodedStringToUnsignedChars(DFA137_maxS);
    static final short[] DFA137_accept = DFA.unpackEncodedString(DFA137_acceptS);
    static final short[] DFA137_special = DFA.unpackEncodedString(DFA137_specialS);
    static final short[][] DFA137_transition;

    static {
        int numStates = DFA137_transitionS.length;
        DFA137_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA137_transition[i] = DFA.unpackEncodedString(DFA137_transitionS[i]);
        }
    }

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = DFA137_eot;
            this.eof = DFA137_eof;
            this.min = DFA137_min;
            this.max = DFA137_max;
            this.accept = DFA137_accept;
            this.special = DFA137_special;
            this.transition = DFA137_transition;
        }
        public String getDescription() {
            return "864:1: exp11 : ( STRING | NUMBER | ( function_call )=> function_call | lvalue | DEFINE );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_0 = input.LA(1);

                         
                        int index137_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA137_0==STRING) ) {s = 1;}

                        else if ( (LA137_0==NUMBER) ) {s = 2;}

                        else if ( (LA137_0==IDENTIFIER||LA137_0==ESCAPED_IDENTIFIER) ) {s = 3;}

                        else if ( (LA137_0==SYSTEM_TASK_NAME) && (synpred20_VerilogA())) {s = 4;}

                        else if ( (LA137_0==LCURLY) ) {s = 5;}

                        else if ( (LA137_0==DEFINE) ) {s = 6;}

                         
                        input.seek(index137_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA137_3 = input.LA(1);

                         
                        int index137_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA137_3==LPAREN) && (synpred20_VerilogA())) {s = 7;}

                        else if ( (LA137_3==EOF||LA137_3==SEMI||(LA137_3>=COMMA && LA137_3<=RBRACK)||(LA137_3>=KW_TRIREG && LA137_3<=KW_ASSIGN)||(LA137_3>=IDENTIFIER && LA137_3<=LE)||(LA137_3>=PLUS && LA137_3<=MINUS)||LA137_3==QUESTION||LA137_3==BAND||LA137_3==BOR||(LA137_3>=BXOR && LA137_3<=ESCAPED_IDENTIFIER)||(LA137_3>=67 && LA137_3<=70)||LA137_3==72||LA137_3==78||LA137_3==80||(LA137_3>=82 && LA137_3<=97)||(LA137_3>=100 && LA137_3<=103)||(LA137_3>=115 && LA137_3<=141)||LA137_3==162||(LA137_3>=178 && LA137_3<=179)) ) {s = 5;}

                         
                        input.seek(index137_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA140_eotS =
        "\44\uffff";
    static final String DFA140_eofS =
        "\1\1\43\uffff";
    static final String DFA140_minS =
        "\1\4\43\uffff";
    static final String DFA140_maxS =
        "\1\u00b3\43\uffff";
    static final String DFA140_acceptS =
        "\1\uffff\1\2\41\uffff\1\1";
    static final String DFA140_specialS =
        "\44\uffff}>";
    static final String[] DFA140_transitionS = {
            "\1\1\1\uffff\2\1\1\uffff\2\1\1\uffff\2\1\2\uffff\2\1\1\uffff"+
            "\1\1\1\43\4\uffff\2\43\2\uffff\1\1\2\uffff\1\43\1\uffff\1\43"+
            "\1\uffff\20\43\1\1\16\uffff\4\1\1\uffff\1\1\5\uffff\1\1\1\uffff"+
            "\1\1\1\uffff\20\1\2\uffff\4\1\13\uffff\33\1\24\uffff\1\1\17"+
            "\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA140_eot = DFA.unpackEncodedString(DFA140_eotS);
    static final short[] DFA140_eof = DFA.unpackEncodedString(DFA140_eofS);
    static final char[] DFA140_min = DFA.unpackEncodedStringToUnsignedChars(DFA140_minS);
    static final char[] DFA140_max = DFA.unpackEncodedStringToUnsignedChars(DFA140_maxS);
    static final short[] DFA140_accept = DFA.unpackEncodedString(DFA140_acceptS);
    static final short[] DFA140_special = DFA.unpackEncodedString(DFA140_specialS);
    static final short[][] DFA140_transition;

    static {
        int numStates = DFA140_transitionS.length;
        DFA140_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA140_transition[i] = DFA.unpackEncodedString(DFA140_transitionS[i]);
        }
    }

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = DFA140_eot;
            this.eof = DFA140_eof;
            this.min = DFA140_min;
            this.max = DFA140_max;
            this.accept = DFA140_accept;
            this.special = DFA140_special;
            this.transition = DFA140_transition;
        }
        public String getDescription() {
            return "()* loopback of 881:14: ( binary_operator exp9 )*";
        }
    }
    static final String DFA141_eotS =
        "\43\uffff";
    static final String DFA141_eofS =
        "\1\2\42\uffff";
    static final String DFA141_minS =
        "\1\4\42\uffff";
    static final String DFA141_maxS =
        "\1\u00b3\42\uffff";
    static final String DFA141_acceptS =
        "\1\uffff\1\1\1\2\40\uffff";
    static final String DFA141_specialS =
        "\43\uffff}>";
    static final String[] DFA141_transitionS = {
            "\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\2\2\2\uffff\2\2\1\uffff"+
            "\1\2\11\uffff\1\1\26\uffff\1\2\16\uffff\4\2\1\uffff\1\2\5\uffff"+
            "\1\2\1\uffff\1\2\1\uffff\20\2\2\uffff\4\2\13\uffff\33\2\24\uffff"+
            "\1\2\17\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA141_eot = DFA.unpackEncodedString(DFA141_eotS);
    static final short[] DFA141_eof = DFA.unpackEncodedString(DFA141_eofS);
    static final char[] DFA141_min = DFA.unpackEncodedStringToUnsignedChars(DFA141_minS);
    static final char[] DFA141_max = DFA.unpackEncodedStringToUnsignedChars(DFA141_maxS);
    static final short[] DFA141_accept = DFA.unpackEncodedString(DFA141_acceptS);
    static final short[] DFA141_special = DFA.unpackEncodedString(DFA141_specialS);
    static final short[][] DFA141_transition;

    static {
        int numStates = DFA141_transitionS.length;
        DFA141_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA141_transition[i] = DFA.unpackEncodedString(DFA141_transitionS[i]);
        }
    }

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = DFA141_eot;
            this.eof = DFA141_eof;
            this.min = DFA141_min;
            this.max = DFA141_max;
            this.accept = DFA141_accept;
            this.special = DFA141_special;
            this.transition = DFA141_transition;
        }
        public String getDescription() {
            return "885:14: ( QUESTION exp7 COLON exp7 )?";
        }
    }
    static final String DFA142_eotS =
        "\45\uffff";
    static final String DFA142_eofS =
        "\1\2\44\uffff";
    static final String DFA142_minS =
        "\1\4\44\uffff";
    static final String DFA142_maxS =
        "\1\u00b3\44\uffff";
    static final String DFA142_acceptS =
        "\1\uffff\1\1\1\2\42\uffff";
    static final String DFA142_specialS =
        "\45\uffff}>";
    static final String[] DFA142_transitionS = {
            "\1\2\1\1\2\2\1\uffff\2\2\1\uffff\2\2\2\uffff\2\2\1\uffff\2"+
            "\2\4\uffff\2\2\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\21"+
            "\2\16\uffff\4\2\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2\1\uffff"+
            "\20\2\2\uffff\4\2\13\uffff\33\2\24\uffff\1\2\17\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA142_eot = DFA.unpackEncodedString(DFA142_eotS);
    static final short[] DFA142_eof = DFA.unpackEncodedString(DFA142_eofS);
    static final char[] DFA142_min = DFA.unpackEncodedStringToUnsignedChars(DFA142_minS);
    static final char[] DFA142_max = DFA.unpackEncodedStringToUnsignedChars(DFA142_maxS);
    static final short[] DFA142_accept = DFA.unpackEncodedString(DFA142_acceptS);
    static final short[] DFA142_special = DFA.unpackEncodedString(DFA142_specialS);
    static final short[][] DFA142_transition;

    static {
        int numStates = DFA142_transitionS.length;
        DFA142_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA142_transition[i] = DFA.unpackEncodedString(DFA142_transitionS[i]);
        }
    }

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = DFA142_eot;
            this.eof = DFA142_eof;
            this.min = DFA142_min;
            this.max = DFA142_max;
            this.accept = DFA142_accept;
            this.special = DFA142_special;
            this.transition = DFA142_transition;
        }
        public String getDescription() {
            return "900:26: ( LPAREN expression_list RPAREN )?";
        }
    }
    static final String DFA145_eotS =
        "\103\uffff";
    static final String DFA145_eofS =
        "\1\1\102\uffff";
    static final String DFA145_minS =
        "\1\4\102\uffff";
    static final String DFA145_maxS =
        "\1\u00b3\102\uffff";
    static final String DFA145_acceptS =
        "\1\uffff\1\2\100\uffff\1\1";
    static final String DFA145_specialS =
        "\103\uffff}>";
    static final String[] DFA145_transitionS = {
            "\4\1\1\102\55\1\15\uffff\4\1\1\uffff\1\1\5\uffff\1\1\1\uffff"+
            "\1\1\1\uffff\20\1\2\uffff\4\1\13\uffff\34\1\2\uffff\3\1\1\uffff"+
            "\7\1\1\uffff\1\1\1\uffff\4\1\11\uffff\1\1\5\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA145_eot = DFA.unpackEncodedString(DFA145_eotS);
    static final short[] DFA145_eof = DFA.unpackEncodedString(DFA145_eofS);
    static final char[] DFA145_min = DFA.unpackEncodedStringToUnsignedChars(DFA145_minS);
    static final char[] DFA145_max = DFA.unpackEncodedStringToUnsignedChars(DFA145_maxS);
    static final short[] DFA145_accept = DFA.unpackEncodedString(DFA145_acceptS);
    static final short[] DFA145_special = DFA.unpackEncodedString(DFA145_specialS);
    static final short[][] DFA145_transition;

    static {
        int numStates = DFA145_transitionS.length;
        DFA145_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA145_transition[i] = DFA.unpackEncodedString(DFA145_transitionS[i]);
        }
    }

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = DFA145_eot;
            this.eof = DFA145_eof;
            this.min = DFA145_min;
            this.max = DFA145_max;
            this.accept = DFA145_accept;
            this.special = DFA145_special;
            this.transition = DFA145_transition;
        }
        public String getDescription() {
            return "()* loopback of 981:26: ( DOT local_identifier )*";
        }
    }
    static final String DFA149_eotS =
        "\13\uffff";
    static final String DFA149_eofS =
        "\13\uffff";
    static final String DFA149_minS =
        "\1\5\12\uffff";
    static final String DFA149_maxS =
        "\1\u00ae\12\uffff";
    static final String DFA149_acceptS =
        "\1\uffff\1\1\7\uffff\1\2\1\3";
    static final String DFA149_specialS =
        "\13\uffff}>";
    static final String[] DFA149_transitionS = {
            "\1\1\3\uffff\1\1\5\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff"+
            "\4\1\1\uffff\10\1\16\uffff\1\1\170\uffff\1\11\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA149_eot = DFA.unpackEncodedString(DFA149_eotS);
    static final short[] DFA149_eof = DFA.unpackEncodedString(DFA149_eofS);
    static final char[] DFA149_min = DFA.unpackEncodedStringToUnsignedChars(DFA149_minS);
    static final char[] DFA149_max = DFA.unpackEncodedStringToUnsignedChars(DFA149_maxS);
    static final short[] DFA149_accept = DFA.unpackEncodedString(DFA149_acceptS);
    static final short[] DFA149_special = DFA.unpackEncodedString(DFA149_specialS);
    static final short[][] DFA149_transition;

    static {
        int numStates = DFA149_transitionS.length;
        DFA149_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA149_transition[i] = DFA.unpackEncodedString(DFA149_transitionS[i]);
        }
    }

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = DFA149_eot;
            this.eof = DFA149_eof;
            this.min = DFA149_min;
            this.max = DFA149_max;
            this.accept = DFA149_accept;
            this.special = DFA149_special;
            this.transition = DFA149_transition;
        }
        public String getDescription() {
            return "1004:1: sub_event_expression : ( expression | 'posedge' expression | 'negedge' expression );";
        }
    }
 

    public static final BitSet FOLLOW_description_in_source_text84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000058L,0x000C000000000000L});
    public static final BitSet FOLLOW_EOF_in_source_text90 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_module_in_description115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_udp_in_description127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_description132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_module157 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_module_in_module169 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_list_of_ports_in_module181 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_module186 = new BitSet(new long[]{0x00100000000B0000L,0xFFF800F3FFFD4178L,0x000C000400003FFFL});
    public static final BitSet FOLLOW_module_item_in_module191 = new BitSet(new long[]{0x00100000000B0000L,0xFFF800F3FFFD4178L,0x000C000400003FFFL});
    public static final BitSet FOLLOW_69_in_module197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_list_of_ports222 = new BitSet(new long[]{0x00100000000803C0L});
    public static final BitSet FOLLOW_port_in_list_of_ports224 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_list_of_ports228 = new BitSet(new long[]{0x00100000000803C0L});
    public static final BitSet FOLLOW_port_in_list_of_ports230 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RPAREN_in_list_of_ports235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_port_expression_in_port254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_port268 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_port_in_port270 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_port272 = new BitSet(new long[]{0x0010000000080280L});
    public static final BitSet FOLLOW_port_expression_in_port275 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_port279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_port_reference_in_port_expression297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURLY_in_port_expression302 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_port_reference_in_port_expression304 = new BitSet(new long[]{0x0000000000000440L});
    public static final BitSet FOLLOW_COMMA_in_port_expression308 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_port_reference_in_port_expression310 = new BitSet(new long[]{0x0000000000000440L});
    public static final BitSet FOLLOW_RCURLY_in_port_expression315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_variable_in_port_reference362 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_port_reference364 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_port_reference366 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_port_reference368 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_port_reference370 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RBRACK_in_port_reference372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_variable_in_port_reference402 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_port_reference404 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_port_reference406 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RBRACK_in_port_reference408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_variable_in_port_reference420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_declaration_in_module_item452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_input_declaration_in_module_item464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_output_declaration_in_module_item476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inout_declaration_in_module_item488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_reg_declaration_in_module_item509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_time_declaration_in_module_item521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_declaration_in_module_item533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_declaration_in_module_item545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_declaration_in_module_item557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_gate_declaration_in_module_item563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_instantiation_in_module_item575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_override_in_module_item587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continuous_assign_in_module_item599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specify_block_in_module_item611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_initial_statement_in_module_item623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_always_statement_in_module_item635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_task_in_module_item647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_function_in_module_item659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_module_item665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_module_instantiation_in_instantiation688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_udp_instantiation_in_instantiation693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_udp715 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_UDP_in_udp717 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_udp720 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_variable_in_udp722 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_udp726 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_variable_in_udp728 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RPAREN_in_udp733 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_udp735 = new BitSet(new long[]{0x0000000000000000L,0x0000001000600000L});
    public static final BitSet FOLLOW_udp_declaration_in_udp746 = new BitSet(new long[]{0x0000000000000000L,0x0000001000601100L});
    public static final BitSet FOLLOW_udp_initial_statement_in_udp752 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001100L});
    public static final BitSet FOLLOW_table_definition_in_udp757 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_udp767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_udp_name_of_port_in_udp_port_list792 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_udp_port_list796 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_udp_name_of_port_in_udp_port_list798 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_output_declaration_in_udp_declaration826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_input_declaration_in_udp_declaration838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_reg_declaration_in_udp_declaration850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_udp_initial_statement875 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_output_terminal_name_in_udp_initial_statement877 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_udp_initial_statement879 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000E00L});
    public static final BitSet FOLLOW_init_val_in_udp_initial_statement881 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_udp_initial_statement883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_init_val924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_init_val936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_init_val948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_init_val955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_table_definition976 = new BitSet(new long[]{0xFFFFFFFFFFFFFFE0L,0xFFFFFFFFFFFFFFFFL,0x000FFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_table_entries_in_table_definition978 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_table_definition980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_table_entries1029 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFDFFFL,0x000FFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_SEMI_in_table_entries1041 = new BitSet(new long[]{0xFFFFFFFFFFFFFFE2L,0xFFFFFFFFFFFFDFFFL,0x000FFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_78_in_task1066 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_task_in_task1068 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_task1070 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_tf_declaration_in_task1081 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_or_null_in_task1093 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_task1103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_function1128 = new BitSet(new long[]{0x0010000000080800L,0x00000000000C0000L});
    public static final BitSet FOLLOW_range_or_type_in_function1131 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_function_in_function1135 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_function1137 = new BitSet(new long[]{0x0000000000000000L,0x0000007000FC0000L});
    public static final BitSet FOLLOW_tf_declaration_in_function1148 = new BitSet(new long[]{0x00300000006E0200L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_in_function1160 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_function1170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_range_in_range_or_type1195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_range_or_type1207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_range_or_type1219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_declaration_in_tf_declaration1244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_output_declaration_in_tf_declaration1256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_input_declaration_in_tf_declaration1268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inout_declaration_in_tf_declaration1280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_reg_declaration_in_tf_declaration1292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_time_declaration_in_tf_declaration1304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_declaration_in_tf_declaration1316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_declaration_in_tf_declaration1328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_declaration_in_tf_declaration1340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_parameter_declaration1371 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_range_in_parameter_declaration1374 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_list_of_param_assignments_in_parameter_declaration1378 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_parameter_declaration1380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_param_assignment_in_list_of_param_assignments1405 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_param_assignments1409 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_param_assignment_in_list_of_param_assignments1411 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_identifier_in_param_assignment1439 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_param_assignment1441 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_param_assignment1443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_range_in_port_range_name1461 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_variables_in_port_range_name1465 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_port_range_name1468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_input_declaration1486 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_port_range_name_in_input_declaration1489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_output_declaration1514 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_port_range_name_in_output_declaration1517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_inout_declaration1542 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_port_range_name_in_inout_declaration1545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_net_type_in_net_declaration1591 = new BitSet(new long[]{0x00100000000C0800L,0x0000000C00000000L});
    public static final BitSet FOLLOW_expandrange_in_net_declaration1594 = new BitSet(new long[]{0x00100000000C0800L,0x0000000C00000000L});
    public static final BitSet FOLLOW_delay_in_net_declaration1599 = new BitSet(new long[]{0x00100000000C0800L,0x0000000C00000000L});
    public static final BitSet FOLLOW_list_of_assigned_variables_in_net_declaration1614 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_net_declaration1616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_TRIREG_in_net_declaration1628 = new BitSet(new long[]{0x00100000000C0820L,0x0000000C00000000L});
    public static final BitSet FOLLOW_charge_strength_in_net_declaration1631 = new BitSet(new long[]{0x00100000000C0800L,0x0000000C00000000L});
    public static final BitSet FOLLOW_expandrange_in_net_declaration1636 = new BitSet(new long[]{0x00100000000C0000L});
    public static final BitSet FOLLOW_delay_in_net_declaration1641 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_variables_in_net_declaration1656 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_net_declaration1658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_net_type0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_expandrange1826 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_range_in_expandrange1828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_expandrange1833 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_range_in_expandrange1835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_range_in_expandrange1840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_reg_declaration1865 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_range_in_reg_declaration1868 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_list_of_register_variables_in_reg_declaration1872 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_reg_declaration1874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_time_declaration1899 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_list_of_register_variables_in_time_declaration1901 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_time_declaration1903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_integer_declaration1928 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_list_of_register_variables_in_integer_declaration1930 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_integer_declaration1932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_real_declaration1957 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_variables_in_real_declaration1959 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_real_declaration1961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_event_declaration1986 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_event_in_event_declaration1988 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_COMMA_in_event_declaration1992 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_event_in_event_declaration1994 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_SEMI_in_event_declaration1999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_ASSIGN_in_continuous_assign2024 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_drive_strength_in_continuous_assign2028 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_delay_in_continuous_assign2033 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_list_of_assignments_in_continuous_assign2037 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_continuous_assign2039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_net_type_in_continuous_assign2051 = new BitSet(new long[]{0x00100000000C0A20L,0x0000000C00000000L});
    public static final BitSet FOLLOW_drive_strength_in_continuous_assign2054 = new BitSet(new long[]{0x00100000000C0A20L,0x0000000C00000000L});
    public static final BitSet FOLLOW_expandrange_in_continuous_assign2059 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_delay_in_continuous_assign2064 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_list_of_assignments_in_continuous_assign2079 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_continuous_assign2081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_parameter_override2106 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_list_of_param_assignments_in_parameter_override2108 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_parameter_override2110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_variable_in_list_of_variables2135 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_variables2139 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_variable_in_list_of_variables2141 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_name_of_variable_in_list_of_assigned_variables2169 = new BitSet(new long[]{0x0000000000004042L});
    public static final BitSet FOLLOW_ASSIGN_in_list_of_assigned_variables2173 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_list_of_assigned_variables2175 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_assigned_variables2183 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_variable_in_list_of_assigned_variables2185 = new BitSet(new long[]{0x0000000000004042L});
    public static final BitSet FOLLOW_ASSIGN_in_list_of_assigned_variables2189 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_list_of_assigned_variables2191 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_register_variable_in_list_of_register_variables2222 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_register_variables2226 = new BitSet(new long[]{0x0010000000080800L});
    public static final BitSet FOLLOW_register_variable_in_list_of_register_variables2228 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_name_of_register_in_register_variable2256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_memory_in_register_variable2268 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_register_variable2270 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_register_variable2272 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_register_variable2274 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_register_variable2276 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RBRACK_in_register_variable2278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_charge_strength2303 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_104_in_charge_strength2305 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_charge_strength2308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_charge_strength2320 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_105_in_charge_strength2322 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_charge_strength2324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_charge_strength2336 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_106_in_charge_strength2338 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_charge_strength2341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_drive_strength2366 = new BitSet(new long[]{0x0000000000000000L,0x0000780008000000L});
    public static final BitSet FOLLOW_strength0_in_drive_strength2368 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_drive_strength2370 = new BitSet(new long[]{0x0000000000000000L,0x0007800080000000L});
    public static final BitSet FOLLOW_strength1_in_drive_strength2372 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_drive_strength2374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_drive_strength2386 = new BitSet(new long[]{0x0000000000000000L,0x0007800080000000L});
    public static final BitSet FOLLOW_strength1_in_drive_strength2388 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_drive_strength2390 = new BitSet(new long[]{0x0000000000000000L,0x0000780008000000L});
    public static final BitSet FOLLOW_strength0_in_drive_strength2392 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_drive_strength2394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_strength00 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_strength10 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACK_in_range2562 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_range2564 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_range2566 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_range2568 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RBRACK_in_range2570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACK_in_range2582 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_range2584 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RBRACK_in_range2586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_in_list_of_assignments2611 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_assignments2615 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_assignment_in_list_of_assignments2617 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_gate_type_in_gate_declaration2643 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_drive_strength_in_gate_declaration2646 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_delay_in_gate_declaration2651 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_gate_instance_in_gate_declaration2665 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_COMMA_in_gate_declaration2669 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_gate_instance_in_gate_declaration2671 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_SEMI_in_gate_declaration2676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_gate_type0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POUND_in_delay3019 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_NUMBER_in_delay3021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POUND_in_delay3027 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_identifier_in_delay3029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POUND_in_delay3041 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_delay3043 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_mintypmax_expression_in_delay3045 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_delay3058 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_mintypmax_expression_in_delay3060 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_delay3068 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_mintypmax_expression_in_delay3070 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_delay3087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_gate_instance_in_gate_instance3113 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_gate_instance3118 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_terminal_in_gate_instance3120 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_gate_instance3124 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_terminal_in_gate_instance3126 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RPAREN_in_gate_instance3131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_UDP_in_udp_instantiation3149 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_drive_strength_in_udp_instantiation3152 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_delay_in_udp_instantiation3157 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_udp_instance_in_udp_instantiation3171 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_COMMA_in_udp_instantiation3175 = new BitSet(new long[]{0x00100000000C0020L});
    public static final BitSet FOLLOW_udp_instance_in_udp_instantiation3177 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_SEMI_in_udp_instantiation3182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_UDP_instance_in_udp_instance3201 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_udp_instance3206 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_terminal_in_udp_instance3208 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_udp_instance3212 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_terminal_in_udp_instance3214 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RPAREN_in_udp_instance3219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_terminal3244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_module_in_module_instantiation3277 = new BitSet(new long[]{0x00100000000C0000L});
    public static final BitSet FOLLOW_parameter_value_assignment_in_module_instantiation3280 = new BitSet(new long[]{0x00100000000C0000L});
    public static final BitSet FOLLOW_module_instance_in_module_instantiation3292 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_COMMA_in_module_instantiation3296 = new BitSet(new long[]{0x00100000000C0000L});
    public static final BitSet FOLLOW_module_instance_in_module_instantiation3298 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_SEMI_in_module_instantiation3303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POUND_in_parameter_value_assignment3328 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_parameter_value_assignment3330 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_parameter_value_assignment3332 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_parameter_value_assignment3336 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_parameter_value_assignment3338 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RPAREN_in_parameter_value_assignment3343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_instance_in_module_instance3368 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_module_instance3370 = new BitSet(new long[]{0x0010003FDE488360L});
    public static final BitSet FOLLOW_list_of_module_connections_in_module_instance3372 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_module_instance3374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_module_port_connection_in_list_of_module_connections3399 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_module_connections3403 = new BitSet(new long[]{0x0010003FDE488260L});
    public static final BitSet FOLLOW_module_port_connection_in_list_of_module_connections3405 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_named_port_connection_in_list_of_module_connections3420 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_module_connections3424 = new BitSet(new long[]{0x0010003FDE488360L});
    public static final BitSet FOLLOW_named_port_connection_in_list_of_module_connections3426 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_expression_in_module_port_connection3454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_named_port_connection3487 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_named_port_connection3489 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_named_port_connection3491 = new BitSet(new long[]{0x0010003FDE4882A0L});
    public static final BitSet FOLLOW_expression_in_named_port_connection3494 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_named_port_connection3498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_initial_statement3527 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_in_initial_statement3529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_141_in_always_statement3554 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_in_always_statement3556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_statement_or_null3587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMI_in_statement_or_null3592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blocking_assignment_in_statement3625 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_statement3627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_non_blocking_assignment_in_statement3647 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_statement3649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_statement_in_statement3661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_case_statement_in_statement3673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_loop_statement_in_statement3685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_procedural_timing_control_statement_in_statement3697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_wait_statement_in_statement3709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_trigger_in_statement3721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_seq_block_in_statement3733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_par_block_in_statement3745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_task_enable_in_statement3757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_system_task_enable_in_statement3769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disable_statement_in_statement3781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_procedural_continuous_assignment_in_statement3793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lvalue_in_assignment3818 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_assignment2_in_assignment3821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_assignment23850 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_assignment23853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lvalue_in_blocking_assignment3873 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_blocking_assignment3875 = new BitSet(new long[]{0x0030003FDE4C8220L});
    public static final BitSet FOLLOW_delay_or_event_control_in_blocking_assignment3879 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_blocking_assignment3885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lvalue_in_non_blocking_assignment3910 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_LE_in_non_blocking_assignment3912 = new BitSet(new long[]{0x0030003FDE4C8220L});
    public static final BitSet FOLLOW_delay_or_event_control_in_non_blocking_assignment3916 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_non_blocking_assignment3922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_142_in_conditional_statement3955 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_conditional_statement3957 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_conditional_statement3959 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_conditional_statement3961 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_or_null_in_conditional_statement3963 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_143_in_conditional_statement3977 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_or_null_in_conditional_statement3979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_case_keyword_in_case_statement4006 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_case_statement4008 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_case_statement4010 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_case_statement4012 = new BitSet(new long[]{0x0010003FDE488220L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_case_item_in_case_statement4015 = new BitSet(new long[]{0x0010003FDE488220L,0x0000000000000000L,0x0000000000110000L});
    public static final BitSet FOLLOW_144_in_case_statement4019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_case_keyword0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_case_item4077 = new BitSet(new long[]{0x0000000000001040L});
    public static final BitSet FOLLOW_COMMA_in_case_item4081 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_case_item4083 = new BitSet(new long[]{0x0000000000001040L});
    public static final BitSet FOLLOW_COLON_in_case_item4088 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_or_null_in_case_item4090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_148_in_case_item4102 = new BitSet(new long[]{0x00300000006E1210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_COLON_in_case_item4105 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_or_null_in_case_item4109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_149_in_loop_statement4134 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_in_loop_statement4136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_150_in_loop_statement4148 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_loop_statement4150 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_loop_statement4152 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_loop_statement4154 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_in_loop_statement4156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_151_in_loop_statement4168 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_loop_statement4170 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_loop_statement4172 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_loop_statement4174 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_in_loop_statement4176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_152_in_loop_statement4188 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_loop_statement4190 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_assignment_in_loop_statement4192 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_loop_statement4194 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_loop_statement4196 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_loop_statement4198 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_assignment_in_loop_statement4200 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_loop_statement4202 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_in_loop_statement4204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delay_or_event_control_in_procedural_timing_control_statement4229 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_or_null_in_procedural_timing_control_statement4231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_153_in_wait_statement4256 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_wait_statement4258 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_wait_statement4260 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_wait_statement4262 = new BitSet(new long[]{0x00300000006E0210L,0x0000007000FC0000L,0x00000003AFEE4000L});
    public static final BitSet FOLLOW_statement_or_null_in_wait_statement4264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRIGGER_in_event_trigger4289 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_event_in_event_trigger4291 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_event_trigger4293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_154_in_disable_statement4318 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_disable_statement4320 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_disable_statement4322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_155_in_seq_block4347 = new BitSet(new long[]{0x00300000006E1200L,0x0000000000000000L,0x00000003BFEE4000L});
    public static final BitSet FOLLOW_COLON_in_seq_block4359 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_block_in_seq_block4361 = new BitSet(new long[]{0x00300000006E0200L,0x00000070001C0000L,0x00000003BFEE4000L});
    public static final BitSet FOLLOW_block_declaration_in_seq_block4364 = new BitSet(new long[]{0x00300000006E0200L,0x00000070001C0000L,0x00000003BFEE4000L});
    public static final BitSet FOLLOW_statement_in_seq_block4380 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003BFEE4000L});
    public static final BitSet FOLLOW_156_in_seq_block4385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_157_in_par_block4403 = new BitSet(new long[]{0x00300000006E1200L,0x0000000000000000L,0x00000003EFEE4000L});
    public static final BitSet FOLLOW_COLON_in_par_block4415 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_name_of_block_in_par_block4417 = new BitSet(new long[]{0x00300000006E0200L,0x00000070001C0000L,0x00000003EFEE4000L});
    public static final BitSet FOLLOW_block_declaration_in_par_block4420 = new BitSet(new long[]{0x00300000006E0200L,0x00000070001C0000L,0x00000003EFEE4000L});
    public static final BitSet FOLLOW_statement_in_par_block4436 = new BitSet(new long[]{0x00300000006E0200L,0x0000000000000000L,0x00000003EFEE4000L});
    public static final BitSet FOLLOW_158_in_par_block4441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_declaration_in_block_declaration4466 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_reg_declaration_in_block_declaration4478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_declaration_in_block_declaration4490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_declaration_in_block_declaration4502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_time_declaration_in_block_declaration4514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_declaration_in_block_declaration4526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_task_in_task_enable4552 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_LPAREN_in_task_enable4556 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_task_enable4558 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_task_enable4561 = new BitSet(new long[]{0x0010003FDE4882E0L});
    public static final BitSet FOLLOW_expression_in_task_enable4564 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RPAREN_in_task_enable4570 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_task_enable4576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SYSTEM_TASK_NAME_in_system_task_enable4601 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_LPAREN_in_system_task_enable4605 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_system_task_enable4607 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_task_enable4610 = new BitSet(new long[]{0x0010003FDE4882E0L});
    public static final BitSet FOLLOW_expression_in_system_task_enable4613 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RPAREN_in_system_task_enable4619 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_task_enable4625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_ASSIGN_in_procedural_continuous_assignment4650 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_assignment_in_procedural_continuous_assignment4652 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_procedural_continuous_assignment4654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_159_in_procedural_continuous_assignment4666 = new BitSet(new long[]{0x0010000000080200L});
    public static final BitSet FOLLOW_lvalue_in_procedural_continuous_assignment4668 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_procedural_continuous_assignment4670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_160_in_procedural_continuous_assignment4682 = new BitSet(new long[]{0x00100000000C0220L});
    public static final BitSet FOLLOW_assignment_in_procedural_continuous_assignment4684 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_procedural_continuous_assignment4686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_161_in_procedural_continuous_assignment4698 = new BitSet(new long[]{0x0010000000080200L});
    public static final BitSet FOLLOW_lvalue_in_procedural_continuous_assignment4700 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_procedural_continuous_assignment4702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delay_control_in_delay_or_event_control4727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_control_in_delay_or_event_control4739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_162_in_specify_block4768 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x00000FF800004000L});
    public static final BitSet FOLLOW_specify_item_in_specify_block4771 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x00000FF800004000L});
    public static final BitSet FOLLOW_163_in_specify_block4775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_param_declaration_in_specify_item4800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_path_declaration_in_specify_item4818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_system_timing_check_in_specify_item4830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sdpd_in_specify_item4842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_164_in_spec_param_declaration4867 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_specparam_assignments_in_spec_param_declaration4869 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_spec_param_declaration4871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specparam_assignment_in_list_of_specparam_assignments4896 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_specparam_assignments4900 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specparam_assignment_in_list_of_specparam_assignments4902 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_identifier_in_specparam_assignment4930 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_specparam_assignment4932 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_specparam_assignment4934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_simple_path_declaration_in_path_declaration4969 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_path_declaration4971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_level_sensitive_path_declaration_in_path_declaration4993 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_path_declaration4995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_edge_sensitive_path_declaration_in_path_declaration5007 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_path_declaration5009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallel_path_description_in_simple_path_declaration5044 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_simple_path_declaration5046 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_value_in_simple_path_declaration5048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_full_path_descriptor_in_simple_path_declaration5060 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_simple_path_declaration5062 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_value_in_simple_path_declaration5064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parallel_path_description5089 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_parallel_path_description5091 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_PPATH_in_parallel_path_description5093 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_parallel_path_description5095 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_parallel_path_description5097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_full_path_descriptor5122 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_path_terminals_in_full_path_descriptor5124 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_FPATH_in_full_path_descriptor5127 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_path_terminals_in_full_path_descriptor5129 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_full_path_descriptor5131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_list_of_path_terminals5156 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_path_terminals5160 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_list_of_path_terminals5162 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_identifier_in_specify_terminal_descriptor5206 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_specify_terminal_descriptor5208 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_specify_terminal_descriptor5210 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_specify_terminal_descriptor5212 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_specify_terminal_descriptor5214 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RBRACK_in_specify_terminal_descriptor5216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_specify_terminal_descriptor5247 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_specify_terminal_descriptor5249 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_specify_terminal_descriptor5251 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_RBRACK_in_specify_terminal_descriptor5253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_specify_terminal_descriptor5265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_path_delay_expression_in_path_delay_value5296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_path_delay_value5308 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_list_of_path_delay_expressions_in_path_delay_value5310 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_path_delay_value5312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5337 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_list_of_path_delay_expressions5339 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5341 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_path_delay_expressions5348 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5350 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_list_of_path_delay_expressions5359 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5361 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_list_of_path_delay_expressions5363 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5379 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_list_of_path_delay_expressions5381 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_expression_in_list_of_path_delay_expressions5383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_mintypmax_expression_in_path_delay_expression5415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_165_in_system_timing_check5440 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_system_timing_check5442 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5444 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5446 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5448 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5450 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5464 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5468 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_notify_register_in_system_timing_check5470 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_system_timing_check5475 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_timing_check5477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_166_in_system_timing_check5489 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_system_timing_check5491 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5493 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5495 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5497 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5499 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5513 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5517 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_notify_register_in_system_timing_check5519 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_system_timing_check5524 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_timing_check5526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_167_in_system_timing_check5538 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_system_timing_check5540 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_controlled_timing_check_event_in_system_timing_check5542 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5544 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5558 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5562 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_notify_register_in_system_timing_check5564 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_system_timing_check5569 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_timing_check5571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_168_in_system_timing_check5583 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_system_timing_check5585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_controlled_timing_check_event_in_system_timing_check5587 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5589 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5603 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5607 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_system_timing_check5609 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5611 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_notify_register_in_system_timing_check5613 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_system_timing_check5623 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_timing_check5625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_169_in_system_timing_check5637 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_system_timing_check5639 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5641 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5643 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5645 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5647 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5662 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5666 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_notify_register_in_system_timing_check5668 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_system_timing_check5673 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_timing_check5675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_170_in_system_timing_check5687 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_system_timing_check5689 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_controlled_timing_check_event_in_system_timing_check5691 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5693 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5707 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5709 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5711 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5727 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_notify_register_in_system_timing_check5729 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_system_timing_check5734 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_timing_check5736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_171_in_system_timing_check5748 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_system_timing_check5750 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5752 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5754 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_timing_check_event_in_system_timing_check5756 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5758 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5772 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5774 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_limit_in_system_timing_check5776 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_system_timing_check5792 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_notify_register_in_system_timing_check5794 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_system_timing_check5799 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_system_timing_check5801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_timing_check_event_control_in_timing_check_event5827 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_timing_check_event5831 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_172_in_timing_check_event5843 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_condition_in_timing_check_event5845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_timing_check_event_control_in_controlled_timing_check_event5873 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_controlled_timing_check_event5875 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_172_in_controlled_timing_check_event5887 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_timing_check_condition_in_controlled_timing_check_event5889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_173_in_timing_check_event_control5917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_174_in_timing_check_event_control5929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_edge_control_specifier_in_timing_check_event_control5941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_175_in_edge_control_specifier5966 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_edge_control_specifier5968 = new BitSet(new long[]{0x0000000000088000L,0x0000000000000000L,0x0003000000000000L});
    public static final BitSet FOLLOW_edge_descriptor_in_edge_control_specifier5970 = new BitSet(new long[]{0x0000000000002040L});
    public static final BitSet FOLLOW_COMMA_in_edge_control_specifier5974 = new BitSet(new long[]{0x0000000000088000L,0x0000000000000000L,0x0003000000000000L});
    public static final BitSet FOLLOW_edge_descriptor_in_edge_control_specifier5976 = new BitSet(new long[]{0x0000000000002040L});
    public static final BitSet FOLLOW_RBRACK_in_edge_control_specifier5981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_176_in_edge_descriptor6015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_177_in_edge_descriptor6019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_edge_descriptor6032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_edge_descriptor6048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scalar_timing_check_condition_in_timing_check_condition6069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_scalar_timing_check_condition6094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_timing_check_limit6119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_register_in_notify_register6144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallel_level_sensitive_path_description_in_level_sensitive_path_declaration6169 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_level_sensitive_path_declaration6177 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_value_in_level_sensitive_path_declaration6179 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_level_sensitive_path_declaration6181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_full_level_sensitive_path_description_in_level_sensitive_path_declaration6192 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_level_sensitive_path_declaration6200 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_value_in_level_sensitive_path_declaration6202 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_level_sensitive_path_declaration6204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_142_in_parallel_level_sensitive_path_description6229 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_parallel_level_sensitive_path_description6231 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_parallel_level_sensitive_path_description6233 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_parallel_level_sensitive_path_description6235 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_parallel_level_sensitive_path_description6241 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_parallel_level_sensitive_path_description6243 = new BitSet(new long[]{0x0000000006800000L});
    public static final BitSet FOLLOW_polarity_operator_in_parallel_level_sensitive_path_description6246 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_PPATH_in_parallel_level_sensitive_path_description6261 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_parallel_level_sensitive_path_description6263 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_parallel_level_sensitive_path_description6265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_142_in_full_level_sensitive_path_description6283 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_full_level_sensitive_path_description6285 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_full_level_sensitive_path_description6287 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_full_level_sensitive_path_description6289 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_full_level_sensitive_path_description6295 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_path_terminals_in_full_level_sensitive_path_description6297 = new BitSet(new long[]{0x0000000007000000L});
    public static final BitSet FOLLOW_polarity_operator_in_full_level_sensitive_path_description6300 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_FPATH_in_full_level_sensitive_path_description6315 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_path_terminals_in_full_level_sensitive_path_description6317 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_full_level_sensitive_path_description6319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_polarity_operator0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_142_in_edge_sensitive_path_declaration6348 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_edge_sensitive_path_declaration6350 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_edge_sensitive_path_declaration6352 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_edge_sensitive_path_declaration6354 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_edge_sensitive_path_declaration6367 = new BitSet(new long[]{0x0010000000080000L,0x0000000000000000L,0x0000600000000000L});
    public static final BitSet FOLLOW_edge_identifier_in_edge_sensitive_path_declaration6370 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_edge_sensitive_path_declaration6374 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_set_in_edge_sensitive_path_declaration6380 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_edge_sensitive_path_declaration6394 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_list_of_path_terminals_in_edge_sensitive_path_declaration6404 = new BitSet(new long[]{0x0000000006001000L});
    public static final BitSet FOLLOW_specify_terminal_descriptor_in_edge_sensitive_path_declaration6421 = new BitSet(new long[]{0x0000000006001000L});
    public static final BitSet FOLLOW_polarity_operator_in_edge_sensitive_path_declaration6433 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_edge_sensitive_path_declaration6437 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_data_source_expression_in_edge_sensitive_path_declaration6439 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_edge_sensitive_path_declaration6445 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_edge_sensitive_path_declaration6448 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_edge_sensitive_path_declaration6451 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_path_delay_value_in_edge_sensitive_path_declaration6453 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_edge_sensitive_path_declaration6455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_data_source_expression6480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_edge_identifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_142_in_sdpd6535 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_sdpd6537 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_sdpd6539 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_sdpd6541 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_simple_path_declaration_in_sdpd6544 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_SEMI_in_sdpd6547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_lvalue6578 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_range_in_lvalue6580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_lvalue6592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_concatenation_in_lvalue6604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURLY_in_concatenation6640 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_concatenation6642 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LCURLY_in_concatenation6652 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_concatenation6654 = new BitSet(new long[]{0x0000000000000440L});
    public static final BitSet FOLLOW_COMMA_in_concatenation6658 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_concatenation6660 = new BitSet(new long[]{0x0000000000000440L});
    public static final BitSet FOLLOW_RCURLY_in_concatenation6665 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_RCURLY_in_concatenation6667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURLY_in_concatenation6679 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_concatenation6681 = new BitSet(new long[]{0x0000000000000440L});
    public static final BitSet FOLLOW_COMMA_in_concatenation6685 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_concatenation6687 = new BitSet(new long[]{0x0000000000000440L});
    public static final BitSet FOLLOW_RCURLY_in_concatenation6692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_mintypmax_expression6717 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_COLON_in_mintypmax_expression6721 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_mintypmax_expression6723 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_mintypmax_expression6725 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_mintypmax_expression6727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_exp116756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_exp116761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_function_call_in_exp116772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lvalue_in_exp116777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEFINE_in_exp116782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exp11_in_exp106807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_exp106811 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_exp106813 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_exp106815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exp10_in_exp96840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_operator_in_exp96844 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_exp9_in_exp96847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exp9_in_exp86872 = new BitSet(new long[]{0x000FFFF506100002L});
    public static final BitSet FOLLOW_binary_operator_in_exp86875 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_exp9_in_exp86878 = new BitSet(new long[]{0x000FFFF506100002L});
    public static final BitSet FOLLOW_exp8_in_exp76906 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_QUESTION_in_exp76910 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_exp7_in_exp76912 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_exp76914 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_exp7_in_exp76916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exp7_in_exp06944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exp0_in_expression6969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_function_in_function_call7004 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_function_call7006 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_list_in_function_call7008 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_function_call7010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SYSTEM_TASK_NAME_in_function_call7022 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_LPAREN_in_function_call7026 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_list_in_function_call7028 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_function_call7030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expression_list7058 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_expression_list7062 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_expression_list7064 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_set_in_unary_operator0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_binary_operator0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_module7684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_port7705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_variable7722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_UDP7744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_UDP_instance7757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_event7777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_task7798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_real_identifier7816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_memory7835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_net_identifier7854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_function7871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_specparam_identifier7884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_udp_name_of_port7901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_register7918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_gate_instance7930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_instance7947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_name_of_block7967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_output_terminal_name7980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_path_in_identifier8002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_identifier_in_identifier_path8027 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_DOT_in_identifier_path8031 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_local_identifier_in_identifier_path8033 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_set_in_local_identifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POUND_in_delay_control8098 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_NUMBER_in_delay_control8100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POUND_in_delay_control8112 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_identifier_in_delay_control8114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POUND_in_delay_control8126 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_delay_control8128 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_mintypmax_expression_in_delay_control8130 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_delay_control8132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AT_in_event_control8157 = new BitSet(new long[]{0x0010000000080000L});
    public static final BitSet FOLLOW_identifier_in_event_control8159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AT_in_event_control8171 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_LPAREN_in_event_control8173 = new BitSet(new long[]{0x0010003FDE488220L,0x0000000000000000L,0x0000600000000000L});
    public static final BitSet FOLLOW_event_expression_in_event_control8175 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_RPAREN_in_event_control8177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sub_event_expression_in_event_expression8202 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_117_in_event_expression8206 = new BitSet(new long[]{0x0010003FDE488220L,0x0000000000000000L,0x0000600000000000L});
    public static final BitSet FOLLOW_sub_event_expression_in_event_expression8208 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_expression_in_sub_event_expression8236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_173_in_sub_event_expression8248 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_sub_event_expression8250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_174_in_sub_event_expression8262 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_sub_event_expression8264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_define_directive_in_directive8285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_include_directive_in_directive8290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_178_in_define_directive8301 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_define_directive8303 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_define_directive8305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_179_in_include_directive8316 = new BitSet(new long[]{0x0010000008080000L});
    public static final BitSet FOLLOW_identifier_in_include_directive8320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_include_directive8324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_variable_in_synpred1_VerilogA342 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_synpred1_VerilogA344 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_synpred1_VerilogA346 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_synpred1_VerilogA348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_of_variable_in_synpred2_VerilogA386 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_synpred2_VerilogA388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_module_instantiation_in_synpred3_VerilogA683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_net_type_in_synpred4_VerilogA1572 = new BitSet(new long[]{0x0000000000000802L,0x0000000C00000000L});
    public static final BitSet FOLLOW_expandrange_in_synpred4_VerilogA1575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACK_in_synpred5_VerilogA2545 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_synpred5_VerilogA2547 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_synpred5_VerilogA2549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_synpred6_VerilogA3582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lvalue_in_synpred7_VerilogA3618 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ASSIGN_in_synpred7_VerilogA3620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lvalue_in_synpred8_VerilogA3640 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_LE_in_synpred8_VerilogA3642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_path_declaration_in_synpred9_VerilogA4813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_simple_path_declaration_in_synpred10_VerilogA4960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_level_sensitive_path_declaration_in_synpred11_VerilogA4984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallel_path_description_in_synpred12_VerilogA5035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred13_VerilogA5184 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_synpred13_VerilogA5186 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_synpred13_VerilogA5188 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_COLON_in_synpred13_VerilogA5190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred14_VerilogA5229 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_LBRACK_in_synpred14_VerilogA5231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_path_delay_expression_in_synpred15_VerilogA5291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallel_level_sensitive_path_description_in_synpred16_VerilogA6163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_list_of_path_terminals_in_synpred17_VerilogA6399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred18_VerilogA6563 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_range_in_synpred18_VerilogA6565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURLY_in_synpred19_VerilogA6623 = new BitSet(new long[]{0x0010003FDE488220L});
    public static final BitSet FOLLOW_expression_in_synpred19_VerilogA6625 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_LCURLY_in_synpred19_VerilogA6627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_function_call_in_synpred20_VerilogA6767 = new BitSet(new long[]{0x0000000000000002L});

}